[{"content":"PKI baseada em OpenSSL (parte 1) Fontes:\nhttps://openssl-ca.readthedocs.io/en/latest/index.html\nhttps://www.golinuxcloud.com/tutorial-pki-certificates-authority-ocsp/\nhttps://social.technet.microsoft.com/wiki/contents/articles/2900.offline-root-certification-authority-ca.aspx\nhttps://pki-tutorial.readthedocs.io/en/latest/index.html\nRoot CA airgapped É suposto o sistema que contém a RootCA ser airgapped, ter acesso controlado, e ser ligado apenas para emissão de novas CAs e revogação de CAs comprometidas. Neste exemplo, podemos colocar tudo no mesmo servidor mas deve-se tentar separar o mais possível a estrutura da RootCA das outras CAs.\nO primeiro passo é criar uma Root Certification Authority (RootCA), que só vai criar outras CAs.\nMudar para o utilizador root\n1 2 3 4 5 6 7  mkdir /root/ca \u0026amp;\u0026amp; cd $_ mkdir /root/ca/{certs,crl,newcerts,private} chmod 700 /root/ca/private touch /root/ca/index.txt echo 1000 \u0026gt; /root/ca/serial echo 1000 \u0026gt; /root/ca/crlnumber cat \u0026gt; /root/ca/openssl.cnf   /root/ca/openssl.cnf\n\r\rExpandir\r\r# OpenSSL root CA configuration file.\r# Copy to '/root/ca/openssl.cnf.\r[ ca ]\r# 'man ca'\rdefault_ca = CA_default\r[ CA_default ]\r# Directory and file locations.\rdir = /root/ca\rcerts = $dir/certs\rcrl_dir = $dir/crl\rnew_certs_dir = $dir/newcerts\rdatabase = $dir/index.txt\rserial = $dir/serial\rRANDFILE = $dir/private/.rand\r# The root key and root certificate.\rprivate_key = $dir/private/ca.key.pem\rcertificate = $dir/certs/ca.cert.pem\r# For certificate revocation lists.\rcrlnumber = $dir/crlnumber\rcrl = $dir/crl/ca.crl.pem\rcrl_extensions = crl_ext\rdefault_crl_days = 385\r# SHA-1 is deprecated, so use SHA-2 instead.\rdefault_md = sha512\rname_opt = ca_default\rcert_opt = ca_default\rdefault_days = 375\rpreserve = no\rpolicy = policy_strict\r[ policy_strict ]\r# The root CA should only sign intermediate certificates that match.\r# See the POLICY FORMAT section of 'man ca'.\rcountryName = match\rstateOrProvinceName = match\rorganizationName = match\rorganizationalUnitName = optional\rcommonName = supplied\remailAddress = optional\r[ policy_loose ]\r# Allow the intermediate CA to sign a more diverse range of certificates.\r# See the POLICY FORMAT section of the 'ca' man page.\rcountryName = optional\rstateOrProvinceName = optional\rlocalityName = optional\rorganizationName = optional\rorganizationalUnitName = optional\rcommonName = supplied\remailAddress = optional\r[ req ]\r# Options for the 'req' tool ('man req').\rdefault_bits = 4096\rdistinguished_name = req_distinguished_name\rstring_mask = utf8only\r# SHA-1 is deprecated, so use SHA-2 instead.\rdefault_md = sha512\r# Extension to add when the -x509 option is used.\rx509_extensions = v3_ca\r[ req_distinguished_name ]\r# See \u0026lt;https://en.wikipedia.org/wiki/Certificate_signing_request\u0026gt;.\rcountryName = Country Name (2 letter code)\rstateOrProvinceName = State or Province Name\rlocalityName = Locality Name\r0.organizationName = Organization Name\rorganizationalUnitName = Organizational Unit Name\rcommonName = Common Name\remailAddress = Email Address\r# Optionally, specify some defaults.\rcountryName_default = PT\rstateOrProvinceName_default = Lisboa\rlocalityName_default = Lisboa\r0.organizationName_default = TiagoJoaoSilva\rorganizationalUnitName_default = TJS\remailAddress_default = bofh@tjs.lan\r[ v3_ca ]\r# Extensions for a typical CA ('man x509v3_config').\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid:always,issuer\rbasicConstraints = critical, CA:true\rkeyUsage = critical, digitalSignature, cRLSign, keyCertSign\r[ v3_intermediate_ca ]\r# Extensions for a typical intermediate CA ('man x509v3_config').\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid:always,issuer\rbasicConstraints = critical, CA:true, pathlen:0\rkeyUsage = critical, digitalSignature, cRLSign, keyCertSign\r[ usr_cert ]\r# Extensions for client certificates ('man x509v3_config').\rbasicConstraints = CA:FALSE\rnsCertType = client, email\rnsComment = \u0026quot;OpenSSL Generated Client Certificate\u0026quot;\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer\rkeyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment\rextendedKeyUsage = clientAuth, emailProtection\r[ server_cert ]\r# Extensions for server certificates ('man x509v3_config').\rbasicConstraints = CA:FALSE\rnsCertType = server\rnsComment = \u0026quot;OpenSSL Generated Server Certificate\u0026quot;\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer:always\rkeyUsage = critical, digitalSignature, keyEncipherment\rextendedKeyUsage = serverAuth\r[ crl_ext ]\r# Extension for CRLs ('man x509v3_config').\rauthorityKeyIdentifier=keyid:always\r[ ocsp ]\r# Extension for OCSP signing certificates ('man ocsp').\rbasicConstraints = CA:FALSE\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer\rkeyUsage = critical, digitalSignature\rextendedKeyUsage = critical, OCSPSigning\r\r\r\nCriamos uma palavra-passe complexa:\n1 2 3  openssl rand -base64 12 \u0026gt; /root/ca/private/ca.key.pass chmod 400 /root/ca/private/ca.key.pass cat /root/ca/private/ca.key.pass   ayUiXnIjZFRh\r\nCriamos a chave indicando a palavra-passe complexa:\n1 2  openssl genrsa -aes256 -passout file:/root/ca/private/ca.key.pass \\ -out /root/ca/private/ca.key.pem 8192   Generating RSA private key, 8192 bit long modulus (2 primes)\r......................................................+++\r..+++\re is 65537 (0x010001)\r\nCriamos e auto-assinamos o certificado da RootCA:\n1 2 3 4 5 6  chmod 400 /root/ca/private/ca.key.pem openssl req -config /root/ca/openssl.cnf \\ -passin file:/root/ca/private/ca.key.pass \\ -key /root/ca/private/ca.key.pem \\ -new -x509 -days 7300 -sha512 -extensions v3_ca \\ -out /root/ca/certs/ca.cert.pem   You are about to be asked to enter information that will be incorporated\rinto your certificate request.\rWhat you are about to enter is what is called a Distinguished Name or a DN.\rThere are quite a few fields but you can leave some blank\rFor some fields there will be a default value,\rIf you enter '.', the field will be left blank.\r-----\rCountry Name (2 letter code) [PT]:\rState or Province Name [Lisboa]:\rLocality Name [Lisboa]:\rOrganization Name [TiagoJoaoSilva]:\rOrganizational Unit Name [TJS]:\rCommon Name []:ca-tjs-1\rEmail Address [bofh@tjs.lan]:\r 1  chmod 444 /root/ca/certs/ca.cert.pem   Podemos examinar o conteúdo do certificado:\n1  openssl x509 -noout -text -in /root/ca/certs/ca.cert.pem   Certificate:\rData:\rVersion: 3 (0x2)\rSerial Number:\r25:92:4d:14:da:6f:9f:8b:4b:49:55:fc:68:be:9e:c7:57:24:cd:70\rSignature Algorithm: sha512WithRSAEncryption\rIssuer: C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\rValidity\rNot Before: Aug 12 19:38:30 2021 GMT\rNot After : Aug 7 19:38:30 2041 GMT\rSubject: C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\rSubject Public Key Info:\rPublic Key Algorithm: rsaEncryption\rRSA Public-Key: (8192 bit)\rModulus: [...]\rExponent: 65537 (0x10001)\rX509v3 extensions:\rX509v3 Subject Key Identifier:\r01:F2:CC:54:E0:F2:58:AC:E2:14:8E:2B:DB:6D:B6:FF:5C:25:41:A0\rX509v3 Authority Key Identifier:\rkeyid:01:F2:CC:54:E0:F2:58:AC:E2:14:8E:2B:DB:6D:B6:FF:5C:25:41:A0\rX509v3 Basic Constraints: critical\rCA:TRUE\rX509v3 Key Usage: critical\rDigital Signature, Certificate Sign, CRL Sign\rSignature Algorithm: sha512WithRSAEncryption\r[...]\r Revogação de certificados Antes de irmos mais longe, acho que temos de falar já na revogação de certificados, ao contrário de todos os outros tutoriais da Internet que deixam esse assunto para o fim, se chegam sequer a falar nele. Se não o fizermos agora, será demasiado tarde para ser incluído em qualquer certificado criado pela RootCA.\nComo revogar um certificado 1 2 3 4 5 6  stamp=$(date +%F_%T) mv /root/ca/inter-ca/certs/example-ca.cert.pem{,-revoked_$stamp} openssl ca -config /root/ca/openssl.cnf \\ -passin file:/root/ca/private/ca.key.pass \\ -revoke /root/ca/inter-ca/certs/example-ca.cert.pem-revoked_$stamp \\ -crl_reason unspecified   -crl_reason também pode ter os valores keyCompromise, CACompromise, affiliationChanged, superseded, cessationOfOperation, certificateHold, ou (só em Delta-CRLs) removeFromCRL\n-crl_hold coloca automaticamente a reason como certificateHold mas está fora do âmbito deste documento\n-crl_compromise AAAAMMDDHHMMSSZ coloca a reason como\nkeyCompromise na data assinalada.\n-crl_CA_compromise AAAAMMDDHHMMSSZ faz o mesmo, mas a reason é CACompromise\nPrecisamos de configurar um mecanismo para a RootCA disseminar a informação dos certificados revogados, e isso precisa de ser feito antes de se criar qualquer certificado subsequente, acrescentando informações ao openssl.cnf da RootCA antes de criar qualquer CA secundária.\nDistribuição de CRL O método clássico é a distribuição directa das listas CRL, que pode ser feita por vários meios, como um servidor HTTP, uma directoria LDAP ou AD, etc. Pode existir ainda uma complicação adicional, porque para evitar a transmissão constante de ficheiros grandes podem-se utilizar Delta-CRLs apenas com as alterações ao CRL; no entanto, apesar de esta ser uma possibilidade em Windows ou em outros pacotes de PKI, não está implementada no OpenSSL. Estas listas costumam ser actualizadas (porque expiram e todos os certificados dessa CA deixam de ser aceites) no máximo de 30 em 30 dias, mas a lista de CRLs da RootCA não deve expirar (ou expirar apenas anualmente quando for altura de actualizar o sistema que contém a RootCA).\n[CA_default]\rdefault_crl_days = 385\rNessa altura, refresca-se o CRL e (no caso de o sistema da RootCA ser airgapped), extrair o CRL (em papel, QR Code, CD-R ou outro meio seguro) e levá-lo para o sistema de onde vai ser distribuído.\nO formato de distribuição destas listas é DER (codificação binária), mas o ficheiro tem de ter a extensão .CRL (RFC 2585).\nO outro método, mais recomendado nos dias de hoje, é a utilização de um OCSP Responder para responder a consultas sobre a validade de um certificado, que é uma operação rápida que não necessita de muita largura de banda, permite que a disseminação da revogação seja assinada com uma chave da CA-mãe, e que a resposta fique em cache nos clientes (através de OCSP Stapling).\nComo o CRL da RootCA vai conter muito poucos certificados (a RootCA só vai emitir outras CAs, chamadas IntermediateCAs, SubordinateCAs ou SigningCAs, que serão poucas), vamos configurar uma emissão manual de CRLs para a RootCA.\nComeçamos por colocar a informação do local de onde será servido o CRL na secção [ v3_intermediate_ca ] do /root/ca/openssl.cnf, para ser incluída nos certificados das CAs emitidas pela RootCA. Vamos utilizar um servidor HTTP na porta 7788:\n[ v3_intermediate_ca ]\rcrlDistributionPoints = URI:http://server.tjs.lan:7788/root-ca.crl\rCriamos o CRL (https://blog.didierstevens.com/2013/05/08/howto-make-your-own-cert-and-revocation-list-with-openssl/)\n1 2 3 4  openssl ca -config /root/ca/openssl.cnf -gencrl \\ -passin file:/root/ca/private/ca.key.pass \\ -keyfile /root/ca/private/ca.key.pem -cert /root/ca/certs/ca.cert.pem \\ -out /root/ca/crl/ca.crl.pem   Verificamos o conteúdo do CRL:\n1  openssl crl -in /root/ca/crl/ca.crl.pem -noout -text   Certificate Revocation List (CRL):\rVersion 2 (0x1)\rSignature Algorithm: sha512WithRSAEncryption\rIssuer: C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\rLast Update: Aug 13 23:46:07 2021 GMT\rNext Update: Sep 2 23:46:07 2022 GMT\rCRL extensions:\rX509v3 Authority Key Identifier:\rkeyid:01:F2:CC:54:E0:F2:58:AC:E2:14:8E:2B:DB:6D:B6:FF:5C:25:41:A0\rX509v3 CRL Number:\r4097\rRevoked Certificates:\rSerial Number: 1001\rRevocation Date: Aug 13 22:11:25 2021 GMT\rCRL entry extensions:\rX509v3 CRL Reason Code:\rUnspecified\rSerial Number: 1002\rRevocation Date: Aug 13 23:41:51 2021 GMT\rCRL entry extensions:\rX509v3 CRL Reason Code:\rSuperseded\rSignature Algorithm: sha512WithRSAEncryption [...]\r\nE temos de converter o PEM (Base64) para formato DER:\n1 2  # openssl crl -inform PEM -in /root/ca/crl/ca.crl.pem \\ -outform DER -out /root/ca/crl/root-ca.crl   Sistema ligado à rede Como a RootCA deve ser airgapped e offline, não é no sistema da RootCA que se deve configurar a distribuição de CRLs, porque esse sistema tem de estar acessível na rede.\nConfiguramos um novo sistema Debian 11 e recriamos a pasta que contém o CRL da RootCA:\n1  mkdir -p /root/ca/crl   Fazemos lá chegar o ficheiro root-ca.crl de alguma maneira segura (gravar um CD-R, impressão e scanning com OCR, etc.) e colocámo-lo em /root/ca/crl\nInstalar e configurar o servidor web do CRL Vamos usar um servidor muito básico, o lighttpd\n1  apt install lighttpd -y   De acordo com o wiki do Debian sobre o Lighttpd a instalação por defeito configura o serviço, agarra a porta 80/TCP, corre com o utilizador www-data, configura a webroot para ser /var/www/html, e os ficheiros default são index.php ou index.html, se bem que venha configurado para não correr ficheiros .php.\nVamos configurar outra porta (7788), a webroot será outra para não interferir com a default que é usada por outros servidores web, e desligar o desvio automático para index.html\nAlém disso, o que pode ser importante, a configuração de tipos MIME foi pré-feita com um script Perl, que se calhar vamos ter de editar ou refazer porque os ficheiros CRL têm de ser servidos por HTTP com um tipo MIME específico, application/pkix-crl\n(https://pki-tutorial.readthedocs.io/en/latest/mime.html)\n1  cp /etc/lighttpd/lighttpd.conf{,.orig}   Mudar as linhas:\n 1 server.modules = (\r2 # \u0026quot;mod_indexfile\u0026quot;,\r3 # \u0026quot;mod_access\u0026quot;,\r4 # \u0026quot;mod_alias\u0026quot;,\r5 # \u0026quot;mod_redirect\u0026quot;,\r6 )\r8 server.document-root = \u0026quot;/var/www/crl\u0026quot;\r10 server.errorlog = \u0026quot;/var/log/lighttpd/crl-error.log\u0026quot;\r14 server.port = 7788\r41 #index-file.names = ( \u0026quot;index.php\u0026quot;, \u0026quot;index.html\u0026quot; )\rCriar a nova pasta webroot:\n1  mkdir /var/www/crl   Mover para lá o index.html deixado pelo pacote lighttpd e desactivá-lo:\n1 2  mv /var/www/html/index.lighttpd.html /var/www/crl/index.lighttpd.html.disabled   Colocar o CRL em formato DER dentro da webroot:\n1 2 3  cp /root/ca/crl/root-ca.crl /var/www/crl/root-ca.crl chown www-data:www-data /var/www/crl/root-ca.crl chmod 400 /var/www/crl/root-ca.crl   Para configurar os tipos MIME, o lighttpd.conf chama um script que cria uma configuração MIME a partir dos tipos definidos em /etc/mime.types; será que este último já tem uma definição para o tipo MIME do CRL?\n1  grep pkix-crl /etc/mime.types   application/pkix-crl crl\r\nPortanto, a linha 47 do lighttpd.conf vai criar uma lista de tipos MIME que inclui o nosso tipo CRL de cada vez que o serviço lighttpd for iniciado.\n47 include_shell \u0026quot;/usr/share/lighttpd/create-mime.conf.pl\u0026quot;\rConfirmamos a sintaxe do ficheiro lighttpd.conf:\n1  lighttpd -tt -f /etc/lighttpd/lighttpd.conf   2021-08-14 02:26:38: configfile.c.1142) WARNING: unknown config-key:\rurl.access-deny (ignored)\r\nEste erro não é importante, por isso:\n1 2  systemctl restart lighttpd systemctl status lighttpd   ● lighttpd.service - Lighttpd Daemon\rLoaded: loaded (/lib/systemd/system/lighttpd.service; enabled; vendor preset: enabled)\rActive: active (running)\r 1  systemctl enable lighttpd   Synchronizing state of lighttpd.service with SysV service script with /lib/systemd/systemd-sysv-install.\rExecuting: /lib/systemd/systemd-sysv-install enable lighttpd\r\nAbrimos a porta 7788 na firewall:\n1  ufw allow 7788   E testamos o acesso ao ficheiro:\n1  wget localhost:7788/root-ca.crl   Resolving localhost (localhost)... ::1, 127.0.0.1\rConnecting to localhost (localhost)|::1|:7788... connected.\rHTTP request sent, awaiting response... 200 OK\rLength: 1359 (1.3K) [application/pkix-crl]\rSaving to: ‘root-ca.crl’\rroot-ca.crl 100%[=================================================] 1.33K --.-KB/s in 0s\r2021-08-14 02:33:18 (168 MB/s) - ‘root-ca.crl’ saved [1359/1359] \nFoi estabelecida ligação e o ficheiro é servido com o tipo MIME correcto.\nMas infelizmente, só se devem usar CRLs quando temos a certeza que os clientes suportam este formato (e nesse aspecto, quem se porta melhor é a Microsoft); por exemplo, é impossível revogar certificados de Webserver por distribuição de CRLs porque apenas o Internet Explorer tem código para descarregar e analisar um CRL (Firefox e Chrome não querem saber) https://news.netcraft.com/archives/2013/05/13/how-certificate-revocation-doesnt-work-in-practice.html . Por isso é mais seguro configurar o mecanismo alternativo, que é um OCSP Responder, também chamado AIA devido à directiva que o configura ( AuthorityInfoAccess).\nConfiguração do CNF com o endereço do OCSP Responder Começamos por colocar no openssl.cnf da RootCA a seguinte directiva, na secção [ intermediate_ca ]\nauthorityInfoAccess = OCSP;URI:http://ocsp.tjs.lan:7899\rA porta TCP do OCSP pode ser qualquer uma, sendo usual colocá-lo numa porta de tráfego HTTP pouco usada (como a 8008). Escolhi a porta 7899 porque depois de analisada a lista de portas da IANA, as portas 7888-7899/TCP não estão atribuídas, podendo ser usadas para este fim. Também se poderia desligar o lighttpd e reutilizar a porta 7788.\nO protocolo é HTTP e não HTTPS porque como se verificaria o certificado SSL do OCSP? (https://social.technet.microsoft.com/Forums/office/en-US/c65e1784-39be-4732-a135-bfba7446ad05/should-the-ocsp-responder-service-be-running-http-80-or-https-443-) A configuração de um OCSP Responder será documentada no segmento seguinte, que será a configuração da IntermediateCA; deixamos já a informação no .CNF da RootCA caso mais tarde se deseje implementar um OCSP Responder para ela também.\nNote-se: se estas informações não forem configuradas agora, só poderão ser introduzidas na PKI (e passadas a certificados emitidos pela RootCA) revogando e re-emitindo todos os certificados já emitidos; por isso a estrutura de uma PKI deve ser ponderada antes de ser implementada.\nPodemos passar à configuração da IntermediateCA.\n","description":"PKI em OpenSSL: parte 1 (RootCA)","id":0,"section":"sec","tags":null,"title":"PKI OpenSSL (pt 1)","uri":"https://tiagojsilva.github.io/pt/sec/pki/opensslpki_1/"},{"content":"Uma vez precisei de tentar simular uma rede heterogénea, com um router Cisco e um Huawei.\nNão foi fácil, porque o IOS não está disponível publicamente e o simulador da Huawei, o eNSP, está descontinuado e só funciona em VirtualBox 5.\nPara fazer esta simulação, é necessário um CPU que suporte VM nesting (Second-Level Address Translation - SLAT)\nVM de simulação Foi criada uma VM baseada em Windows 7, com 4GB de RAM, 2 vCPUs e 4 interfaces de rede. Pode ser possível baixar a RAM para 2GB, mas tal não foi testado; 1GB foi testado e é insuficiente.\n\r\rPara que o protocolo ARP dos routers simulados não se queixe que há IPs duplicados em MACs diferentes, é necessário fazer MAC Spoofing de propósito, colocando na configuração de MAC de cada interface do VirtualBox o MAC da porta do router simulado que vai comunicar com ela; primeiro deixa-se o MAC na configuração standard, e depois mal se levantem os routers simulados lê-se o MAC de cada porta, desliga-se a VM, e introduz-se esse MAC na configuração da interface correspondente do VirtualBox antes de ligar de novo a VM.\nO router simulado Cisco pode mudar os seus MACs para duplicar os MACs do VirtualBox, por isso este passo é facultativo para as interfaces do router Cisco; o mesmo deveria ser possível no router Huawei, mas apesar de isso estar descrito no manual, a simulação do AR2220 não pode mudar os seus MACs, por isso este passo é obrigatório para que o router simulado Huawei funcione.\nA configuração final será:\nInterface Virtual 1  Internal Network: WAN Se possível com MAC idêntico à interface externa do router simulado Cisco Promiscuous: Allow All  Interface Virtual 2  Internal Network: LAN Se possível com MAC idêntico à interface interna do router simulado Cisco Promiscuous: Allow All  Interface Virtual 3  Internal Network: WAN Sempre mesmo MAC da interface externa do router simulado Huawei Promiscuous: Allow All  Interface Virtual 4  Internal Network: LAN Sempre mesmo MAC da interface interna do router simulado Huawei Promiscuous: Allow All\n\r\r  Configuração de rede do guest Control Panel, Network Connections\nInterface da Interface Virtual 1 (confirmar, por exemplo, desligando o cabo de rede virtual)\nNome: C-Outside ou Cisco-EXT\nIP: 10.5.222.4\nNetmask: 255.255.0.0\nGateway: \u0026ndash;\nInterface da Interface Virtual 2 Nome: C-Inside ou Cisco-INT\nIP: 10.10.0.58\nNetmask: 255.255.255.248\nGateway: \u0026ndash;\nInterface da Interface Virtual 3 Nome: H-Outside ou Huawei-EXT\nIP: 10.5.222.6\nNetmask: 255.255.0.0\nGateway: \u0026ndash;\nInterface da Interface Virtual 2 Nome: H-Inside ou Huawei-INT\nIP: 10.10.0.59\nNetmask: 255.255.255.248\nGateway: \u0026ndash;\nSoftware a instalar  VirtualBox 5.2.x e Extension Pack Winpcap 4.1.3 Wireshark-win64 3.2.5 eNSP V100R002C00B510 Setup GNS3 2.2.x ou superior (não instalar suporte para GNS3 VM)  Finalizar a configuração da VM Salvar todos os projectos, desligar todos os programas, desligar a VM (Shutdown)\nNas propriedades Network da VM, mudar o MAC Address de cada interface virtual para o MAC da porta do router a que vai estar ligada (via clouds nos emuladores).\n\r\rArrancar com a VM de novo, abrir os projectos e configurar os routers\nConfiguração GNS3 para simulação de router Cisco 7200 Criar um template para o Cisco 7200 Clicar na primeira opçao da barra da esquerda, Browse Routers\n+ New template\n\r\rInstall appliance from server\nNext\nEscolher Routers \u0026gt; Cisco 7200 / Dynamips\nInstall\n\r\rInstall on this computer\nNext\nAllow custom files\nNo aviso Do you want to proceed? Yes\nEscolher o ficheiro .image (que está Missing) e clicar no botao Import que aparece em baixo\n\r\rEscolher o ficheiro c7200-adventerprisek9-mz.152-4.S3.bin com o checksum 79ffe4050b2cac60d51af8b953bb02b7. Não sei como encontrei este ficheiro, seguramente que me caiu do céu e de certeza que não tenho autorização para o usar. As imagens oficiais da Cisco para uso académico são incluídas na anualidade do VIRL - Cisco Modeling Labs\nOpen\nThis is not the correct file\nYes\n\r\rFica Ready to Install\nOpcionalmente, pode-se clicar em Create a new version e criar a versão 152-4.S3\nSeleccionar a versão original ou a nova versão criada, e\nNext\n\r\rDo you want to install?\nYes\nCriar uma nova topologia para o router Cisco Criar um novo projecto\nArrastar um router Cisco 7200 do template que criámos.\nClique-direito, Configure\n\r\rAdicionamos mais interfaces de rede ao router:\nSeparador Slots\nSlot 1: PA-GE\nSlot 2: PA-GE\nOK\n\r\rClicar no ecrã da barra à esquerda (Browse End Devices).\nArrastar duas Clouds para a topologia e dar-lhes nomes adequados\n\r\rClicar no cabo da barra à esquerda (Add links) - o cursor passa para um +\nClicar no router, escolher uma porta\n\r\rClicar numa das Clouds, escolher a interface de rede do Windows usada para essa porta\n\r\rFazer o mesmo com a outra Cloud.\nClique-direito no router, Start para o iniciar\nClique-direito no router, Console para aceder à consola série\n\r\rClicar em Enter (RETURN), e o router simulado arranca logo em modo privilegiado (#)\nAnotar o MAC das interfaces que se querem ligar ao exterior da topologia, porque precisamos de colocar esses MACs nas interfaces virtuais respectivas do Virtualbox 6\n1  show interface gig1/0   GigabitEthernet1/0 is administratively down, line protocol is down\rHardware is 82543, address is ca01.0438.001c (bia **ca01.0438.001c**)\r Configuração do Huawei simulado Configurar o eNSP para simular router Huawei AR2220 Ao contrário da simulação da Cisco, o uso das imagens do eNSP é livre (até porque se trata de um Linux que simula o software real e não uma cópia do software real em si mesmo como no caso da imagem IOS).\nCriar uma nova topologia para o router Huawei Clicar no botão New Topo\n\r\rArrastar um router (exemplo, AR2220)\n\r\rArrastar duas Clouds e dar-lhes nome\n\r\rClique-direito numa cloud, Settings\n\r\rNa cloud Outside, clique-direito, Settings\nPort Building\nBinding info: UDP\nPort type: Ethernet\nAdd\n\r\rBinding info: escolher a interface 3\nPort type: Ethernet\nAdd\n\r\rPort Map Setting\nPort type: Ethernet\nLocal Port: 1\nRemote Port: 2\nTwo-way Channel\nAdd\n\r\rFechar a janela\n\r\rNa Cloud Inside, clique-direito, Settings\nPort Building\nBinding info: UDP\nPort type: Ethernet\nAdd\nBinding info: escolher a interface 4\nPort type: Ethernet\nAdd\nPort Map Setting\nPort type: Ethernet\nLocal Port: 1\nRemote Port: 2\nTwo-way Channel\nAdd\nFechar a janela\nClicar nas ligações (relâmpago), seleccionar Auto ou Copper\nLigar o router a cada uma das clouds (como no Packet Tracer - clicar, escolher porta, clicar no destino, escolher porta)\n\r\r\r\rTecla Esc para sair do modo de ligação (cursor passa para ponteiro normal)\nClique direito no router, Start\nClique direito no router, CLI\n\r\rTirar o MAC das interfaces que foram ligadas às clouds\n\u0026lt;Huawei\u0026gt; display int g0/0/0\r[…]\rIP Sending Frames' Format is PKTFMT_ETHNT_2, Hardware address is\r**00e0-fc29-614c**\r[…]\r\n\r\rConfiguração inicial Huawei Abrir CLI do AR2220\nMay 16 2021 07:43:40-08:00 Huawei %%01IFPDT/4/IF_STATE(l)[0]:Interface GigabitEthernet0/0/0 has turned into UP state.\rMay 16 2021 07:43:40-08:00 Huawei %%01IFPDT/4/IF_STATE(l)[1]:Interface GigabitEthernet0/0/1 has turned into UP state.\r\nVemos a configuração-base:\n\u0026lt;Huawei\u0026gt; display current\r[V200R003C00]\r#\rsnmp-agent local-engineid 800007DB03000000000000\rsnmp-agent #\rclock timezone China-Standard-Time minus 08:00:00\r#\rportal local-server load portalpage.zip\r#\rdrop illegal-mac alarm\r#\rset cpu-usage threshold 80 restore 75\r#\raaa authentication-scheme default\rauthorization-scheme default\raccounting-scheme default\rdomain default domain default_admin local-user admin password cipher %$%$K8m.Nt84DZ}e#Configuramos o relógio para não estar em Pequim:\n\u0026lt;Huawei\u0026gt; clock timezone GMT add 0\r\u0026lt;Huawei\u0026gt; clock daylight-saving-time GMT repeating 01:00 last Sun Mar 01:00 last sun Oct 01:00\r\u0026lt;Huawei\u0026gt; display clock\r2021-05-16 01:21:21 DST\rSunday\rTime Zone(GMT) : UTC+00:00\rDaylight saving time :\rName : GMT\rRepeat mode : repeat\rStart year : 2000\rEnd year : 2099\rStart time : last Sunday March 01:00:00\rEnd time : last Sunday October 01:00:00\rSaving time : 01:00:00\r \u0026lt;Huawei\u0026gt; system-view\rEnter system view, return user view with Ctrl+Z.\r [Huawei] display version\rHuawei Versatile Routing Platform Software\rVRP (R) software, Version 5.130 (AR2200 V200R003C00)\rCopyright (C) 2011-2012 HUAWEI TECH CO., LTD\rHuawei AR2220 Router uptime is 0 week, 0 day, 1 hour, 55 minutes\rBKP 0 version information: 1. PCB Version : AR01BAK2A VER.NC\r2. If Supporting PoE : No\r3. Board Type : AR2220\r4. MPU Slot Quantity : 1\r5. LPU Slot Quantity : 6\rMPU 0(Master) : uptime is 0 week, 0 day, 1 hour, 55 minutes\rMPU version information : 1. PCB Version : AR01SRU2A VER.A\r2. MAB Version : 0\r3. Board Type : AR2220\r4. BootROM Version : 0\r [Huawei] sysname RSFE\r[RSFE]\rTeste da redundância dos routers simulados Colocaram-se três pings a correr num cliente na rede LAN (interna). Como é um sistema Linux, usou-se a opção -O (letra \u0026ldquo;o\u0026rdquo; maiúscula) para que mostre o equivalente à mensagem de timeout do Windows\n Um ping para 1.1.1.1 Um ping para o endereço interior do Cisco, (neste caso, 10.10.0.60) Um ping para o endereço interior do Huawei, (neste caso, 10.10.0.61)\nNa situação normal, com o Cisco como router designado, temos acesso ao exterior\n\r\r  Fazendo shut na interface interior do Cisco, o ping para 10.10.0.60 pára, mas mantemos o acesso exterior.\nNão sei qual a origem das respostas duplicadas ICMP, mas:\n com o Huawei como Backup os pings para 10.10.0.61 voltam duplicados com o Huawei como Master os pings para 10.10.0.61 voltam normalmente mas os pings para 1.1.1.1 é que passam a ter respostas duplicadas.\n\r\r  Boa sorte! Espero que este hack bem cabeludo ajude alguém que necessite de configurar um sistema misto mesmo que se veja impedido de ter acesso aos equipamentos físicos, ou que sirva de exemplo para outras topologias mais avançadas.\n","description":"Quem não tem cão...","id":1,"section":"networking","tags":null,"title":"Simulação de router Cisco e Huawei ","uri":"https://tiagojsilva.github.io/pt/networking/simul/gns3-ensp/"},{"content":"OpenSSL PKI (parte 2) - IntermediateCA Criar uma IntermediateCA Mais uma vez, a(s) IntermediateCA(s) devem estar alojadas num sistema separado (server) daquele que aloja a RootCA, e o sistema da RootCA (root) deve estar airgapped e desligado da corrente. No sistema online não me parece má ideia manter as CAs secundárias debaixo de /root/ca, o que permite colocar o certificado da RootCA no mesmo caminho (/root/ca/certs/ca.cert.pem). No entanto, esta é a única informação da RootCA que é necessário trazer para o host da(s) CA(s) secundária(s); é debatível se vale a pena trazer o CRL da RootCA em formato PEM e colocá-lo em /root/ca/crl/ca.crl.pem, a não ser que este sistema online seja o mesmo que esteja a ser usado para distribuir o CRL da RootCA (como visto anteriormente).\n1 2 3 4 5  mkdir -p /root/ca/certs cp ca.cert.pem /root/ca/certs/ mkdir /root/ca/crl cp ca.crl.pem /root/ca/crl/ mkdir /root/ca/csr   Criamos a árvore de pastas completa para suportar a operação da IntermediateCA:\n1 2 3 4 5 6  inter=\u0026#34;/root/ca/inter-ca\u0026#34; mkdir $inter/{certs,crl,csr,newcerts,private} chmod 700 $inter/private touch $inter/index.txt echo 1000 \u0026gt; $inter/serial echo 1000 \u0026gt; $inter/crlnumber   Criamos o ficheiro de configuração da Inter-CA:\n1  cat \u0026gt; $inter/openssl.cnf   /root/ca/inter-ca/openssl.cnf\n\r\rExpandir\r\r# OpenSSL intermediate CA configuration file.\r# Copy to '/root/ca/inter-ca/openssl.cnf'.\r[ ca ]\r# 'man ca'\rdefault_ca = CA_default\r[ CA_default ]\r# Directory and file locations.\rdir = /root/ca/inter-ca\rcerts = $dir/certs\rcrl_dir = $dir/crl\rnew_certs_dir = $dir/newcerts\rdatabase = $dir/index.txt\rserial = $dir/serial\rRANDFILE = $dir/private/.rand\r# The root key and root certificate.\rprivate_key = $dir/private/inter-ca.key.pem\rcertificate = $dir/certs/inter-ca.cert.pem\r# For certificate revocation lists.\rcrlnumber = $dir/crlnumber\rcrl = $dir/crl/inter-ca.crl.pem\rcrl_extensions = crl_ext\rdefault_crl_days = 30\r# SHA-1 is deprecated, so use SHA-2 instead.\rdefault_md = sha512\rname_opt = ca_default\rcert_opt = ca_default\rdefault_days = 375\rpreserve = no\rpolicy = policy_loose\r# copy SAN, OCSP and other stuff to downstream certificates\rcopy_extensions = copy\r[ policy_strict ]\r# The root CA should only sign intermediate certificates that match.\r# See the POLICY FORMAT section of 'man ca'.\rcountryName = match\rstateOrProvinceName = match\rorganizationName = match\rorganizationalUnitName = optional\rcommonName = supplied\remailAddress = optional\r[ policy_loose ]\r# Allow the intermediate CA to sign a more diverse range of certificates.\r# See the POLICY FORMAT section of the 'ca' man page.\rcountryName = optional\rstateOrProvinceName = optional\rlocalityName = optional\rorganizationName = optional\rorganizationalUnitName = optional\rcommonName = supplied\remailAddress = optional\r[ req ]\r# Options for the 'req' tool ('man req').\rdefault_bits = 4096\rdistinguished_name = req_distinguished_name\rstring_mask = utf8only\r# SHA-1 is deprecated, so use SHA-2 instead.\rdefault_md = sha512\r# Extension to add when the -x509 option is used.\rx509_extensions = v3_ca\r[ req_distinguished_name ]\r# See \u0026lt;https://en.wikipedia.org/wiki/Certificate_signing_request\u0026gt;.\rcountryName = Country Name (2 letter code)\rstateOrProvinceName = State or Province Name\rlocalityName = Locality Name\r0.organizationName = Organization Name\rorganizationalUnitName = Organizational Unit Name\rcommonName = Common Name\remailAddress = Email Address\r# Optionally, specify some defaults.\rcountryName_default = PT\rstateOrProvinceName_default = Lisboa\rlocalityName_default = Lisboa\r0.organizationName_default = TiagoJoaoSilva\rorganizationalUnitName_default = TJS\remailAddress_default = bofh@tjs.lan\r[ v3_ca ]\r# Extensions for a typical CA ('man x509v3_config').\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid:always,issuer\rbasicConstraints = critical, CA:true\rkeyUsage = critical, digitalSignature, cRLSign, keyCertSign\r[ v3_intermediate_ca ]\r# Extensions for a typical intermediate CA ('man x509v3_config').\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid:always,issuer\rbasicConstraints = critical, CA:true, pathlen:0\rkeyUsage = critical, digitalSignature, cRLSign, keyCertSign\r[ usr_cert ]\r# Extensions for client certificates ('man x509v3_config').\rbasicConstraints = CA:FALSE\rnsCertType = client, email\rnsComment = \u0026quot;OpenSSL Generated Client Certificate\u0026quot;\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer\rkeyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment\rextendedKeyUsage = clientAuth, emailProtection\r[ server_cert ]\r# Extensions for server certificates ('man x509v3_config').\rbasicConstraints = CA:FALSE\rnsCertType = server\rnsComment = \u0026quot;OpenSSL Generated Server Certificate\u0026quot;\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer:always\rkeyUsage = critical, digitalSignature, keyEncipherment\rextendedKeyUsage = serverAuth\r[ crl_ext ]\r# Extension for CRLs ('man x509v3_config').\rauthorityKeyIdentifier=keyid:always\r[ ocsp ]\r# Extension for OCSP signing certificates ('man ocsp').\rbasicConstraints = CA:FALSE\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer\rkeyUsage = critical, digitalSignature\rextendedKeyUsage = critical, OCSPSigning\r\r\r\nNum mundo ideal, haveria várias sub-CAs, nomeadas pelo uso a que se destinariam (geralmente com conjuntos de extensões diferentes para cada utilização):\n tls-ca: certificados para servidores e clientes vpn-ca: certificados para VPNs mime-ca: certificados para email code-ca: certificados para code signing net-ca: certificados para activos de rede\nA configuração dessas extensões está fora do âmbito deste documento. Mas cada uma delas teria a sua árvore de pastas e a sua cópia do openssl.cnf, ao qual eu daria um nome mais específico em cada caso.\nNa realidade, parece que quase ninguém se dá a este trabalho; geralmente existe uma CA separada para VPNs externas, se a empresa assinar software existe uma CA para code-signing, e depois uma única CA para todos os sistemas internos.  Para que não seja preciso criar ficheiros de configuração separados para cada certificado re-especificando todas as funcionalidades que são comuns à InterCA, acrescentamos o seguinte a /root/ca/inter-ca/openssl.cnf:\n[ CA_default ]\r(…)\r# copy extensions missing from the CSR to the final certificate\rcopy_extensions = copy\rDe notar que como esta IntermediateCA é mais dinâmica que a RootCA, a vigência dos CRLs não deve ser maior do que 30 dias; aconselho que se configure uma tarefa periódica que refresque o CRL a cada 29 dias.\ndefault_crl_days = 30\rCriamos uma nova palavra-passe complexa para a InterCA:\n1 2  openssl rand -base64 12 \u0026gt; $inter/private/inter-ca.key.pass chmod 400 $inter/private/inter-ca.key.pass   Criamos a chave da InterCA indicando a palavra-passe complexa:\n1 2  openssl genrsa -aes256 -passout file:$inter/private/inter-ca.key.pass \\ -out $inter/private/inter-ca.key.pem 8192   Generating RSA private key, 8192 bit long modulus (2 primes)\r......................................................................................................................................................................................................+++\r.....................................................................................................................................................................................................+++\re is 65537 (0x010001)\r 1  # chmod 400 $inter-ca/private/inter-ca.key.pem   Criamos o Certificate Signing Request para assinarmos com a CA (note-se que fica nos CSRs da RootCA):\n1 2 3 4  openssl req -config $inter/openssl.cnf -new -sha512 \\ -passin file:$inter/private/inter-ca.key.pass \\ -key $inter/private/inter-ca.key.pem \\ -out /root/ca/csr/inter-ca.csr.pem   You are about to be asked to enter information that will be incorporated\rinto your certificate request.\rWhat you are about to enter is what is called a Distinguished Name or a DN.\rThere are quite a few fields but you can leave some blank\rFor some fields there will be a default value,\rIf you enter '.', the field will be left blank.\r-----\rCountry Name (2 letter code) [PT]:\rState or Province Name [Lisboa]:\rLocality Name [Lisboa]:\rOrganization Name [TiagoJoaoSilva]:\rOrganizational Unit Name [TJS]:\rCommon Name []:**inter-ca-tjs-2**\rEmail Address [bofh@tjs.lan]\r Assinar o CSR com a RootCA Voltamos ao sistema offline da RootCA e criamos a árvore de pastas necessária.\nComo apenas vai suportar a criação das InterCAs e não a sua operação, é muito mais simples:\n1 2 3  inter=\u0026#34;/root/ca/inter-ca\u0026#34; mkdir $inter/certs chmod 740 $inter/certs   Trazemos do sistema online o CSR da IntermediateCA, que colocamos no mesmo local onde estava no sistema online (a pasta de CSRs da RootCA):\n1  cp inter-ca.csr.pem /root/ca/csr   Para que a informação CDL e/ou AIA da RootCA seja passada à IntermediateCA, acrescentamos esta directiva à secção [ CA_default ] de /root/ca/openssl.cnf\n# copy extensions missing from the CSR to the final certificate\rcopy_extensions = copy\rAgora assinamos o CSR; note-se que vamos indicar que a extensão a usar do /root/ca/openssl.cnf é a [ v3_intermediate_ca ]!\n1 2 3 4 5  openssl ca -config /root/ca/openssl.cnf -extensions v3_intermediate_ca \\ -days 3650 -notext -md sha512 \\ -passin file:/root/ca/private/ca.key.pass \\ -in /root/ca/csr/inter-ca.csr.pem \\ -out $inter/certs/inter-ca.cert.pem   Using configuration from /root/ca/openssl.cnf\rCheck that the request matches the signature\rSignature ok\rCertificate Details:\rSerial Number: 4099 (0x1003)\rValidity\rNot Before: Aug 13 23:44:07 2021 GMT\rNot After : Aug 11 23:44:07 2031 GMT\rSubject:\rcountryName = PT\rstateOrProvinceName = Lisboa\rorganizationName = TiagoJoaoSilva\rorganizationalUnitName = TJS\rcommonName = inter-ca-tjs-2\remailAddress = bofh@tjs.lan\rX509v3 extensions:\rX509v3 Subject Key Identifier:\rE3:75:25:D7:74:08:0B:23:F0:AF:E4:EC:D0:D4:52:CB:5A:3A:10:2E\rX509v3 Authority Key Identifier:\rkeyid:01:F2:CC:54:E0:F2:58:AC:E2:14:8E:2B:DB:6D:B6:FF:5C:25:41:A0\rX509v3 Basic Constraints: critical\rCA:TRUE, pathlen:0\rX509v3 Key Usage: critical\rDigital Signature, Certificate Sign, CRL Sign\rX509v3 CRL Distribution Points:\rFull Name:\rURI:http://server.tjs.lan:7788/root-ca.crl\rCertificate is to be certified until Aug 11 23:44:07 2031 GMT (3650 days)\rSign the certificate? [y/n]:Y\r1 out of 1 certificate requests certified, commit? [y/n]Y\rWrite out database with 1 new entries\rData Base Updated\r\nVerificamos a emissão:\n1  openssl verify -CAfile /root/ca/certs/ca.cert.pem $inter/certs/inter-ca.cert.pem   /root/ca/inter-ca/certs/inter-ca.cert.pem: OK\r\nCriamos um certificado para a cadeia de autoridade com um certificado Chain (também chamado Bundle), concatenando os certificados por ordem ascendente - o último será a RootCA ou o mais próximo.\n1 2 3  cat $inter/certs/inter-ca.cert.pem /root/ca/certs/ca.cert.pem \u0026gt; \\ $inter/certs/inter-ca_chain.cert.pem chmod 444 $inter/certs/inter-ca_chain.cert.pem   Activar a IntermediateCA no sistema online Uma vez que deixamos no sistema online tudo aquilo que a IntermediateCA necessita para funcionar, só temos de trazer (de forma segura) os certificados assinados pela RootCA para o local adequado; não encontrei nenhuma fonte que indicasse que se deveria deixar os certificados da própria IntermediateCA em /root/ca/certs, por isso vamos deixá-los em /root/ca/inter-ca/certs\n1  cp inter-ca.cert.pem inter-ca_chain.cert.pem $inter/certs   Revogação de certificados da IntermediateCA Como o número de certificados a emitir (ou a revogar) pela IntermediateCA será muito maior, é vantajoso que se utilize o método de verificação de revogação por OCSP Responder, também chamado AIA devido à directiva que o configura (AuthorityInfoAccess).\nConfiguração do CNF com o endereço do OCSP Responder Começamos por colocar no /root/ca/inter-ca/openssl.cnf a seguinte directiva nas secções [server_cert] e [usr_cert]\nauthorityInfoAccess = OCSP;URI:http://ocsp.tjs.lan:7888\rCriar o certificado Geramos uma chave:\n1  openssl genrsa -out /root/ca/inter-ca/private/ocsp.tjs.lan.key.pem 4096   Generating RSA private key, 4096 bit long modulus (2 primes)\r...............................++++\r................................................++++\re is 65537 (0x010001)\r\nPrecisamos de inserir no CSR Informação SAN (Subject Alternative Name) específica para o OCSP:\n1  cat \u0026gt; /root/ca/inter-ca/san/ocsp.tjs.lan-san.cnf   [req]\rdistinguished_name = req_distinguished_name\rreq_extensions = req_ext\rprompt = no\r[req_distinguished_name]\rC = PT\rST = Lisboa\rL = Lisboa\rO = Tiago Joao Silva\rOU = TJS\rCN = ocsp.tjs.lan\r[req_ext]\rsubjectAltName = @alt_names\r[alt_names]\rIP.1 = 192.168.1.70\rDNS.1 = ocsp.tjs.lan Criamos o CSR:\n1 2 3  openssl req -config /root/ca/inter-ca/san/ocsp.tjs.lan-san.cnf -new -sha512 \\ -key /root/ca/inter-ca/private/ocsp.tjs.lan.key.pem \\ -out /root/ca/inter-ca/csr/ocsp.tjs.lan.csr.pem   Confirmar que o CSR tem a informação SAN:\n1 2  openssl req -noout -text -in /root/ca/inter-ca/csr/ocsp.tjs.lan.csr.pem | \\ grep -A 1 \u0026#34;Subject Alternative Name\u0026#34;   X509v3 Subject Alternative Name: IP Address:192.168.20.170, DNS:ocsp.tjs.lan\r\nAssinar o CSR com -extensions ocsp:\n1 2 3 4 5  openssl ca -config /root/ca/inter-ca/openssl.cnf \\ -extensions ocsp -days 823 -notext -md sha512 \\ -passin file:/root/ca/inter-ca/private/inter-ca.key.pass \\ -in /root/ca/inter-ca/csr/ocsp.tjs.lan.csr.pem \\ -out /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem   Using configuration from /root/ca/inter-ca/openssl.cnf\rCheck that the request matches the signature\rSignature ok\rCertificate Details:\rSerial Number: 4099 (0x1003)\rValidity\rNot Before: Aug 22 22:53:56 2021 GMT\rNot After : Nov 23 22:53:56 2023 GMT\rSubject:\rcountryName = PT\rstateOrProvinceName = Lisboa\rlocalityName = Lisboa\rorganizationName = Tiago Joao Silva\rorganizationalUnitName = TJS\rcommonName = ocsp.tjs.lan\rX509v3 extensions:\rX509v3 Basic Constraints:\rCA:FALSE\rX509v3 Subject Key Identifier:\rBD:A6:EE:6D:0F:73:0E:47:DC:26:9A:A8:B0:40:18:55:DB:35:6B:5A\rX509v3 Authority Key Identifier:\rkeyid:E3:75:25:D7:74:08:0B:23:F0:AF:E4:EC:D0:D4:52:CB:5A:3A:10:2E\rX509v3 Key Usage: critical\rDigital Signature\rX509v3 Extended Key Usage: critical\rOCSP Signing\rCertificate is to be certified until Nov 23 22:53:56 2023 GMT (823 days)\rSign the certificate? [y/n]:Y\r1 out of 1 certificate requests certified, commit? [y/n]Y\rWrite out database with 1 new entries\rData Base Updated\r\nConfirmar que o certificado tem a extensão OCSP:\n1 2  openssl x509 -noout -text -in /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem | \\ grep -A1 X509v3   X509v3 extensions:\rX509v3 Basic Constraints:\rCA:FALSE\rX509v3 Subject Key Identifier:\rBD:A6:EE:6D:0F:73:0E:47:DC:26:9A:A8:B0:40:18:55:DB:35:6B:5A\rX509v3 Authority Key Identifier:\rkeyid:E3:75:25:D7:74:08:0B:23:F0:AF:E4:EC:D0:D4:52:CB:5A:3A:10:2E\r--\rX509v3 Key Usage: critical\rDigital Signature\rX509v3 Extended Key Usage: critical\rOCSP Signing\r 1  chmod 400 $inter/certs/ocsp.tjs.lan.cert.pem   Criar um OCSP Responder no OpenSSL (não usar em produção) Para testar, vamos activar o Responder temporariamente:\n vamos usar a porta 7888, uma das que já vimos que está livre (ver a Parte 1 para detalhes) usando a opção -nrequest 1, vai fechar depois de receber um único pedido e vamos gravar um log.  1 2 3 4 5 6  openssl ocsp -index /root/ca/inter-ca/index.txt -port 7888 -text \\ -CA /root/ca/inter-ca/certs/inter-ca_chain.cert.pem \\ -rkey /root/ca/inter-ca/private/ocsp.tjs.lan.key.pem \\ -rsigner /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem \\ -out /root/ca/inter-ca/ocsp-log.txt \\ -nrequest 1 \u0026amp;   ocsp: waiting for OCSP client connections...\r\nAbrir a porta na firewall se esta estiver activa\n1  ufw allow 7888   Fazer uma pergunta ao Responder (usando o certificado emitido para o OCSP, ou outro):\n1 2 3 4  openssl ocsp -CAfile /root/ca/inter-ca/certs/ca-chain.cert.pem \\ -url http://127.0.0.1:7888 -resp_text \\ -issuer /root/ca/inter-ca/certs/inter-ca.cert.pem \\ -cert /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem   […]\rResponse verify OK\r/root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem: good\rThis Update: Aug 22 23:06:21 2021 GMT\r[1]+ Done openssl ocsp -index /root/ca/inter-ca/index.txt -port 7888 -text -CA /root/ca/inter-ca/certs/inter-ca_chain.cert.pem -rkey /root/ca/inter-ca/private/ocsp.tjs.lan.key.pem -rsigner /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem -out /root/ca/inter-ca/ocsp-log.txt -crl_check_all -nrequest 1\r\nVerificamos o que aconteceu na comunicação com o OCSP:\n1  head -30 /root/ca/inter-ca/ocsp-log.txt   OCSP Request Data:\rVersion: 1 (0x0)\rRequestor List:\rCertificate ID:\rHash Algorithm: sha1\rIssuer Name Hash: AE59C598DC56A005EA5239AE471093B7924F5018\rIssuer Key Hash: E37525D774080B23F0AFE4ECD0D452CB5A3A102E\rSerial Number: 1003\rRequest Extensions:\rOCSP Nonce:\r04104CA2F5C63FA8F6A8D89256935DB37177\rOCSP Response Data:\rOCSP Response Status: successful (0x0)\rResponse Type: Basic OCSP Response\rVersion: 1 (0x0)\rResponder Id: C = PT, ST = Lisboa, L = Lisboa, O = Tiago Joao Silva, OU = TJS, CN = ocsp.tjs.lan\rProduced At: Aug 22 23:06:21 2021 GMT\rResponses:\rCertificate ID:\rHash Algorithm: sha1\rIssuer Name Hash: AE59C598DC56A005EA5239AE471093B7924F5018\rIssuer Key Hash: E37525D774080B23F0AFE4ECD0D452CB5A3A102E\rSerial Number: 1003\rCert Status: good\rThis Update: Aug 22 23:06:21 2021 GMT\rResponse Extensions:\rOCSP Nonce:\r04104CA2F5C63FA8F6A8D89256935DB37177\rSignature Algorithm: sha256WithRSAEncryption\r Configurar o OCSP Responder como um serviço permanente Se o sistema usar o init systemd, criamos um Service Unit (outros inits usarão os seus mecanismos)\n1  cat \u0026gt; /etc/systemd/system/ocsp-responder_inter-ca.service   [Unit]\rDescription = OCSP responder using OpenSSL (for CA inter-ca)\rAfter = network.target\r[Service]\rExecStart = /usr/bin/openssl ocsp \\\r-index /root/ca/inter-ca/index.txt \\\r-port 7888 \\\r-rkey /root/ca/inter-ca/private/ocsp.tjs.lan.key.pem \\\r-rsigner /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem \\\r-CA /root/ca/inter-ca/certs/inter-ca_chain.cert.pem \\\r-text -crl_check_all\\\r-out /root/ca/inter-ca/ocsp-log.txt\r[Install]\rWantedBy = multi-user.target\r1  systemctl daemon-reload   Testar o serviço:\n1 2  systemctl start ocsp-responder_inter-ca systemctl status ocsp-responder_inter-ca   ● ocsp-responder_inter-ca.service - OCSP responder using OpenSSL (for CA inter-ca)\rLoaded: loaded (/etc/systemd/system/ocsp-responder_inter-ca.service; disabled; vendor preset: enabled)\rActive: active (running) since Mon 2021-08-23 00:21:27 WEST; 22s ago\r[…]\rAug 23 00:21:27 debian systemd[1]: Started OCSP responder using OpenSSL (for CA inter-ca).\rAug 23 00:21:27 debian openssl[2585]: ocsp: waiting for OCSP client connections...\r Fazer um pedido ao serviço:\n1 2 3 4  # openssl ocsp -CAfile /root/ca/inter-ca/certs/ca-chain.cert.pem \\ -url http://127.0.0.1:7888 -resp_text \\ -issuer /root/ca/inter-ca/certs/inter-ca.cert.pem \\ -cert /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem   Confirmar que a resposta é idêntica à que deu no teste feito anteriormente. Depois deixar o serviço como permanente:\n1  systemctl enable ocsp-responder_inter-ca   Outras CAs Caso esta não seja a única IntermediateCA, outras se poderiam configurar seguindo exactamente o mesmo método, bastando mudar a porta de escuta (até à 7899/TCP há mais 10 portas disponíveis).\nNo entanto, não é recomendado usar o OpenSSL como um OCSP Responder, porque a implementação é mínima e pouco robusta.\n","description":"PKI em OpenSSL: parte 2 (IntermediateCA)","id":2,"section":"sec","tags":null,"title":"PKI OpenSSL (pt 2)","uri":"https://tiagojsilva.github.io/pt/sec/pki/opensslpki_2/"},{"content":"Consegui!\nO botão para copiar o conteúdo das caixas de código aparece tanto nas que têm sintaxe (highlight, chroma) como nas que não têm sintaxe:\n1  cowsay \u0026#34;monkeys, I tell you!\u0026#34;   # output\r______________________\r\u0026lt; monkeys, I tell you! \u0026gt;\r----------------------\r\\ ^__^\r\\ (oo)\\_______\r(__)\\ )\\/\\\r||----w |\r|| ||\rComo é que consegui? Não sei\u0026hellip;\nDaí o título: mil macacos martelando mil máquinas de escrever poderiam escrever \u0026ldquo;The C Programming Language\u0026rdquo; se tivessem até ao fim do Universo para o fazer.\nClaro que estou parcialmente a gozar; mas foi como me senti.\nO raciocínio Eventualmente percebi que um bloco de código pode ter duas estruturas diferentes no Zdoc devido à inserção da coluna com o número de linha ou carácter de prompt antes do texto propriamente dito; ou melhor, já tinha percebido, mas eventualmente rendi-me à evidência de que teria de criar dois selectores diferentes, que conseguissem diferenciar um caso do do outro.\nMas durante bastante tempo ou só conseguia seleccionar os códigos com highlight, ou quando conseguia colocar botões nos dois tipos de blocos, os blocos highlightficavam com dois botões, um deles inoperante (imagino que por terem duas colunas internamente).\nO bloco de código highlight tem esta estrutura:\n1 2 3 4 5 6 7 8 9 10 11 12 13  \u0026lt;div class=\u0026#34;highlight\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;chroma\u0026#34;\u0026gt; \u0026lt;table class=\u0026#34;lntable\u0026#34;\u0026gt;\u0026lt;tr\u0026gt;\u0026lt;td class=\u0026#34;lntd\u0026#34;\u0026gt; \u0026lt;pre class=\u0026#34;chroma\u0026#34;\u0026gt;\u0026lt;code\u0026gt;\u0026lt;span class=\u0026#34;lnt\u0026#34;\u0026gt; 1 \u0026lt;/span\u0026gt;\u0026lt;span class=\u0026#34;lnt\u0026#34;\u0026gt; 2 \u0026lt;/span\u0026gt;\u0026lt;span class=\u0026#34;lnt\u0026#34;\u0026gt; 3 // line numbers \u0026lt;/span\u0026gt;\u0026lt;span class=\u0026#34;lnt\u0026#34;\u0026gt;36 \u0026lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td class=\u0026#34;lntd\u0026#34;\u0026gt; \u0026lt;pre class=\u0026#34;chroma\u0026#34;\u0026gt;\u0026lt;code class=\u0026#34;language-assets/sass/pages/_single.scss\u0026#34; data-lang=\u0026#34;assets/sass/pages/_single.scss\u0026#34;\u0026gt; // code \u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt;\u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt;   Enquanto que o bloco sem sintaxe é muito mais simples:\n1 2 3  \u0026lt;pre\u0026gt;\u0026lt;code\u0026gt; // code \u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;   O selector Eventualmente tentei isto, e funcionou:\n Apanha tudo o que for \u0026lt;pre\u0026gt;\u0026lt;code\u0026gt; Tem alguma secção lá dentro?  S: botão com sintaxe N: botão sem sintaxe    Vai-se a ver e o Zdoc tem código para diagramas Mermaid, mas depois não estão activados.\nMuito útil\u0026hellip;\r Em código deu isto:\n1 2 3 4 5 6 7 8 9 10  var codeBlocks = document.querySelectorAll(\u0026#39;pre \u0026gt; code\u0026#39;); for (var i = 0; i \u0026lt; codeBlocks.length; i++) { var highlightBlocks = codeBlocks[i].firstElementChild; if (highlightBlocks != null) { i++; addCopyButton(codeBlocks[i].parentNode.parentNode); } else { addCopyCodeButton(codeBlocks[i].parentNode.parentNode); } }   Depois de conseguir seleccionar os dois blocos em dois ramos de código diferentes, tratei-os diferenciadamente da maneira mais bruta, que foi duplicar a função e fazer ajustes em cada uma das cópias.\nTive o cabo dos trabalhos para não ver botões duplicados, e o que consegui foi por pura tentativa e erro de combinações entre .firstElementChild e .parentNode.\nE estou numa situação de que não gosto nada, que é \u0026ldquo;isto funciona e não sei porquê\u0026rdquo;; como não sei por que funciona, não consigo deixar de reparar que os botões não estão no mesmo sítio nem estão alinhados, mas não consigo corrigir\u0026hellip;\nResultado 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80  // ================================================================= // insert just before the \\\u0026lt;\\/script\\\u0026gt; tag // tomspencer, https://www.tomspencer.dev/blog/2018/09/14/adding-click-to-copy-buttons-to-a-hugo-powered-blog/ (function() { \u0026#39;use strict\u0026#39;; if(!document.queryCommandSupported(\u0026#39;copy\u0026#39;)) { return; } function flashCopyMessage(el, msg) { el.textContent = msg; setTimeout(function() { el.textContent = \u0026#34;COPY\u0026#34;; }, 1000); } function selectText(node) { var selection = window.getSelection(); var range = document.createRange(); range.selectNodeContents(node); selection.removeAllRanges(); selection.addRange(range); return selection; } function addCopyButton(containerEl) { var copyBtn = document.createElement(\u0026#34;button\u0026#34;); copyBtn.className = \u0026#34;highlight-copy-btn\u0026#34;; copyBtn.textContent = \u0026#34;COPY\u0026#34;; var codeEl = containerEl.firstElementChild; copyBtn.addEventListener(\u0026#39;click\u0026#39;, function() { try { var selection = selectText(codeEl); document.execCommand(\u0026#39;copy\u0026#39;); selection.removeAllRanges(); flashCopyMessage(copyBtn, \u0026#39;Copied!\u0026#39;) } catch(e) { console \u0026amp;\u0026amp; console.log(e); flashCopyMessage(copyBtn, \u0026#39;Failed :\\\u0026#39;(\u0026#39;) } }); containerEl.appendChild(copyBtn); } function addCopyCodeButton(containerEl) { var copyBtn = document.createElement(\u0026#34;button\u0026#34;); copyBtn.className = \u0026#34;code-copy-btn\u0026#34;; copyBtn.textContent = \u0026#34;COPY\u0026#34;; var codeEl = containerEl.firstElementChild; copyBtn.addEventListener(\u0026#39;click\u0026#39;, function() { try { var selection = selectText(codeEl); document.execCommand(\u0026#39;copy\u0026#39;); selection.removeAllRanges(); flashCopyMessage(copyBtn, \u0026#39;Copied!\u0026#39;) } catch(e) { console \u0026amp;\u0026amp; console.log(e); flashCopyMessage(copyBtn, \u0026#39;Failed :\\\u0026#39;(\u0026#39;) } }); containerEl.appendChild(copyBtn); } var codeBlocks = document.querySelectorAll(\u0026#39;pre \u0026gt; code\u0026#39;); for (var i = 0; i \u0026lt; codeBlocks.length; i++) { var highlightBlocks = codeBlocks[i].firstElementChild; if (highlightBlocks != null) { i++; addCopyButton(codeBlocks[i].parentNode.parentNode); } else { addCopyCodeButton(codeBlocks[i].parentNode.parentNode); } } })();   E o CSS:\n.code-copy-btn {\rposition: relative;\rbottom: 1.1rem;\rleft: 0.5rem;\rborder: 0;\rborder-radius: 4px;\rpadding: 1px;\rfont-size: 0.6em;\rline-height: 1.0;\ropacity: 0.6;\rmin-width: 65px;\rtext-align: center;\rletter-spacing: 2px;\r@include themify($codeblock) {\rcolor: themed('content-pre-color');\rbackground: themed('content-pre-background-color');\rborder: 1.25px solid themed('border-line-color');\r}\rborder-top-left-radius: 0;\rborder-top-right-radius: 4px;\rborder-bottom-right-radius: 0;\rborder-bottom-left-radius: 4px;\rwhite-space: nowrap;\rpadding: 4px 4px 5px 4px;\rmargin: 0 0 0 1px;\rcursor: pointer;\ropacity: 0.6;\r}\r.code-copy-btn:hover {\r@include themify($themes) {\rcolor: themed('link');\rbackground-color: themed('body-background-color');\r}\r}\r.highlight-copy-btn {\rposition: relative;\rbottom: 0rem;\rleft: -1.8rem;\rborder: 0;\rborder-radius: 4px;\rpadding: 1px;\rfont-size: 0.6em;\rline-height: 1.0;\ropacity: 0.6;\rmin-width: 65px;\rtext-align: center;\rletter-spacing: 2px;\r@include themify($codeblock) {\rcolor: themed('content-pre-color');\rbackground: themed('content-pre-background-color');\rborder: 1.25px solid themed('border-line-color');\r}\rborder-top-left-radius: 0;\rborder-top-right-radius: 4px;\rborder-bottom-right-radius: 0;\rborder-bottom-left-radius: 4px;\rwhite-space: nowrap;\rpadding: 4px 4px 5px 4px;\rmargin: 0 0 0 1px;\rcursor: pointer;\ropacity: 0.6;\r}\r.highlight-copy-btn:hover {\r@include themify($themes) {\rcolor: themed('link');\rbackground-color: themed('body-background-color');\r}\r}\rConclusão Estou contente? Não.\nMas é que se arranja por agora.\nO que precisava mesmo era de arranjar maneira de a inserção da coluna dos números de linha se aplicasse a todos os code-blocks, e assim podia voltar ao código anterior, que era muito mais limpo.\nPróximos passos Preciso de arranjar um workflow para acrescentar diagramas de rede\u0026hellip;\nMesmo o Mermaid não o consegue fazer.\nEu não estou nada chateado, como se vê\u0026hellip;\n","description":"Com mil máquinas de escrever","id":3,"section":"blog","tags":null,"title":"Mil Macacos","uri":"https://tiagojsilva.github.io/pt/blog/2021-11-15_monkeys/"},{"content":"Na primeira vez em que tentei configurar um botão Copy para as caixas de código, deixei uma nota no GitHub do tema Zdoc.\nHá dias um outro utilizador do Zdoc publicou a solução que funcionou para ele, e com esse estímulo, tentei de novo.\nInfelizmente, já devo ter manipulado de mais o DOM da minha versão do tema (manter-me compatível com o upstream, infelizmente, não vai dar para já) para poder utilizar directamente o código dele, mas tentei mexer mais um pouco no código que tinha tentado utilizar anteriormente, que era baseado nesta solução proposta por Tom Spencer\nCom as minhas alterações, ficou assim:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53  // insert just before the \u0026lt;/script\u0026gt; tag // tomspencer, https://www.tomspencer.dev/blog/2018/09/14/adding-click-to-copy-buttons-to-a-hugo-powered-blog/ (function() { \u0026#39;use strict\u0026#39;; if(!document.queryCommandSupported(\u0026#39;copy\u0026#39;)) { return; } function flashCopyMessage(el, msg) { el.textContent = msg; setTimeout(function() { el.textContent = \u0026#34;COPY\u0026#34;; }, 1000); } function selectText(node) { var selection = window.getSelection(); var range = document.createRange(); range.selectNodeContents(node); selection.removeAllRanges(); selection.addRange(range); return selection; } function addCopyButton(containerEl) { var copyBtn = document.createElement(\u0026#34;button\u0026#34;); copyBtn.className = \u0026#34;highlight-copy-btn\u0026#34;; copyBtn.textContent = \u0026#34;COPY\u0026#34;; var codeEl = containerEl.firstElementChild; copyBtn.addEventListener(\u0026#39;click\u0026#39;, function() { try { var selection = selectText(codeEl); document.execCommand(\u0026#39;copy\u0026#39;); selection.removeAllRanges(); flashCopyMessage(copyBtn, \u0026#39;Copied!\u0026#39;) } catch(e) { console \u0026amp;\u0026amp; console.log(e); flashCopyMessage(copyBtn, \u0026#39;Failed :\\\u0026#39;(\u0026#39;) } }); containerEl.appendChild(copyBtn); } // Add copy button to code blocks var highlightBlocks = document.getElementsByClassName(\u0026#39;highlight\u0026#39;); for (var i = 0; i \u0026lt; highlightBlocks.length; i++) { addCopyButton(highlightBlocks[i]); } })();   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  .highlight-copy-btn { position: relative; bottom: 22px; right: 0px; border: 0; border-radius: 4px; padding: 1px; font-size: 0.6em; line-height: 1.0; opacity: 0.6; min-width: 65px; text-align: center; letter-spacing: 2px; @includethemify($codeblock) { color: themed(\u0026#39;content-pre-color\u0026#39;); background: themed(\u0026#39;content-pre-background-color\u0026#39;); border: 1.25px solid themed(\u0026#39;border-line-color\u0026#39;); } border-top-left-radius: 0; border-top-right-radius: 4px; border-bottom-right-radius: 0; border-bottom-left-radius: 4px; white-space: nowrap; padding: 4px 4px 5px 4px; margin: 0 0 0 1px; cursor: pointer; opacity: 0.6; } .highlight-copy-btn:hover { @includethemify($themes) { color: themed(\u0026#39;link\u0026#39;); background-color: themed(\u0026#39;body-background-color\u0026#39;); } }   Funciona mais ou menos, mas só nos blocos de código para os quais foi detectada uma sintaxe (ou seja, em que o div class é highlight e o chroma foi activado). Para os outros, como os blocos de código nativos do MarkDown, não, e há ocasiões em que não posso ou não quero activar o chroma. Que fazer nesse caso?\nO código do Preston Rodriguez, que agradeço, não funciona com as alterações que já fiz ao tema e que não consigo desfazer nem perceber onde estão a falhar (já disse que não pesco quase nada de JavaScript?)\nTentei repetir, sem sucesso, o código do Tom Spencer em layouts/partials/head/scripts.html, mas usando como selector\nvar codeBlocks = document.querySelectorAll('pre \u0026gt; code');\rcodeBlocks.forEach(function(plainBlock) {\raddCopyButton(plainBlock);\r}\r(um perfeito exemplo da questão - neste momento o botão COPY não aparece aqui, mas se conseguir resolver isto, vai passar a aparecer)\n","description":"Recebi uma ajuda e tentei de novo","id":4,"section":"blog","tags":null,"title":"Botão copy, take 1","uri":"https://tiagojsilva.github.io/pt/blog/2021-11-08_copy-button-1/"},{"content":"Para este sistema, que eventualmente vai ser um servidor chamado verynice, criei uma VM com 256MB de RAM e 640MB de disco.\n\r\rO TinyCore1 é uma instalação Linux muito especial, devotada a sistemas com muito poucos recursos. Vou usar a versão CorePlus, a mais \u0026ldquo;luxuosa\u0026rdquo;, com ambiente gráfico e possibilidade de instalação em disco, mas há versões Core muito mais frugais que correm alegremente de uma pen USB carregando-se para uma RAMdrive no arranque.\nO seu modo de funcionamento é muito particular, porque o core do sistema é completamente separado das aplicações e configurações, e estas só são aplicadas no arranque seguinte se forem explicitamente guardadas.\nMuito poucas concessões são feitas à conveniência e user-friendliness, todos os comandos da shell por defeito (busybox)2 são extremamente simplificados em relação a uma distribuição Linux normal e os utilitários de gestão são os do Unix/Linux de há dez anos.\nInstalação Descarrega-se do site da distribuição TinyCore (http://tinycorelinux.net/) o instalador da versão CorePlus (na página Downloads, http://tinycorelinux.net/11.x/x86/release/CorePlus-current.iso)\nColoca-se o ISO na drive óptica virtual da VM e inicia-se a VM.\nEscolhe-se a opção por defeito: FLWM topside\n\r\rNa doca ao fundo do ecrã, abre-se a aplicação tc-install3\n\r\rEscolhem-se as opções: Frugal, Whole disk, e depois desta última, o disco sda. Confirmar que Install boot loader está activado. Clicar em \u0026gt;\n\r\rFormatting Options: ext4 \u0026gt;\n\r\rBoot options a colocar no instalador (consultar a lista apresentada no ecrã, ou o capítulo 10 do livro oficial do Tiny Core Linux, Into the Core):\ntce=sda1 home=sda1 opt=sda1 nodhcp showapps safebackup cron syslog host=verynice kmap=qwerty/pt-latin1.kmap\r(Mude o hostname para algo mais adequado para si, obviamente)\nO teclado está em layout US, por isso:\n o caracter = está na tecla « e o caracter / está na tecla –  \nClicar em \u0026gt;\n\r\rTipo de instalação Eu escolhi Core and X/GUI Desktop mas seguindo este guia, talvez não seja necessário o GUI e se possa escolher Core Only\nA única extensão que se vai instalar é Non-US keyboard layout support\nClicar em \u0026gt;\n\r\rNa realidade, depois de ter o CoreLinux instalado e a rede configurada, esta extensão pode-se instalar com bastante facilidade a partir do gestor de extensões, por isso também não é obrigatório utilizar o instalador CorePlus para ter teclados internacionais, um instalador mais leve seria suficiente. Mas esta é a opção mais geral.\nO mesmo pode não ser verdade para o suporte a placas Wi-Fi, que também se escolhe neste painel mas que eu não testei.\nRevêm-se as configurações e clica-se em Proceed\n\r\rClicar no ícone Exit da doca, opção Shutdown, OK\n\r\rQuando a instalação terminar, retirar o ISO da drive óptica e reiniciar a VM.\nConfigurações iniciais Mudar as opções de arranque Se for preciso mudar as boot options: editar /mnt/sda1/tce/boot/extlinux/extlinux.conf e mudar o conteúdo da linha APPEND\nTeclado português Abrir o Terminal e testar uma tecla específica do teclado PT-pt; se o resultado não for o esperado (o boot option kmap não estiver a activar o layout PT-pt), usar o comando\n1  echo \u0026#39;loadkmap \u0026lt; /usr/share/kmap/qwerty/pt-latin1.kmap\u0026#39; \u0026gt;\u0026gt; /opt/bootsync.sh    o caracter - está na tecla ' o caracter / está na tecla – o caracter ' está na tecla º   Seguido de (já explicarei estes comandos):\n1 2  filetool.sh -b sudo reboot   \r\r\rConfigurar permanência Sem este passo, o TinyCore Linux não vai guardar automaticamente as alterações que fizermos à configuração, porque depois de cada reinício, todas as configurações são perdidas excepto aquelas que dissermos que queremos guardar (o que tem vantagens e desvantagens).\nO processo abaixo configura a gravação automática das configurações em caso de shutdown do sistema, através do script que o sistema corre automaticamente durante o shutdown.\n1  vi /opt/shutdown.sh   Por baixo da linha #put user shutdown commands here, acrescentar:\n1  filetool.sh -b   Guardar e sair. O comando para forçar a gravação desta alteração é, claro,\n1  filetool.sh -b   Mudar a palavra passe do utilizador por defeito (tc) 1  passwd   Colocar uma palavra-passe que lhe apeteça.\nAdicionar um ficheiro de configuração à Permanência Para guardar um ficheiro de configuraçºao, como o ficheiro das palavras-passe, depois de um reinício (dar-lhe permanência), o caminho do ficheiro a guardar, menos o / inicial, é colocado no ficheiro /opt/.filetool.lst\n1 2  sudo echo \u0026#39;etc/shadow\u0026#39; \u0026gt;\u0026gt; /opt/.filetool.lst filetool.sh -b   Rede Para configurar uma interface de rede numa versão do CoreLinux com o ambiente gráfico, usar o comando sudo network numa janela de terminal (estes valores servem apenas de exemplo):\nInterface: eth0\nDHCP Broadcast: no\nIP Address: 10.123.130.6\nNet mask: 255.255.255.248\nBroadcast: 10.123.130.7\nGateway: 10.123.130.1\nNameServers: 1.1.1.1, 8.8.8.8\nSave Configuration: yes\nApply\n\r\rTestar com ping 1.1.1.1\nConfirmar a configuração com cat /opt/eth0.sh\nDeve ser:\n#!/bin/sh\rpkill udhcpc\rifconfig eth0 10.123.130.6 netmask 255.255.255.248 broadcast 10.123.130.7 up\rroute add default gw 10.123.130.1\recho nameserver 1.1.1.1  /etc/resolv.conf\recho nameserver 8.8.8.8  /etc/resolv.conf\r\nPara configurar a rede sem se ter acesso ao modo gráfico, basta copiar a informação acima para /opt/eth0.sh\nConfirmar que o /opt/eth0.sh está configurado para ser adicionado à permanência com o comando\n1  cat /opt/.filetool.lst | grep eth0   opt/eth0.sh\r Se não estiver,\n1  echo \u0026#34;opt/eth0.sh\u0026#34; \u0026gt;\u0026gt; /opt/.filetool.lst \u0026amp;\u0026amp; filetool.sh -b   Aliases Os aliases do utilizador por defeito (tc) estão em ~/.ashrc. Acrescentei estes aliases que julgo úteis:\n1 2 3 4  #filtrar o syslog echo \u0026#34;alias log=\u0026#39;grep /var/log/messages -e\u0026#39;\u0026#34; \u0026gt;\u0026gt; ~/.ashrc #usar sudo com aliases\t echo \u0026#34;alias sudo=\u0026#39;sudo \u0026#39;\u0026#34; \u0026gt;\u0026gt; ~/.ashrc\t  E seria bom ter esses aliases (e os outros, como ll='ls -l' e especialmente rm='rm -i') se estivermos numa rootshell; copiar os ficheiros necessários para a pasta /root e dizer ao CoreLinux que queremos guardar o conteúdo da pasta /root entre arranques:\n1 2  sudo cp /home/tc/.ashrc /root/.ashrc \u0026amp;\u0026amp; sudo chown root:root /root/.ashrc echo \u0026#34;root\u0026#34; \u0026gt;\u0026gt; /opt/.filetool.lst \u0026amp;\u0026amp; filetool.sh -b   Configurar Time Zone Fonte\nConfirmar que estamos na pasta home do utilizador: cd ~\nAssegurar que temos ligação ao exterior (por exemplo, ping 1.1.1.1)\nO comando tce-fetch.sh descarrega uma extensão sem a instalar. Neste caso queremos a extensão tzdata.tcz (Time Zone data.TCextension Zipped)\n1  tce-fetch.sh tzdata.tcz   O CoreLinux pode montar as extensões directamente para leitura (é, de resto, como ele \u0026ldquo;instala\u0026rdquo; uma extensão). Criar uma pasta e montar:\n1 2  mkdir tztemp sudo mount tzdata.tcz tztemp -t squashfs -o loop,ro   Copiar a informação de timezone de Lisboa para o local por defeito, /etc/localtime\n1  sudo cp -a tztemp/usr/local/share/zoneinfo/Europe/Lisbon /etc/localtime   Dar permanência à configuração:\n1 2  sudo echo \u0026#34;etc/localtime\u0026#34; \u0026gt;\u0026gt; /opt/.filetool.lst filetool.sh -b   Acesso remoto por OpenSSH Fonte\nAssegurar que temos ligação ao exterior (por exemplo, ping 1.1.1.1)\nO comando tce-load -wi instala directamente uma extensão de modo permanente:\n1  tce-load -wi openssh.tcz   Criamos a configuração do serviço OpenSSH copiando a configuração por defeito fornecida com a extensão:\n1 2  cd /usr/local/etc/ssh sudo cp -a sshd_config.orig sshd_config   Arrancamos o serviço com o script fornecido pela extensão:\n1  sudo /usr/local/etc/init.d/openssh start   Verificar o serviço com\n1  netstat -anp | grep 22   Tcp\t0\t0 0.0.0.0:22\t0.0.0.0:*\tLISTEN\r1470/sshd\r Primeira ligação Com o sshd_config que vem por defeito com a extensão é obrigatório ter uma palavra-passe configurada para o utilizador inicial tc, por isso se a palavra-passe não estiver configurada é necessário fazê-lo agora (é possível configurar host-based auth ou chaves assimétricas, mas só depois de editar o sshd_config)\n1 2 3  passwd #Colocar a palavra-passe do costume duas vezes sudo echo \u0026#34;etc/shadow\u0026#34; \u0026gt;\u0026gt; /opt/.filetool.lst \u0026amp;\u0026amp; filetool.sh -b   Testar, logando por SSH com um cliente (como o PuTTY em Windows):\n\r\rGarantir que as configurações do SSH são guardadas:\n1  sudo echo \u0026#34;usr/local/etc/ssh\u0026#34; \u0026gt;\u0026gt; /opt/.filetool.lst \u0026amp;\u0026amp; filetool.sh -b   Colocar o serviço a arrancar com o sistema Ai, que me deu aqui um baque de nostalgia\u0026hellip; Era assim que se fazia antes do SystemD:\n1  sudo echo \u0026#39;usr/local/etc/init.d/openssh start \u0026amp;\u0026#39; \u0026gt;\u0026gt; /opt/bootlocal.sh \u0026amp;\u0026amp; filetool.sh -b   (Aaahhhh\u0026hellip; nem por isso. O SystemD é um enorme avanço sobre tricotar shell scripts e gerir dependências à unha, mas seria mais pesado que o resto do CoreLinux inteiro\u0026hellip;)\nInstalar um editor de texto (vim) Chamar o gestor de aplicações em modo texto:\n1  tce-ab   S)earch\rEnter starting chars of desired extension, e.g. abi:\r Escrever vim, tecla Enter\ntce - Tiny Core Extension browser\r1. gvim-base.tcz\r2. gvim-doc.tcz\r3. gvim.tcz\r4. gvim-tutor.tcz\r5. vim-locale.tcz\r6. vim.tcz\rEnter selection ( 1 - 6 ) or (q)uit:\r6\r\nÉ mostrada a informação About da extensão; q para sair e mostrar o menu:\nA)bout I)nstall O)nDemand D)epends T)ree F)iles siZ)e L)ist S)earch P)rovides K)eywords or Q)uit:\ri\rvim.tcz.dep OK\rDownloading: gvim-base.tcz\rConnecting to repo.tinycorelinux.net (89.22.99.37:80)\rsaving to 'gvim-base.tcz'\rgvim-base.tcz 100% |************************************************************************************| 8036k 0:00:00 ETA\r'gvim-base.tcz' saved\rgvim-base.tcz: OK\rDownloading: ncursesw.tcz\rConnecting to repo.tinycorelinux.net (89.22.99.37:80)\rsaving to 'ncursesw.tcz'\rncursesw.tcz 100% |************************************************************************************| 212k 0:00:00 ETA\r'ncursesw.tcz' saved\rncursesw.tcz: OK\rDownloading: vim.tcz\rConnecting to repo.tinycorelinux.net (89.22.99.37:80)\rsaving to 'vim.tcz'\rvim.tcz 100% |************************************************************************************| 1432k 0:00:00 ETA\r'vim.tcz' saved\rvim.tcz: OK\rvim.tcz\rA)bout I)nstall O)nDemand D)epends T)ree F)iles siZ)e L)ist S)earch P)rovides K)eywords or Q)uit:\r\nQ para sair ou S, P, ou K, para encontrar mais extensões a instalar. Por exemplo, coreutils.tcz instala os comandos GNU/POSIX mais vulgares em versões mais completas que as integradas no busybox, e bash.tcz instala essa shell em vez do busybox (mas como o TinyCore não nos segura nas mãozinhas, é necessário ir ao /etc/passwd mudar a login shell do utilizador, configurar o /etc/passwd para ser guardado no backup, e fazer o backup)\nConfigurar o vim 1 2  cd ~ vim .vimrc   Configurar no ficheiro as opções desejadas (uma vez que está na pasta /home/tc/, será guardado automaticamente pelas boot options que demos, nomeadamente home=sda1).\nUma sugestão para um .vimrc está na página Dotfiles.\nDepois de o ter configurado a nosso gosto, seria bom manter a configuração mesmo quando estamos a editar um ficheiro como o utilizador root. Para conseguir isso, copia-se o .vimrc para a pasta pessoal do root:\n1 2  sudo cp /home/tc/.vimrc /root sudo chown root:root /root/.vimrc   (ver a secção Aliases para o comando que adiciona a pasta /root à Permanência, se já não estiver)\nCliente NTP Se o relógio de sistema não estiver correcto a comunicação entre um serviço local e os servidores na WAN pode ser recusada por estes últimos. E numa VM VirtualBox sem GuestAdditions, o relógio vai estar quase sempre errado.\nApesar de existir um pacote chrony para o TinyCore, usei apenas um cliente NTP4 muito básico, porque estava interessado em aligeirar o mais possível o sistema .\n1  tce-load -wi ntpclient.tcz   Downloading: ntpclient.tcz\rConnecting to repo.tinycorelinux.net (89.22.99.37:80)\rsaving to 'ntpclient.tcz'\rntpclient.tcz 100% |********************************| 12288 0:00:00 ETA\r'ntpclient.tcz' saved\rntpclient.tcz: OK\r Configurar o cliente Colocar no /opt/bootlocal.sh três instruções com diferentes propósitos:\n1) Actualizar o relógio durante o arranque5 Caso não tenhamos DNS disponível nesta fase do arranque, precisamos de usar directamente IPs e não nomes, por isso não podemos usar uma pool. Neste caso, vamos pedir a hora aos servidores da Hora Legal de Portugal6\n1  echo \u0026#34;ntpclient -c 1 -s -t -h 194.117.47.42 || ntpclient -c 1 -s -t -h 194.117.47.44\u0026#34; \u0026gt;\u0026gt; /opt/bootlocal.sh   2) Sincronizar o RTC Mas o TinyCore, até lhe dizerem o contrário, ignora esta hora e vai sempre buscar a hora do relógio de hardware, que sem Guest Additions não sabe perguntar ao host e arranca na mesma hora em que a VM foi desligada. Depois de recebermos a hora de sistema a partir de um servidor NTP, temos de actualizar o relógio de hardware com o comando hwclock -w\n1  echo \u0026#34;hwclock -w\u0026#34; \u0026gt;\u0026gt; /opt/bootlocal.sh   3) Corrigir o desvio de tempo Depois é não deixar que o relógio se vá desviando durante a operação do sistema, criando um processo que verifica periodicamente o tempo correcto:6\n1  echo \u0026#34;/usr/local/bin/ntpclient -c 0 -l -t -i 300 -h 3.pt.pool.ntp.org \u0026amp;\u0026#34; \u0026gt;\u0026gt; /opt/bootlocal.sh   Um detalhe importante é que em caso de reboot, o relógio avança uma hora, mas correndo os dois primeiros comandos manualmente no final do arranque o tempo fica imediatamente corrigido. Não sei se é bug ou problema da minha configuração, tentei todas as combinações de UTC e localtime no Virtualbox e no TinyCore e não resolveu.\nComeçando de desligado, funciona bem.\r Conclusão O TinyCoreLinux é muito pequeno, mas isso tem os seus custos.\nTudo tem de ser configurado, tudo tem de ser definido como persistente.\nComporta-se mais como um container do que como uma instalação vulgar.\nNisso, tem boa companhia, porque o AlpineLinux tem exactamente a mesma atitude, e também é muito popular como base para containers (é o default do Docker) e sistemas embedded.\nNo entanto, parece-me que o TinyCore já começa a dar demasiado trabalho para aquilo que poupa em recursos. Já não estamos assim tão desesperados, geralmente.\nPara um sistema realmente minimalista, existe uma versão ainda mais reduzida, o MicroCoreLinux (ou simplesmente Core), sem ambiente gráfico e com apenas 8MB.\nPara algo que me permitiria ser produtivo rapidamente, tenho esperança no AlpineLinux, que vou tentar testar em breve.\n http://distro.ibiblio.org/tinycorelinux/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n https://busybox.net/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n http://tinycorelinux.net/install.html\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n -c = count \u0026lt;vezes\u0026gt;; -s = set; -t = trust; -h = host \u0026lt;endereço_servidor_NTP\u0026gt;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n http://oal.ul.pt/hora-legal/como-acertar/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n -c 0 = sem limite de tentativas; -l = lock; -i = intervalo ; este comando usa nomes e presume-se que existe resolução DNS\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","description":"Pequeno mas duro de roer","id":5,"section":"unixlike","tags":null,"title":"TinyCore Linux - Passos iniciais","uri":"https://tiagojsilva.github.io/pt/unixlike/meme/2021-10-29_tinycorelinux-install/"},{"content":"Como disse num artigo anterior, estava a tentar actualizar-me quanto ao projecto VyOS, que parece ser uma forma económica de testar conceitos de rede, sem ter de pagar Cisco Modeling Labs (a única forma legal de usar sistemas virtuais da Cisco) ou similares.\nE bati de frente no problema do teclado português: não há teclado português. Sim, uma ligação SSH assume o layout do cliente - mas é preciso configurar a rede antes.\nAliás, todo o sistema de configuração de consola do Debian está desactivada ou inoperante. O que é chato porque o Debian usa uma maneira muito própria de configurar a consola.\nTentei testar para trás e para a frente para ver se descobria o ponto de regressão e percebi que:\n Em 1.2 ainda funciona  Só que já não é recomendado usar dpkg-reconfigure a partir da shell, agora deve-se usar o comando set console keymap a partir do modo Monitor ($); que acaba por chamar dpkg-reconfigure keyboard-configuration e a seguir reinicia o serviço keyboard-setup.service(o VyOS passou a basear-se em systemd tal como o Debian que lhe serve de base)   Em 1.3 e 1.4 não funciona  foi adicionado um outro comando, agora em modo Configuration (#), set system option keyboard-layout XX, mas que apenas aceita XX=US, DE, FR, DK, NO, FI. Esse comando funciona, pelo menos para o layout NO (Norway, ou Nordic) que tem muitas teclas em comum com o PT-pt.    Hmmm, pergunto-me de onde serão os principais contribuidores do projecto?\nDe caminho, também percebi que a melhor forma de compilar uma versão do VyOS é através da imagem Docker; tentei fazer reverse-engineering do dockerfile como recomendado pela própria página de documentação, mas apesar de ./configure me dizer que as dependências estavam todas correctas, a compilação era interrompida logo no início:\nE: The method driver /usr/lib/apt/methods/https could not be found.\rE: Failed to fetch https://repo.saltproject.io/py3/debian/10/amd64/3003/dists/buster/InRelease\rE: Some index files failed to download. They have been ignored, or old ones used instead.\rP: Begin unmounting filesystems...\rP: Saving caches...\rReading package lists...\rBuilding dependency tree...\rmake: *** [Makefile:32: iso] Error 1\r\nCompilar com a imagem Docker tem sido simples, por isso o acesso aos builds oficiais da versão 1.3 não deverá ser complicado.\nQuanto ao problema do teclado, a minha especulação ingénua leva-me a suspeitar de alguma coisa nos scripts que criam a instalação chroot que depois é colocada no ISO. Esqueceram-se do debconf console-setup? De algum pacote? Falta o ficheiro /bin/setupcon e sem ele o keyboard-setup.service não pode funcionar.\nUma das primeiras coisas que reparei é que a partir da versão 1.3 os caracteres da consola são os nativos, e não a fonte típica das distribuições baseadas em Debian; estará relacionado?\nAbri um thread no fórum (secção Bugs), e vou esperar algum tempo antes de abrir oficialmente um bug no Phabricator. Quanto tempo deverei dar? Duas semanas?\n","description":"Como andam as coisas","id":6,"section":"blog","tags":null,"title":"Actualização VyOS","uri":"https://tiagojsilva.github.io/pt/blog/2021-10-31_vyos2/"},{"content":"LiveCD 1.0-RC2, edição MATE O desenvolvimento da distro Adélie ficou muito tempo parado porque se dedicou a um programa de instalação simultaneamente gráfico e scriptável, chamado Horizon, que desviou muitos recursos do sistema-base. Muita coisa se passava nos bastidores mas exteriormente não havia novas releases.\nNo entanto, uma reorganização recente incutiu-lhes vento nas velas e o site está muito mais bonito, profissional e organizado, as mailing-lists fazem mais sentido, e o progresso parece estar a acelerar.\nNa versão que testei há bastante tempo (1.0-beta4) o Horizon estava completamente inoperacional e tive de usar o método de instalação manual; mesmo assim, esse método é interessante, porque é um bom exemplo de como fazer o bootstrap de um sistema Linux a partir de um repositório de binários, em vez de código-fonte como no Gentoo ou LinuxFromScratch, que demora muito mais.\nPara testar a instalação do sistema, descarreguei o LiveCD para x86_64 baseado em MATE, mas existem opções KDE e LXQt, em arquitecturas ARMv7, ARM64, PPC, PPC64 e x86.\nConfigurei no VirtualBox (6.1.22) uma VM Other Linux (64-bit) com 1GB de RAM, e o resto mantive nos defaults.\nO GRUB do LiveCD não escolhe automaticamente a opção para arrancar, por isso é sempre necessário alguma interação (nem que seja apenas carregar em Enter) para arrancar.\r\nProblemas iniciais Logo no ecrã inicial do MATE se vê a falta de polimento: clicar em Computer dá erro, e as \u0026ldquo;partições\u0026rdquo; proc e tmp deviam estar escondidas\n\r\rIsto é apenas cosmético, mas é um pequeno aperitivo para o que nos espera\u0026hellip;\nPara arrancar com o instalador HorizonUI, Applications \u0026gt; System Tools \u0026gt; System Installation\n\r\rSe não quiser acompanhar-me e quer começar já a instalar, dou-lhe a conclusão:\nFeche o instalador que abriu pelo menu gráfico\nAbra um terminal: Applications \u0026gt; System Tools \u0026gt; MATE Terminal\nMude para a conta root: $ su - ; a palavra-passe é live\n# horizon-ui\r\nTalvez por causa de termos uma aplicação root numa sessão sem permissões, se o monitor for desligado pelo PowerManagement a VM não recupera e pode inclusivamente crashar durante a instalação. Antes de iniciar o instalador colocar System \u0026gt; Preferences \u0026gt; Hardware \u0026gt; Power Management \u0026gt; Display Sleep = Never, e em System \u0026gt; Preferences \u0026gt; Look and Feel \u0026gt; Screensaver, desligar Activate when idle e Lock Screen; depois de a instalação iniciar esses painéis de configuração não podem ser abertos. Ambos são necessários.\nFoi testado em VirtualBox e VMware Workstation/Player\r\nAlém disso, não estão a brincar quando dizem que o acesso à WAN é obrigatório; nenhum dos pacotes é instalado a partir do LiveCD, e tudo é descarregado dos repositórios do Adélie.\r\nA estrutura do instalador é parecida com um wizard:\n\r\rContinue\n Keyboard Layout Load Firmware: o Adélie inclui firmware não-livre para placas gráficas e Wi-Fi Select Installation Disk Select partitioning Type: Erase and Use the Whole Disk ou Manual (escolhi Whole) Networking Setup: Automatic ou Manual - e aqui temos o primeiro showstopper, porque o acesso à rede é considerado obrigatório para a instalação e este passo tem muito por onde dar asneira.\n\r\rEscolhendo Manual, preenchemos os dados do costume para configurar o endereçamento IPv4 e IPv6 e seguimos, mas nada é feito para confirmar se os dados estão correctos; um endereço na gama multicast e uma gateway na classe E são aceites como válidos neste passo do instalador e o funcionamento da rede não é testado (com um ping para o endereço DNS indicado, por exemplo)\n\r\rAutomatic é DHCP, como seria de esperar, e não consegue obter um endereço, nem sequer inicia uma negociação DORA (Review DHCP Log). E isto acontece porque o HorizonUI não está a correr com privilégios de sistema…\n\r\rAbrindo um terminal, rapidamente percebemos que: O próprio LiveCD arranca sem acesso à rede, porque o DCHP tem de ser activado manualmente (# dhcpcd eth0) Pelo caminho, também deu para perceber que o sistema de ajuda man também não está configurado (\u0026ldquo;You\u0026rsquo;re on your own, kid!\u0026quot;) E finalmente, mesmo com o DHCP ligado no sistema, a porta eth0 levantada, com IP atribuído e acesso ao exterior, o HorizonUI continua a falhar no passo da configuração de rede porque não consegue fazer uma negociação DORA.\nA solução é invocar o instalador a partir da conta root (a palavra-passe é live), com # horizon-ui\n\r\rSeguimos com a instalação: Date and Time Settings (se não se tiver usado # horizon-ui, não é possível ajustar a data e hora, só a Timezone) Computer Name Software Selection  Standard: instala um sistema KDE completo (mas eu escolhi um LiveCD MATE?) Mobile: KDE como acima, mas com drivers e ajustes mais adequados para portáteis Compact: LXQt muito básico Text-only Custom: a única maneira de instalar o MATE\n\r\r   Startup Configuration: se queremos instalar um bootloader (neste caso, sim) Set Root Passphrase User Accounts (podem-se criar várias, mas é preciso configurar pelo menos um utilizador)\n\r\rE no final de tudo, caso não tenha seguido o meu conselho inicial, depara-se com outro problema de falta de permissões (neste caso, para gravar o script de instalação)\n\r\rCaso se tenha activado o instalador como root, a instalação inicia-se:\n\r\rE termina:\n\r\rNo entanto, Finish não reinicia o sistema como prometido. O que até não é mau porque permite fazer Shutdown, tirar o ISO da drive óptica e arrancar com calma.  Standard Não só instala mesmo o KDE, como nem sequer honra o esquema de teclado que escolhemos no instalador; eu tinha escolhido pt:\n\r\rMobile É exactamente igual a Standard mas inclui drivers para periféricos mais vulgares em portáteis, como trackpads e gestores de bateria; não tenho como testar essas funcionalidades.\nCompact (LXQt e instalação mínima) Crasha durante a instalação e deixa o sistema incapaz de arrancar; note-se que depois de dar o erro, tentei usar o LiveCD LXQt em vez da versão MATE para ver se ajudava, mas alguma coisa parece estar errada nos repos ou no script da instalação do LXQt e dá erro na configuração das consolefonts (mais uma vez, a instalação no disco rígido depende apenas do script Horizon e dos repos do Adélie, e o LiveCD é apenas um ambiente gráfico para o instalador)\nOpções utilizadas pelo script Horizon:\n\r\rLog de erro:\n\r\rCustom Parece ser a única forma de instalar o MATE ou XFCE.\nA opção Custom tem mais páginas:\n Software Selection: conjuntos de pacotes as instalar; detalhado em baixo para cada caso Software Choices: permite escolher três opções muito particulares:  Shell: Dash (compatível POSIX), ou Bash (compatível GNU) Init: S6-linux-init (+ OpenRC) (uma tentativa do mundo MUSL para ter algo similar ao Systemd, que apenas suporta GNU glibc) ou SysV Init Uevent: eudev (estável) vs mdevd (mais dinâmico e moderno mas instável) Foi sempre escolhido Bash, S6 e eudev    \r\rO Software Selection foi definido como:\n☐ Desktop Environments\n ☑ KDE Plasma 5  ☑ Documentation\n☑ Internet Software\nA imagem abaixo é de outra tentativa de instalação, com o MATE:\n\r\rDepois de instalar, pendura no primeiro arranque; nenhum VTY responde e o processo de login não se inicia.\nNão tenho imagem porque os screenshots saíam vazios, o que me fez desconfiar de de uma incompatibiliade com a placa gráfica do VirtualBox (VMSVGA)\nDecidi testar a mesma configuração de instalação no VMware Workstation: o arranque chegava ao fim, mas o VTY 7 (onde costuma estar a consola gráfica) só tinha um cursor a piscar; e o comando startx dava not found\nComparando os relatórios das opções do script de instalação (installfile) nas opções \u0026ldquo;Standard\u0026rdquo; e \u0026ldquo;Custom\u0026rdquo;, acabei por perceber que na instalação \u0026ldquo;Custom\u0026rdquo; não eram instalados dois pacotes fundamentais para o ambiente gráfico, o sddm(que gere o login gráfico e a escolha de DE para essa sessão) e o próprio X11\n\r\rFigure 17. Instalação Standard\r\r\r\r\r\rFigure 18. Instalação Custom\r\r\r\rE note-se que o teclado configurado na consola continuava a ser US.\nTestei também a instalação \u0026ldquo;Custom\u0026rdquo; do MATE (como visto acima) e o LXQt, com o mesmo resultado\nConclusão Por muito que simpatize com a distribuição Adélie, usá-la é um exercício de frustração que me lembra os piores tempos do início do Linux (e o meu primeiro Linux foi um RedHat 4.5 - não RHEL, RedHat). Faltam-lhe vários anos de polimento e debugging, aquele trabalho chato que ninguém quer fazer, que as distribuições GNU/Linux que sobreviveram já fizeram (Debian, SuSE, RedHat, Arch), e de que as variantes (Ubuntu, Mint, Manjaro, etc.) se aproveitam.\nNeste momento, creio que o Adélie pode ser criticado por:\n oferecer LiveCDs que não são suficientemente funcionais para testar o sistema (quer dizer, sem acesso à rede sequer?)  e que não contêm os pacotes necessários para instalar num sistema sem acesso online aos repos do Adélie; sim, o tamanho do LiveCD iria aumentar imenso, mas é o que um LiveCD é suposto ser.   a instalação standard oferecida por cada LiveCD para instalar no disco de sistema não ser a mesma variante de DE do próprio LiveCD e ser sempre o KDE; mais uma vez, o LiveCD deve ser uma representação fidedigna do que vai ser instalado em disco, se bem que também deve oferecer o instalador completo. A instalação Custom que oferece os DEs alternativos ao KDE não terminar a instalação O LiveCD não ter o DHCP activado de raiz, que corresponderia a 90% (número tirado da cartola) das necessidades. não incluir manpages não incluir uma cópia da documentação online dentro do LiveCD o instalador não ser funcional a partir do utilizador da GUI e tudo isto poderia não ser tão grave, se o Adélie fosse uma distro GNU/Linux normal, mas não é.  Em resumo, o Adélie é uma distribuição apenas para utilizadores muito avançados e se possível já com experiência em Alpine Linux, que usa o mesmo package manager (APK) e onde se baseia muito do userland do Adélie.\nSubmeti algumas destas informações como Issues no site de desenvolvimento do Adélie, e se descobrirem mais problemas sugiro que os submetam também; os programadores estão já perfeitamente adaptados ao sistema mas precisam que lhe relatem estas questões que aparecem a quem é um utilizador vulgar que experimenta o sistema pela primeira vez.\nO projecto Adélie é pequeno e por isso a comunicação é fácil e descomplicada, de tal forma que consegui entrar em contacto com a equipa que me explicou que esta versão RC2 foi produzida num momento muito complicado da vida do projecto por razões pessoais do programador principal (que compreendo perfeitamente, mas é preocupante que a distro esteja tão dependente de uma só pessoa) e que uma versão RC3 está garantida e a RC4 também é muito provável.\nNa minha opinião ainda nem chegou ao que se costuma chamar de Beta, mas a realidade é que a versão 1.0 é que vai ser a Public Beta, com uma versão 1.5 planeada para estabilização; o que deixa o Adélie Linux muito bem acompanhado, porque o OSX teve exactamente o mesmo padrão de desenvolvimento, mesmo com duas décadas de existência prévia como NextStep/OpenStep - só na versão OSX 10.2 Jaguar é que se tornou possível usá-lo como sistema do dia-a-dia sem praguejar como um carroceiro de 5 em 5 minutos.\n","description":"Onde tento instalar o Adélie e quase fico sem cabelo","id":7,"section":"unixlike","tags":null,"title":"Adelie Linux - Instalação LiveCD","uri":"https://tiagojsilva.github.io/pt/unixlike/musl/2021-09-13_adelie_livecd/"},{"content":"Informação nutricional Não esperem conteúdo vulgar neste site; raramente farei o equivalente ao enésimo artigo sobre como instalar o Postfix ou o Arch Linux, configurar uma NextCloud ou uma VPN: não me interessa, já está feito, não acrescento valor. Só o farei se der de caras com vários HOWTOs que me deixem insatisfeito ao ponto de acreditar que até eu serei capaz de fazer melhor.\nNeste momento estou interessado em explorar o mundo MUSL, as distribuições Linux de uso mais específico, e o init S6; não deveria estar chocado com o estado actual da documentação e desenvolvimento desses sistemas, comparado com os 50 mil artigos sobre como instalar o Ubuntu (contas por baixo), mas estou.\nVou investigar Guix/NixOS, se bem que acho que isso me vai levar ao mundo dos containers, nos quais não me sinto à vontade.\nVou continuar a fazer aquilo que posso fazer com um computador desktop sem acesso à cloud e um curso de Redes e Sistemas sem pinga de conteúdos de cloud, que são aquelas coisas obsoletas da virtualização e sistemas on-premises; quero mesmo aprender a criar sistemas resilientes (tanto storage como compute), mas o High-Availability costuma ser a opção que serve para abrir os cordões à bolsa de quem poderia usar a versão Community.\nPorquê? Sou seduzido pelos terceiros sistemas, que olham para as soluções existentes, vêm as falhas que quem está dentro deles não vê, e propõem uma alternativa; normalmente falha, porque quem está instalado só muito mais tarde se apercebe do mesmo e vários anos depois faz uma pálida imitação das potencialidades do terceiro sistema, e o efeito de rede na informática leva a que haja apenas um sistema dominante e uma alternativa, sem espaço para terceiros sistemas.\nPrefiro a organização ao caos, o passo seguro ao salto no vazio; não sou um empreendedor e nunca vou ficar rico.\nPelo contrário, tenho tido de engolir muitas desilusões\u0026hellip;\nLimitações Como disse já, tenho um outro trabalho fora da área do IT, por isso o meu tempo é limitado. Os meus meios também são limitados, por isso não posso pôr-me a tirar cursos e certificações, e vou recorrer o mais possível a aprendizagens gratuitas, por isso dificilmente terei exemplos da primeira linha da indústria. Mas espero que os princípios aprendidos com os pequenos iluminem o trabalho com os grandes\u0026hellip;\n","description":"Que fazer? Que fazer?","id":8,"section":"blog","tags":null,"title":"Manifesto","uri":"https://tiagojsilva.github.io/pt/blog/2021-10-08_wat-do/"},{"content":"Certificados de servidor e de cliente Agora que temos a nossa IntermediateCA configurada correctamente, podemos começar a utilizá-la para emitir certificados.\nNotas prévias:\n Deve-se usar metade dos bits usados na CA O CN do servidor deve ser o FQDN Um certificado servidor precisa de ter o mesmo FQDN repetido na informação SAN O CN dos clientes pode ser qualquer coisa, não é importante. Devem ser assinados com a IntermediateCA Normalmente têm a duração de um ano (365) e o máximo, desde Julho de 2019, é 824 dias (+1) Comando OpenSSL para certificado servidor: -extensions server_cert Comando OpenSSL para certificado cliente: -extensions usr_cert Só é possível copiar a informação SAN do CSR para o certificado se for colocada a opção copy_extensions = copy ou = all na secção [ca_default] do intermediate/openssl.conf; caso contrário, a informação SAN tem de ser reinserida quando se usa o comando x509 para assinar o CSR, de modo a que chegue ao certificado assinado. Vamos utilizar 4 servidores:  offline: tem a RootCA server: tem o CRLDistribution da RootCA, a IntermediateCA e os seus certificados, e o OCSP Responder da IntermediateCA www: vai ter um servidor HTML certificado pela IntermediateCA cliente: vai aceder ao site que está em www    Exemplo de certificado servidor: o servidor da PKI Começar por criar uma chave; neste caso deve-se omitir o -aes256 ou a opção -passout para não criar uma palavra-passe.\nSe existir uma palavra-passe, será necessário introduzi-la sempre que o processo do webserver seja iniciado…\n1 2  inter=\u0026#34;/root/ca/inter-ca\u0026#34; openssl genrsa -out $inter/private/server.tjs.lan.key.pem 4096   Generating RSA private key, 4096 bit long modulus (2 primes)\r...............................................................................................................++++\r........................................................++++\re is 65537 (0x010001)\r 1  chmod 400 $inter/private/server.tjs.lan.key.pem   Criar informação SAN É especialmente útil quando o FQDN é fictício (por exemplo, não há DNS e precisamos de certificar o IP), mas tornou-se obrigatório porque agora os certificados de Web Server têm de ter o FQDN numa entrada SAN, e tê-lo só no CN já não é suficiente\u0026hellip;\nPara o fazer, temos de criar um ficheiro .CNF extra, contendo apenas essa informação (que será diferente para cada servidor)\n1 2  mkdir $inter/san cat \u0026gt; $inter/san/server.tjs.lan-san.cnf   [req]\rdistinguished_name = req_distinguished_name\rreq_extensions = req_ext\rprompt = no\r[req_distinguished_name]\rC = PT\rST = Lisboa\rL = Lisboa\rO = Tiago Joao Silva\rOU = TJS\rCN = server.tjs.lan\r[req_ext]\rsubjectAltName = @alt_names\r[alt_names]\rIP.1 = 192.168.1.70\rDNS.1 = server.tjs.lan DNS.2 = dns.tjs.lan\rDNS.3 = chat.tjs.lan\rDNS.4 = mail.tjs.lan\rCriar o CSR 1 2 3 4  openssl req -config $inter/openssl.cnf \\ -key $inter/private/server.tjs.lan.key.pem \\ -config $inter/san/server.tjs.lan-san.cnf \\ -new -sha512 -out $inter/csr/server.tjs.lan.csr.pem   Confirmar que o CSR tem a informação SAN:\n1 2  openssl req -noout -text -in $inter/csr/server.tjs.lan.csr.pem | \\ grep -A 1 \u0026#34;Subject Alternative Name\u0026#34;   X509v3 Subject Alternative Name:\rIP Address:192.168.1.70, DNS:server.tjs.lan, DNS:dns.tjs.lan, DNS:chat.tjs.lan, DNS:mail.tjs.lan\r Assinar o CSR Atenção que desde Julho de 2019 o tempo máximo de um certificado Server é 824 dias (+hoje) e os browsers mais recentes rejeitam certificados com mais tempo\u0026hellip;\r Caso não exista copy\\_extensions = copy ou = all no inter-ca/openssl.cnf, será preciso reinserir a informação SAN com as opções -extensions req_ext e -extfile aaa-san.cnf\n1 2 3 4 5 6 7  openssl ca -config $inter/openssl.cnf \\ -extensions server_cert -days 823 -notext -md sha512 \\ -extensions req_ext \\ -extfile $inter/san/server.tjs.lan-san.cnf \\ -passin file:$inter/private/inter-ca.key.pass \\ -in $inter/csr/server.tjs.lan.csr.pem \\ -out $inter/certs/server.tjs.lan.cert.pem   Caso exista copy\\_extensions = copy ou = all no inter-ca/openssl.cnf, é mais simples:\n1 2 3 4 5  openssl ca -config $inter/openssl.cnf \\ -extensions server_cert -days 823 -notext -md sha512 \\ -passin file:$inter/private/inter-ca.key.pass \\ -in $inter/csr/server.tjs.lan.csr.pem \\ -out $inter/certs/server.tjs.lan.cert.pem   Using configuration from /root/ca/inter-ca/openssl.cnf\rCheck that the request matches the signature\rSignature ok\rCertificate Details:\rSerial Number: 4100 (0x1004)\rValidity\rNot Before: Aug 22 23:54:31 2021 GMT\rNot After : Nov 23 23:54:31 2023 GMT\rSubject:\rcountryName = PT\rstateOrProvinceName = Lisboa\rlocalityName = Lisboa\rorganizationName = Tiago Joao Silva\rorganizationalUnitName = TJS\rcommonName = server.tjs.lan\rX509v3 extensions:\rX509v3 Basic Constraints:\rCA:FALSE\rNetscape Cert Type:\rSSL Server\rNetscape Comment:\rOpenSSL Generated Server Certificate\rX509v3 Subject Key Identifier:\r94:00:E3:58:4F:BA:20:85:F7:9C:DC:47:3C:68:A1:46:8B:78:10:AF\rX509v3 Authority Key Identifier:\rkeyid:E3:75:25:D7:74:08:0B:23:F0:AF:E4:EC:D0:D4:52:CB:5A:3A:10:2E\rDirName:/C=PT/ST=Lisboa/L=Lisboa/O=TiagoJoaoSilva/OU=TJS/CN=ca-tjs-1/emailAddress=bofh@tjs.lan\rserial:10:03\rX509v3 Key Usage: critical\rDigital Signature, Key Encipherment\rX509v3 Extended Key Usage:\rTLS Web Server Authentication\rAuthority Information Access:\rOCSP - URI:http://ocsp.tjs.lan:7888\rCertificate is to be certified until Nov 23 23:54:31 2023 GMT (823 days)\rSign the certificate? [y/n]:Y\r1 out of 1 certificate requests certified, commit? [y/n]Y\rWrite out database with 1 new entries\rData Base Updated\r 1  chmod 444 $inter/certs/server.tjs.lan.cert.pem   Verificar a ChainOfTrust com o certificado CA-CHAIN 1 2  openssl verify -CAfile $inter/certs/inter-ca_chain.cert.pem \\ $inter/certs/server.tjs.lan.cert.pem   /root/ca/inter-ca/certs/server.tjs.lan.cert.pem: OK\r Criar um certificado Chain/Bundle para o servidor Concatenamos o certificado do servidor com o certificado CA-CHAIN:\n1 2  cat $inter/certs/{server.tjs.lan.cert.pem,inter-ca_chain.cert.pem} \u0026gt; \\ $inter/certs/server.tjs.lan.cert_chain.pem   Testes da CA Configurar um webserver Precisamos de criar um certificado novo para o webserver. O IP será 192.168.1.77 e o hostname será www\n1 2 3 4  inter=\u0026#34;/root/ca/inter-ca\u0026#34; openssl genrsa -out $inter/private/www.tjs.lan.key.pem 4096 chmod 400 $inter/private/www.tjs.lan.key.pem cat \u0026gt; $inter/san/www.tjs.lan-san.cnf   [req]\rdistinguished_name = req_distinguished_name\rreq_extensions = req_ext\rprompt = no\r[req_distinguished_name]\rC = PT\rST = Lisboa\rL = Lisboa\rO = Tiago Joao Silva\rOU = TJS\rCN = www.tjs.lan\r[req_ext]\rsubjectAltName = @alt_names\r[alt_names]\rIP.1 = 192.168.1.77\rDNS.1 = www.tjs.lan 1 2 3 4 5 6 7 8 9 10 11 12 13  openssl req -config $inter/openssl.cnf \\ -key $inter/private/www.tjs.lan.key.pem \\ -config $inter/san/www.tjs.lan-san.cnf \\ -new -sha512 -out $inter/csr/www.tjs.lan.csr.pem openssl ca -config $inter/openssl.cnf \\ -extensions server_cert -days 823 -notext -md sha512 \\ -passin file:$inter/private/inter-ca.key.pass \\ -in $inter/csr/www.tjs.lan.csr.pem \\ -out $inter/certs/www.tjs.lan.cert.pem chmod 444 $inter/certs/www.tjs.lan.cert.pem cat $inter/certs/{www.tjs.lan.cert.pem,inter-ca_chain.cert.pem} \u0026gt; \\ $inter/certs/www.tjs.lan.cert_chain.pem chmod 444 $inter/certs/www.tjs.lan.cert_chain.pem   Para testar, instalamos um novo sistema Debian 11 sem GUI.\nEditamos a configuração da interface desejada (enp0s3 é a interface primária no VirtualBox; no VMware é ens33)\n1  vim /etc/network/interfaces   iface enp0s3 inet static\raddress 192.168.1.77/24\rgateway 192.168.1.1\r1  hostnamectl set-hostname www.tjs.lan   Editar o ficheiro /etc/hosts; na segunda linha, mudar para:\n127.0.1.1\twww.tjs.lan\twww\rVerificar:\n1  for opt in {s,d,f}; do hostname -$opt ; done   www\rtjs.lan\rwww.tjs.lan\r\nInstalamos o servidor Nginx\n1  apt install nginx -y   Verificamos se serve a página definida por defeito\n1  wget localhost:80 -O-   \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;title\u0026gt;Welcome to nginx!\u0026lt;/title\u0026gt;\r\u0026lt;style\u0026gt;\rbody {\rwidth: 35em;\rmargin: 0 auto;\rfont-family: Tahoma, Verdana, Arial, sans-serif;\r}\r\u0026lt;/style\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;h1\u0026gt;Welcome to nginx!\u0026lt;/h1\u0026gt;\r\u0026lt;p\u0026gt;If you see this page, the nginx web server is successfully installed and\rworking. Further configuration is required.\u0026lt;/p\u0026gt;\r\u0026lt;p\u0026gt;For online documentation and support please refer to\r\u0026lt;a href=\u0026quot;http://nginx.org/\u0026quot;\u0026gt;nginx.org\u0026lt;/a\u0026gt;.\u0026lt;br\u0026gt;/\u0026gt;\rCommercial support is available at\r\u0026lt;a href=\u0026quot;http://nginx.com/\u0026quot;\u0026gt;nginx.com\u0026lt;/a\u0026gt;.\u0026lt;/p\u0026gt;\r\u0026lt;p\u0026gt;\u0026lt;em\u0026gt;Thank you for using nginx.\u0026lt;/em\u0026gt;\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rTrazer o certificado CHAIN do servidor para o webserver e colocá-lo num caminho que não seja afectado por updates nos certificados, como uma pasta local-certs em /etc/ssl/\n1 2 3  mkdir /etc/ssl/local-certs cp www.tjs.lan.cert_chain.pem /etc/ssl/local-certs/ chmod 444 /etc/ssl/local-certs/www.tjs.lan.cert_chain.pem   Trazer também a chave privada associada ao certificado do webserver e colocá-la em /etc/ssl/private/\n1 2  cp www.tjs.lan.key.pem /etc/ssl/private/ chmod 400 /etc/ssl/private/www.tjs.lan.key.pem   Mudamos a configuração do Nginx para redirecionar automaticamente pedidos feitos à porta 80 (HTTP) para a porta 443 (HTTPS), e configuramos o certificado e a chave do webserver\n1 2  cp /etc/nginx/sites-available/default{,.orig} vim /etc/nginx/sites-available/default   A partir da linha 21:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  server { # redirect all HTTP to HTTPS  listen 80; listen [::]:80; server_name\twww.tjs.lan; return 301 https://www.tjs.lan$request_uri; } server { listen 443 ssl; listen [::]:443 ssl; server_name www.tjs.lan; ssl_certificate /etc/ssl/local-certs/www.tjs.lan.cert_chain.pem; ssl_certificate_key /etc/ssl/private/www.tjs.lan.key.pem;   Note-se que não se fechou a chaveta do site SSL, porque a configuração default continua por mais umas linhas e fecha mais abaixo.\n1 2  systemctl restart nginx wget localhost:80 -O-   --2021-08-24 21:45:45-- http://localhost/\rResolving localhost (localhost)... ::1, 127.0.0.1\rConnecting to localhost (localhost)|::1|:80... connected.\rHTTP request sent, awaiting response... 301 Moved Permanently\rLocation: https://www.tjs.lan/ [following]\r--2021-08-24 21:45:45-- https://www.tjs.lan/\rResolving www.tjs.lan (www.tjs.lan)... 127.0.1.1\rConnecting to www.tjs.lan (www.tjs.lan)|127.0.1.1|:443... connected.\rERROR: The certificate of ‘www.tjs.lan’ is not trusted.\rERROR: The certificate of ‘www.tjs.lan’ doesn't have a known issuer.\r\nA redirecção está a acontecer, mas o wget local a www.tjs.lan não confia no certificado do servidor porque não conhece o certificado da RootCA.\r\nAbrimos as portas 80 e 443 da firewall\n1 2  ufw allow 80 ufw allow 443   Testar o webserver Configuramos um cliente gráfico (por exemplo, um Debian 11 com MATE).\nResolução de nomes Como não temos um servidor DNS com a zona tjs.lan nem com todos estes sistemas configurados, vamos adicionar o seguinte ao /etc/hosts dos três sistemas (server, www e cliente)\n# printf \u0026quot;\\\r#tjs.lan\\n\\\r192.168.1.70\tserver.tjs.lan server\\n\\\r192.168.1.70\tocsp.tjs.lan\tocsp\\n\\\r192.168.1.77\twww.tjs.lan www \\n\u0026quot; \\\r\u0026gt;\u0026gt; /etc/hosts\rInstalar o certificado Root no cliente final Importamos o certificado da RootCA para a home do utilizador actual do cliente.\nAbrimos o Firefox, Preferences, Privacy and Security, View Certificates…\nOu (about:preferences#privacy)\n\r\rImport…\n\r\rEscolhemos o certificado da RootCA, Open\n\r\r✓ Trust this CA to identify websites\n✓ Trust this CA to identify email users (opcional)\nOK\n\r\rClicando em View, podemos ver detalhes do certificado\n\r\rTemos a Authority importada, OK\n\r\rTestar o site Abrimos http://www.tjs.lan (pode ser necessário dizer ao Firefox que queremos mesmo ir para esse endereço), e temos uma ligação SSL protegida com o nosso certificado:\n\r\rConfigurar OCSP Stapling Fonte: https://www.digitalocean.com/community/tutorials/how-to-configure-ocsp-stapling-on-apache-and-nginx\nTrazemos para o webserver o certificado da RootCA\n1  cp ca.cert.pem /etc/ssl/local-certs/   Adicionamos as linhas seguintes ao site activo no Nginx (estávamos a usar /etc/nginx/sites-available/default), por baixo de ssl_certificate_key:\n1 2 3  ssl_stapling on; ssl_stapling_verify on; ssl_trusted_certificate /etc/ssl/local-certs/ca.cert.pem;   Testar A partir do cliente, testar o processo de OCSP Stapling com o comando seguinte, não esquecendo de indicar o certificado da CA (que deixámos na homefolder do utilizador quando o importamos para dentro do Firefox); se o apagou, é necessário trazê-lo de novo para o cliente para que possa ser usado agora:\n1  echo QUIT | sudo openssl s_client -connect www.tjs.lan:443 -CAfile ~/ca.cert.pem -status   \r\rExpandir\r\rCONNECTED(00000003)\rdepth=2 C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\rverify return:1\rdepth=1 C = PT, ST = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = inter-ca-tjs-2, emailAddress = bofh@tjs.lan\rverify return:1\rdepth=0 C = PT, ST = Lisboa, L = Lisboa, O = Tiago Joao Silva, OU = TJS, CN = www.tjs.lan\rverify return:1\rOCSP response: ======================================\rOCSP Response Data:\rOCSP Response Status: successful (0x0)\rResponse Type: Basic OCSP Response\rVersion: 1 (0x0)\rResponder Id: C = PT, ST = Lisboa, L = Lisboa, O = Tiago Joao Silva, OU = TJS, CN = ocsp.tjs.lan\rProduced At: Aug 24 22:18:56 2021 GMT\rResponses:\rCertificate ID:\rHash Algorithm: sha1\rIssuer Name Hash: AE59C598DC56A005EA5239AE471093B7924F5018\rIssuer Key Hash: E37525D774080B23F0AFE4ECD0D452CB5A3A102E\rSerial Number: 1007\rCert Status: good\rThis Update: Aug 24 22:18:56 2021 GMT\r[…]\rCertificate:\rData:\rVersion: 3 (0x2)\rSerial Number: 4099 (0x1003)\rSignature Algorithm: sha512WithRSAEncryption\rIssuer: C=PT, ST=Lisboa, O=TiagoJoaoSilva, OU=TJS, CN=inter-ca-tjs-2/emailAddress=bofh@tjs.lan\rValidity\rNot Before: Aug 22 22:53:56 2021 GMT\rNot After : Nov 23 22:53:56 2023 GMT\rSubject: C=PT, ST=Lisboa, L=Lisboa, O=Tiago Joao Silva, OU=TJS, CN=ocsp.tjs.lan\rSubject Public Key Info:\rPublic Key Algorithm: rsaEncryption\rRSA Public-Key: (4096 bit)\r[…]\r---\rCertificate chain\r0 s:C = PT, ST = Lisboa, L = Lisboa, O = Tiago Joao Silva, OU = TJS, CN = www.tjs.lan\ri:C = PT, ST = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = inter-ca-tjs-2, emailAddress = bofh@tjs.lan\r1 s:C = PT, ST = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = inter-ca-tjs-2, emailAddress = bofh@tjs.lan\ri:C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\r2 s:C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\ri:C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\r---\rServer certificate\r-----BEGIN CERTIFICATE-----\r[…]\rsubject=C = PT, ST = Lisboa, L = Lisboa, O = Tiago Joao Silva, OU = TJS, CN = www.tjs.lan\rissuer=C = PT, ST = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = inter-ca-tjs-2, emailAddress = bofh@tjs.lan\r---\rNo client certificate CA names sent\rPeer signing digest: SHA256\rPeer signature type: RSA-PSS\rServer Temp Key: X25519, 253 bits\r---\rSSL handshake has read 11091 bytes and written 392 bytes\rVerification: OK\r---\rNew, TLSv1.3, Cipher is TLS_AES_256_GCM_SHA384\rServer public key is 4096 bit\rSecure Renegotiation IS NOT supported\rCompression: NONE\rExpansion: NONE\rNo ALPN negotiated\rEarly data was not sent\rVerify return code: 0 (ok)\r---\r---\rPost-Handshake New Session Ticket arrived:\rSSL-Session:\rProtocol : TLSv1.3\rCipher : TLS_AES_256_GCM_SHA384\rSession-ID: 18DD0A571D36D69EC35D46FBC8F28711DDEED91000F1F595897B061640DD86E9\rSession-ID-ctx: Resumption PSK: 2B54CFDFF0170EDC5F77AE462A18AAA4DC7CC3CED7B21E2F6B97454A0AB65725AE63DDA084379C793DADF63983606283\rPSK identity: None\rPSK identity hint: None\rSRP username: None\rTLS session ticket lifetime hint: 300 (seconds)\rTLS session ticket:\r0000 - 28 c6 3d 71 b3 5c 60 1f-a8 7d 5f f7 26 3c cd f5 (.=q.\\`..}_.\u0026\r Revogação com OSCP Responder O Stapling costuma ter uma validade de 7 dias, em que o server guarda a resposta e já não contacta de novo o OCSP para obter a confirmação da validade do certificado, enviando directamente a resposta anterior ao cliente.\nIsto significa que se revogarmos o certificado agora, só daqui a 7 dias é que o cliente recusará o certificado do webserver.\nA não ser, claro, que o webserver seja reiniciado para perder a memória da resposta OCSP\u0026hellip; Vamos revogar o certificado do webserver:\n1 2 3 4 5 6  stamp=$(date +%F_%T) mv /root/ca/inter-ca/certs/www.tjs.lan.cert.pem{,-revoked_$stamp} openssl ca -config /root/ca/inter-ca/openssl.cnf \\ -passin file:/root/ca/inter-ca/private/inter-ca.key.pass \\ -revoke /root/ca/inter-ca/certs/www.tjs.lan.cert.pem-revoked_$stamp \\ -crl_reason superseded   Using configuration from /root/ca/inter-ca/openssl.cnf\rRevoking Certificate 1007.\rData Base Updated\r Reiniciamos o serviço do ocsp, para que este fique actualizado com o novo CRL\n1  systemctl restart ocsp-responder_inter-ca.service   Reiniciamos o serviço do nginx em www, para perder a cache do OCSP Stapling\n1  systemctl restart nginx   1  echo QUIT | sudo openssl s_client -connect www.tjs.lan:443 -CAfile ~/ca.cert.pem -status   CONNECTED(00000003)\rdepth=2 C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\rverify return:1\rdepth=1 C = PT, ST = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = inter-ca-tjs-2, emailAddress = bofh@tjs.lan\rverify return:1\rdepth=0 C = PT, ST = Lisboa, L = Lisboa, O = Tiago Joao Silva, OU = TJS, CN = www.tjs.lan\rverify return:1\rOCSP response: no response sent\r Confirmar que os clientes vêem o certificado como revogado E quando tentamos aceder a www.tjs.lan pelo Firefox, somos informados que o certificado foi revogado:\n\r\rCriar um novo certificado para substituir o revogado Caso esteja a seguir o tutorial por ordem, é melhor emitir um certificado novo para www.tjs.lan antes de prosseguir. Não esquecer que uma vez que a chave não foi comprometida nem a informação do servidor www mudou, o seu CSR continua válido, e por isso só é necessário repetir os passos da assinatura do CSR em diante. Caso a chave privada tivesse sido comprometida, seria necessário emitir um novo certificado para www a partir do zero.\r\nDepois é preciso fazê-lo chegar ao local adequado em www.tjs.lan, reiniciar o nginx, e testar de novo o acesso ao webserver no cliente:\n\r\rRevogar a IntermediateCA Para revogarmos a IntermediateCA (vamos supor que alguém deixou a chave privada da IntermediateCA num repositório público do GitHub), temos de nos deslocar à RootCA, que está offline, e seguir os passos descritos na secção correspondente:\n1 2 3 4 5 6  stamp=$(date +%F_%T) mv /root/ca/inter-ca/certs/inter-ca.cert.pem{,-revoked_$stamp} openssl ca -config /root/ca/openssl.cnf \\ -passin file:/root/ca/private/ca.key.pass \\ -revoke /root/ca/inter-ca/certs/inter-ca.cert.pem-revoked_$stamp \\ -crl_reason keyCompromise   Using configuration from /root/ca/openssl.cnf\rRevoking Certificate 1003.\rData Base Updated\r A seguir actualizamos o CRL e convertêmo-lo para DER, seguindo os passos da secção correspondente:\n1 2 3 4 5 6  openssl ca -config /root/ca/openssl.cnf -gencrl \\ -passin file:/root/ca/private/ca.key.pass \\ -keyfile /root/ca/private/ca.key.pem -cert /root/ca/certs/ca.cert.pem \\ -out /root/ca/crl/ca.crl.pem openssl crl -inform PEM -in /root/ca/crl/ca.crl.pem \\ -outform DER -out /root/ca/crl/root-ca.crl   Podemos ver que o CRL alterado tem uma entrada nova:\n1  openssl crl -inform DER -text -noout -in /root/ca/crl/root-ca.crl   Certificate Revocation List (CRL):\rVersion 2 (0x1)\rSignature Algorithm: sha512WithRSAEncryption\rIssuer: C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\rLast Update: Aug 25 20:50:52 2021 GMT\rNext Update: Sep 14 20:50:52 2022 GMT\rCRL extensions:\rX509v3 Authority Key Identifier:\rkeyid:01:F2:CC:54:E0:F2:58:AC:E2:14:8E:2B:DB:6D:B6:FF:5C:25:41:A0\rX509v3 CRL Number:\r4098\rRevoked Certificates:\rSerial Number: 1001\rRevocation Date: Aug 13 22:11:25 2021 GMT\rCRL entry extensions:\rX509v3 CRL Reason Code:\rUnspecified\rSerial Number: 1002\rRevocation Date: Aug 13 23:41:51 2021 GMT\rCRL entry extensions:\rX509v3 CRL Reason Code:\rSuperseded\rSerial Number: 1003\rRevocation Date: Aug 25 20:45:54 2021 GMT\rCRL entry extensions:\rX509v3 CRL Reason Code:\rKey Compromise\r Trazer o CRL actualizado do offline para online Usando um meio seguro que não quebre o airgapping do sistema da RootCA, levamos este ficheiro DER ao servidor que aloja a distribuição do CRL da RootCA:\n1 2  cp root-ca.crl /var/www/crl systemctl restart lighttpd.service   Para eliminar a cache do OCSP Stapling, também é necessário reiniciar o webserver se queremos que a revogação seja imediatamente reconhecida em vez de esperarmos 7 dias:\n1  systemctl restart nginx.service   Testar a revogação da IntermediateCA Em browsers modernos (falha) O site continua a ser reconhecido como seguro no Firefox, porque aparentemente os browsers não se dão ao trabalho de verificar a cadeia inteira de certificados (nem mesmo por OCSP), confiando apenas na lista interna de RootCAs e em CRLs internos distribuídos com as actualizações.\nA única excepção é o velhinho Internet Explorer, paz à sua alma, que vamos testar já a seguir.\nhttps://news.netcraft.com/archives/2013/05/13/how-certificate-revocation-doesnt-work-in-practice.html\nE não consigo encontrar um comando openssl verify que me consiga indicar que a cadeia do certificado www.tjs.lan.cert_chain.pem está quebrada pela revogação da IntermediateCA\n(https://stackoverflow.com/questions/25482199/verify-a-certificate-chain-using-openssl-verify)\nO uso de PKI em browsers parece que utiliza muitos atalhos\u0026hellip;\nEm Internet Explorer Para testar com Internet Explorer, precisamos de um cliente Windows, por isso provisionei uma VM Windows 7.\nImportar o certificado da RootCA Trazer o certificado da RootCA para o cliente Windows e salvar como ca.cert.cer)\n.CER é a extensão típica do Windows para ficheiros PEM (Base64)\r\nWin+R, certmgr.msc\nSeleccionar Trusted Root Certification Authorities/Certificates\nAll Tasks \u0026gt; Import\u0026hellip;\n\r\rEscolher o certificado (Browse\u0026hellip;)\n\r\rConfirmar que queremos instalar em Trusted Root\n\r\rYes\n\r\rE está instalado\n\r\rFicheiro hosts Agora precisamos de colocar a mesma informação no ficheiro hosts para resolver a falta de DNS.\nAbrir o Notepad com permissões de administrador (clique direito em cima do Notepad, Run as administrator)\n\r\rAbrir o ficheiro %SystemRoot%\\System32\\drivers\\etc\\hosts\nColar:\n#tjs.lan\r192.168.1.70\tserver.tjs.lan server\r192.168.1.70\tocsp.tjs.lan\tocsp\r192.168.1.77\twww.tjs.lan www\r\r\r\rSalvar o ficheiro e sair do Notepad.\nAbrir o site no IE Agora podemos testar se o IE reconhece que a Inter-CA que assinou o certificado do nosso site foi revogada:\nE o resultado é sim, o Internet Explorer consulta e respeita uma PKI interna a uma empresa, em vez de se limitar àquilo que já sabe sobre a PKI pública utilizada na Internet.\n\r\r","description":"PKI em OpenSSL: parte 3 (Servidores e Clientes)","id":9,"section":"sec","tags":null,"title":"PKI OpenSSL (pt 3)","uri":"https://tiagojsilva.github.io/pt/sec/pki/opensslpki_3/"},{"content":"Como muitos outros projectos de software livre e aberto, também o VyOS decidiu que ia continuar a ser livre, mas deixaria de ser grátis. Para convencer os utilizadores empresariais a abrirem os cordões à bolsa, decidiram que os binários compilados e distribuídos para instalação sob a forma de uma imagem ISO apenas estariam disponíveis ao público em versões instáveis, correspondentes, grosso modo, a um nightly build. A última versão estável pré-compilada é a 1.1-8, e a versão mais recente pode estar em vários tipos de estado, consoante esteja no início ou no fim do processo de release.\nÉ uma tendência cada vez mais forte, cujo exemplo mais polémico foi a passagem da distribuição CentOS de downstream do RHEL (estável) para upstream, servindo agora de teste beta (logo instável) do point-upgrade seguinte do RHEL.\nQueres à pála? Pelo menos paga reportando bugs\u0026hellip;\r\nNo entanto, nos próximos dias haverá uma oportunidade de ouro para obter uma versão do VyOS bastante estável, porque a versão 1.3 (equuleus) está em Release Preview (neste momento ainda a primeira, 1.3-epa1).\nPoderá haver mais Previews, mas as diferenças deverão ser mínimas.\nFelizmente, a licença original do VyOS obriga a manter o acesso livre ao código-fonte, e o projecto inclui instruções, que parecem bastante simples, para compilar a versão estável LTS directamente do repositório de código-fonte.\nMais novidades em breve\u0026hellip;\r\nHá pelo menos ano e meio que estragaram a configuração de esquema de teclado e é impossível configurar um teclado português.\nNada funciona: locale set-keymap, dpkg-reconfigure console-data, dpkg-reconfigure keyboard-configuration. Corre sem erros, mas é olímpicamente ignorado e o esquema mantém-se sempre como ANSI en-US.\nA \u0026ldquo;solução\u0026rdquo;, se é que se pode chamar, é configurar uma interface de rede, ligar o serviço SSH e aceder por SSH a partir de um cliente com o teclado bem configurado.\nOpen-source: sempre a falhar no mais básico.\r\n","description":"Não perca esta oportunidade!","id":10,"section":"blog","tags":null,"title":"Olh'ó VyOS fresquinhoo!!!","uri":"https://tiagojsilva.github.io/pt/blog/2021-10-07_getchorvyoshear/"},{"content":"O workflow que uso para produzir os artigos é uma jiga-joga que inventei p\u0026rsquo;raqui. Para variar\u0026hellip;\nComeço por escrever em Microsoft Word, porque estou habituado assim e tenho algum conteúdo em Word que quero converter para o site.\nDepois converto o DOCX para MarkDown com o Pandoc\npandoc -f docx -t gfm --wrap=none --extract-media images\\\u0026lt;secção\u0026gt;\\\u0026lt;artigo\u0026gt; -o artigo.md .\\artigo.docx\rAs vantagens de usar o Pandoc são muitas:\n Converte a formatação Negrito, Itálico e Negrito-Itálico nos equivalentes MarkDown Converte links nos equivalentes MarkDown sem \u0026ldquo;escapar\u0026rdquo; os caracteres dos links que o MarkDown não permite. Reproduz a estrutura de estilos (Título 1, Tìtulo 2) nos Headings do MarkDown e no índice (TOC) do artigo Extrai as imagens para uma pasta e coloca o link para a imagem inline, e inclui a informação alt text que seja colocada nas propriedades da imagem dentro do Word, mas não uso.  Abro o .MD no Notepad++ para:\n Retirar os parágrafos duplicados que ficam entre cada linha Busca e substituição (shortcodes, caminhos com / em vez de \\, e outros)  Crio o artigo dentro do Hugo:\nhugo new content\\pt\\\u0026lt;secção\u0026gt;\\\u0026lt;artigo\u0026gt;.md\rEdito o FrontMatter e copio o texto do Notepad++ para o novo .MD\nCopio as imagens para \u0026lt;site\u0026gt;/static/images/\u0026lt;secção\u0026gt;/\u0026lt;artigo\u0026gt;/\nLigo o site Hugo local:\nhugo server --buildFuture\rE faço os ajustes necessários no VSCode, onde tenho um workspace para o site.\nA tradução para Inglês é feita com uma extensão VSCode, funkyremi.VScode Google Translate, onde pus nas preferências que quero traduzir sempre de Português para Inglês. Copio o ficheiro \u0026lt;artigo\u0026gt;.MD para o local equivalente debaixo de \u0026lt;site\u0026gt;/content/en/, abro-o lado-a -lado com a versão em Português (de preferência no segundo monitor, porque é fácil fazer confusão entre os dois a meio da tradução), selecciono o texto que quero traduzir evitando termos técnicos, Alt-Shift-T e já está; não é perfeito e há muita afinação a fazer depois, mas poupa muito trabalho.\n","description":"Produzir conteúdo já não é fácil, mas reinventar a roda é que não...","id":11,"section":"blog","tags":null,"title":"Workflow dos artigos","uri":"https://tiagojsilva.github.io/pt/blog/2021-09-22_workflow/"},{"content":"De início não estava a pensar em permitir comentários, mas como o ser humano é um animal social, fui ver se podia configurar um sistema sem ter de inventar muito.\nDe início considerei o Disq.us, que vem do origem com o Hugo, mas tem muitas desvantagens.\nO Zdoc tem pré-configurado o Utteranc.es, que tem as vantagens de exigir um registo GitHub (gente que se porta bem, espero eu) e de ficar num repo.\nCriei um repo público só para os comentários e instalei a app Utteranc.es no repo.\nConfiguração Bastou ir ao config/params.toml, ligar o sistema de comentários e configurar as credenciais:\n1 2 3 4 5  enableComment = true [utterances] # https://utteranc.es/ owner = \u0026#34;\u0026lt;GitHub Username\u0026gt;\u0026#34; # Your GitHub ID repo = \u0026#34;\u0026lt;utteranc.es repo name\u0026gt;\u0026#34; # The repo to store comments   E o Zdoc acrescenta automaticamente um campo de comentários no final dos artigos.\nBlog Mas nos posts do Blog, não. Para isso, é necessaário editar manualmente o partial, acrescentando {{ partial \u0026quot;comments/comments.html\u0026quot; . }} na secção correcta:\n1 2 3 4 5 6 7 8 9  \u0026lt;article id=\u0026#34;list-main\u0026#34; class=\u0026#34;{{ if $wideViewAsDefault }}lm{{ else }}m{{ end }}\u0026#34; data-dir=\u0026#34;{{ $.Param \u0026#34;languagedir\u0026#34; | default \u0026#34;ltr\u0026#34; }}\u0026#34;\u0026gt; {{ if $.Param \u0026#34;enableBlogBreadcrumb\u0026#34; }} {{ partial \u0026#34;main/component/breadcrumb.html\u0026#34; . }} {{ end }} {{ partial \u0026#34;main/sections/list-main.html\u0026#34; . }} {{ partial \u0026#34;main/component/pagination-single.html\u0026#34; . }} {{ partial \u0026#34;comments/comments.html\u0026#34; . }} \u0026lt;/article\u0026gt;   E já está.\nInfelizmente, como se baseia em GitHub Issues e não em GitHub Discussions não há pré-moderação. Por isso portem-se bem.\n","description":"Vox populi","id":12,"section":"blog","tags":null,"title":"Comentários nos artigos","uri":"https://tiagojsilva.github.io/pt/blog/2021-09-15_site-comments/"},{"content":"O Zdoc tem uma secção \u0026ldquo;Updates\u0026rdquo; (que eu traduzi para \u0026ldquo;Histórico\u0026rdquo;), mas os artigos dentro dela eram criados à mão. Como sou preguiçoso (a pessoa mais preguiçosa do mundo) e não gosto de fazer coisas à mão quando podem ser automatizadas, tentei arranjar maneira de produzir um site index com menos esforço.\nNo Wordpress e outras plataformas dinâmicas é facílimo, mas num site estático como o Hugo, as soluções envolviam plugins, NPM, Node.js, tudo coisas com as quais não queria interagir (agora).\nMas felizmente, há uma possibilidade de fingir essa funcionalidade usando uma função interna do Hugo, que são as Taxonomies. Felizmente, não as uso para mais nada, mas não sei se fazer isto impede outros usos para as Taxonomies.\nAcrescenta-se o seguinte ao config.toml\n1 2 3 4 5 6 7  [taxonomies] year = \u0026#34;year\u0026#34; month = \u0026#34;month\u0026#34; [permalinks] year = \u0026#34;updates/:slug/\u0026#34; month = \u0026#34;updates/:slug/\u0026#34;   Fazer isto acrescenta automaticamente páginas site/updates/ano e páginas site/updates/ano/mês, preenchidas com o :slug de todas as páginas que tenham esses valores nas variáveis year:  e month: que agora podemos começar a pôr no Frontmatter de cada página, desta forma:\n1 2 3 4 5 6 7  ---title:\u0026#34;Secção Histórico\u0026#34;description:\u0026#34;Mais um hack...\u0026#34;[...]year:[\u0026#34;2021\u0026#34;]month:[\u0026#34;2021/09\u0026#34;]---  Para gerar estes campos automaticamente quando se cria um artigo ou post novos com hugo new, acrescentou-se o seguinte ao Frontmatter dos archetypes (archetypes/blog/post.md e  archetypes/default.md):\nyear: [\u0026quot;{{ now.Format \u0026quot;2006\u0026quot; }}\u0026quot;]\rmonth: [\u0026quot;{{ now.Format \u0026quot;2006/01\u0026quot; }}\u0026quot;]\rE para que estas páginas não tenham o formato do blog (que é a configuração por defeito para Taxonomies), fez-se a seguinte mudança no layouts/_default/taxonomy.html\n1 2 3 4 5 6 7  \u0026lt;div class=\u0026#34;top\u0026#34;\u0026gt; \u0026lt;header class=\u0026#34;header__wrapper bgcolor__header\u0026#34;\u0026gt; {{ with .Site.GetPage \u0026#34;section\u0026#34; \u0026#34;blog\u0026#34; }} {{ if eq .Params.blogHeaderType \u0026#34;img\u0026#34; }} \u0026lt;!-- {{ partial \u0026#34;header/blog-header.html\u0026#34; . }} --\u0026gt; {{ partial \u0026#34;header/custom-header.html\u0026#34; . }} {{ else }}   O layouts/partials/header/custom-header.html do Zdoc está vazio; se quiser alguma coisa no header pode editá-lo ou fazer um novo. No entanto, tal como está a configuração neste momento, o que escolher será aplicado a todas as Taxonomies\nDepois bastou fazer links estáticos no content/\u0026lt;lang\u0026gt;/updates/_index.md para as páginas automaticamente geradas:\n1 2 3  Actualizações [2021](/pt/updates/2021) - [Agosto](/pt/updates/2021/08)   Sim, ainda tenho de criar estes links à mão, mas as páginas atras dos links são criadas sem que eu tenha de colocar cada post lá um a um.\nProgresso!\nFontes:\nhttps://discourse.gohugo.io/t/how-to-generate-chronological-blog-archives-in-hugo/13491/5\nhttps://discourse.gohugo.io/t/strugling-with-chronological-blog-archive/31963/2\nhttps://gohugo.io/templates/lists/\n","description":"Mais um hack...","id":13,"section":"blog","tags":null,"title":"Secção Histórico","uri":"https://tiagojsilva.github.io/pt/blog/2021-09-04_updates-page/"},{"content":"Uma coisa que me está a irritar no Zdoc é o espaço que se perde com as barras laterais, deixando pouco espaço ao centro para os artigos e tornando as imagens pequenas (sobretudo quando são screenshots widescreen).\nNão percebo o suficiente de HTML para tentar alargar a coluna central (aparte a seta pré-definida acima que alarga a coluna do artigo mas esconde o TOC), mas posso tentar que as imagens sejam mostradas em maior tamanho quando se clica nelas.\nJá agora, porque é que existe uma preferência wideViewAsDefault = true no config/params.toml mas não existe uma só para o Blog? O Blog não tem uma barra lateral à esquerda, por isso é para esse lado que a Wide View expande, deixando a TOC em paz no Blog. Wide View no Blog seria de graça\u0026hellip;\nPortanto fui a este link e configurei a biblioteca Lightbox.\nDescarreguei a última release e coloquei:\n lightbox.css em static/css/ lightbox.jsem static/js/\nAcrescentei no fim deste ficheiro:  1 2 3  // ========= lightbox \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;/css/lightbox.css\u0026#34;\u0026gt; // ==================   Acrescentei antes do tag \u0026lt;/body\u0026gt; neste ficheiro:\n1 2 3 4 5 6 7 8  \u0026lt;!-- /lightbox --\u0026gt; \u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-3.4.1.min.js\u0026#34; integrity=\u0026#34;sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;/js/lightbox.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;/css/lightbox.css\u0026#34;\u0026gt; \u0026lt;!-- /lightbox --\u0026gt;   Criei um shortcode lightbox, que aceita as mesmas opções do shortcode figure em que se baseia:\n\r\rExpandir\r\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53  {{ if .Get \u0026#34;caption\u0026#34; }} {{ $.Scratch.Set \u0026#34;caption\u0026#34; (.Get \u0026#34;caption\u0026#34;) }} {{ else if .Get \u0026#34;alt\u0026#34; }} {{ $.Scratch.Set \u0026#34;caption\u0026#34; (.Get \u0026#34;alt\u0026#34;) }} {{ end }} \u0026lt;!-- resolve absolute image path --\u0026gt; {{ $permalink := $.Page.Permalink }} {{ $image := .Get \u0026#34;src\u0026#34; }} {{ $image_link_absolute := (findRE \u0026#34;^/\u0026#34; $image) }} \u0026lt;figure {{ with .Get \u0026#34;class\u0026#34; }}class=\u0026#34;{{.}}\u0026#34;{{ end }} {{ with .Get \u0026#34;width\u0026#34; }}style=\u0026#34;width: {{ . }};\u0026#34;{{ end }} {{ with .Get \u0026#34;height\u0026#34; }}style=\u0026#34;height: {{ . }};\u0026#34;{{ end }} \u0026gt; \u0026lt;a {{ if .Get \u0026#34;lightbox\u0026#34; }} data-lightbox=\u0026#34;{{ .Get \u0026#34;lightbox\u0026#34; | markdownify | plainify }}\u0026#34; {{ else }} data-lightbox=\u0026#34;image-{{ $image }}\u0026#34; {{ end }} {{ if $image_link_absolute }} href=\u0026#34;{{ $image | absURL }}\u0026#34; {{ else }} href=\u0026#34;{{ (printf \u0026#34;%s%s\u0026#34; $permalink $image) }}\u0026#34; {{ end }} {{ with .Get \u0026#34;target\u0026#34; }} target=\u0026#34;{{ . }}\u0026#34;{{ end }} {{ with .Get \u0026#34;rel\u0026#34; }} rel=\u0026#34;{{ . }}\u0026#34;{{ end }}\u0026gt; \u0026lt;img {{ if $image_link_absolute }} src=\u0026#34;{{ $image | absURL }}\u0026#34; {{ else }} src=\u0026#34;{{ (printf \u0026#34;%s%s\u0026#34; $permalink $image) }}\u0026#34; {{ end }} {{ if .Get \u0026#34;alt\u0026#34; }}alt=\u0026#34;{{ .Get \u0026#34;alt\u0026#34; | markdownify | plainify }}\u0026#34; {{ else if .Get \u0026#34;caption\u0026#34; }}alt=\u0026#34;{{ .Get \u0026#34;caption\u0026#34; | markdownify | plainify }}\u0026#34; {{ end }} {{ with .Get \u0026#34;align\u0026#34; }}align=\u0026#34;{{ . }}\u0026#34;{{ end }} /\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;!-- caption and attr--\u0026gt; {{ if ($.Scratch.Get \u0026#34;caption\u0026#34;) }} \u0026lt;figcaption\u0026gt; \u0026lt;span class=\u0026#34;img--caption\u0026#34;\u0026gt; Figure {{ $.Page.Scratch.Get \u0026#34;fig\u0026#34; }}. {{ $.Scratch.Get \u0026#34;caption\u0026#34; | markdownify | plainify }} {{ if .Get \u0026#34;attr\u0026#34; }} [{{- with .Get \u0026#34;attrlink\u0026#34;}}\u0026lt;a href=\u0026#34;{{ . }}\u0026#34;\u0026gt;{{ end }}{{ .Get \u0026#34;attr\u0026#34; | markdownify }}{{ if .Get \u0026#34;attrlink\u0026#34;}}\u0026lt;/a\u0026gt;{{ end -}}] {{ end }} \u0026lt;/span\u0026gt; \u0026lt;/figcaption\u0026gt; {{ end }} \u0026lt;/figure\u0026gt; {{ .Page.Scratch.Add \u0026#34;fig\u0026#34; 1 }} {{ $.Scratch.Delete \u0026#34;caption\u0026#34;}}   \r\r\nE está feito, tenho o efeito lightbox activado!\nClique na imagem em baixo para experimentar:\n\r\r","description":"Eu só atiro barro à parede...","id":14,"section":"blog","tags":null,"title":"Achievement unlocked: Lightbox","uri":"https://tiagojsilva.github.io/pt/blog/2021-09-02_lightbox/"},{"content":"Pois, tenho mexido aqui nalgumas coisas nos bastidores:\nAlterações no tema Eu queria usar um tema Hugo para documentação (documentos estruturados), se possível com um blog associado para conteúdo menos estruturado.\nQueria que tivesse (sem ordem de importância):\n Tema claro / escuro Multilíngua (i18n) Várias secções independentes Capacidade de incluir nas caixas de código tanto números de linha como prompts fora do texto, para que fossem ignorados ao copiar o conteúdo da caixa Ter caixas de saída de comandos com formatação distinta  Só encontrei este tema, o Zdoc, que tinha uma grande parte das coisas que queria (o Docz parece estar a evoluir como uma alternativa), mas ainda lhe falta muita coisa:\n Não suporta caixas de saída de comandos Só inclui prompts $ e \u0026gt; (e eu precisava também de #, PS e PS#) não podia inserir ficheiros de configuração externos inline não tem um botão para copiar o conteúdo de uma caixa de código  De ressalvar que nenhum tema Hugo tem isto tudo.\nCaixas de saída de comandos Resolvi com um shortcode e formatação CSS inline\n1 2  \u0026lt;pre style=\u0026#34;font-style: italic; font-size: 0.79rem\u0026#34;\u0026gt; {{.Inner}}\u0026lt;/pre\u0026gt;   Output...\r Prompts para root, PowerShell e PowerShell admin Não foi nada de que me sinta especialmente orgulhoso, porque o código original era muito simples, bastou-me copiar e mudar alguns valores:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  var hashCodeElem = document.querySelectorAll(\u0026#39;div.language-\\\\#\u0026#39;); hashCodeElem ? hashCodeElem.forEach(function(elem) { var lnts = elem.parentNode.parentNode ? elem.parentNode.parentNode.querySelectorAll(\u0026#39;.lnt\u0026#39;) : null; lnts ? lnts.forEach(function(lnt) { lnt.innerHTML = \u0026#39;#\u0026lt;br/\u0026gt;\u0026#39;; }) : null; }) : null; var psCodeElem = document.querySelectorAll(\u0026#39;div.language-\\\\ps\u0026#39;); psCodeElem ? psCodeElem.forEach(function(elem) { var lnts = elem.parentNode.parentNode ? elem.parentNode.parentNode.querySelectorAll(\u0026#39;.lnt\u0026#39;) : null; lnts ? lnts.forEach(function(lnt) { lnt.innerHTML = \u0026#39;PS\u0026gt;\u0026lt;br/\u0026gt;\u0026#39;; }) : null; }) : null; var psadmCodeElem = document.querySelectorAll(\u0026#39;div.language-\\\\psa\u0026#39;); psadmCodeElem ? psadmCodeElem.forEach(function(elem) { var lnts = elem.parentNode.parentNode ? elem.parentNode.parentNode.querySelectorAll(\u0026#39;.lnt\u0026#39;) : null; lnts ? lnts.forEach(function(lnt) { lnt.innerHTML = \u0026#39;PS#\u0026lt;br/\u0026gt;\u0026#39;; }) : null; }) : null;   1  rm -rf /   1  Stop-Computer   1  Stop-Computer -Computer DC01   Inserir ficheiros de texto externos Não consegui o que queria mas desenrasquei-me assim:\n Um shortcode para ler um ficheiro externo e colocá-lo dentro de um code fence:  1 2 3 4  \u0026lt;!--https://stackoverflow.com/a/45421343--\u0026gt; {{ $file := .Get \u0026#34;file\u0026#34; | readFile }} {{ $lang := .Get \u0026#34;language\u0026#34; }} {{ (print \u0026#34;```\u0026#34; $lang \u0026#34;\\n\u0026#34; $file \u0026#34;\\n```\u0026#34;) | markdownify }}    Colocado dentro de um shortcode expand para criar um dropdown (incluído no Zdocs) E antecedido dum link para descarregar o ficheiro\nToda esta complicação é para minorar o problema que se segue.  Copiar blocos de código Não consegui dar a volta; por causa do processamento que o tema faz aos code fences para inserir os prompts, o código que encontro para fazer isso falha, porque tenta copiar o texto do sítio errado ou coloca o botão no sítio errado.\nE como o CINEL, na sua imensa sabedoria, não me ensinou CSS nem estrutura DOM (o primeiro ano desse curso em que deixaram de ensinar isso), ainda estou um bocado perdido.\nMudança da fonte de título A fonte de título original do tema era a Montserrat, que era graficamente muito engraçada mas eu achei que no peso Black-900 que estava a ser usado desiquilibrava muito a página e a leitura era difícil.\nMudei-a para a fonte MPlus.\nConteúdo Desenvolver conteúdos para pôr aqui tem sido mais difícil do que estava à espera (além disso, agora tenho um trabalho que me paga as contas). A maior parte do que eu tenho pronto foi desenvolvido durante o curso CET-GRSI, e não posso exactamente chapar isso aqui e deixar os exercícios resolvidos aos próximos alunos!\nEstou a tentar extrair as partes mais avançadas que eram \u0026ldquo;bombons\u0026rdquo; no projecto e que só beneficiariam quem já tivesse feito o grosso dos trabalhos por si, mas não é fácil. Entretanto, estou a preparar uma série de artigos sobre Public Key Infrastructure\nMantenham-se atentos.\nCadência Vou alternar a publicação; cada artigo vai aparecer primeiro em Português, e na semana seguinte uma versão traduzida será publicada no site em Inglês (junto com uma versão portuguesa corrigida).\nEspero publicar novos artigos em semanas alternadas.\n","description":"Mexidas no tema, conteúdo, etc.","id":15,"section":"blog","tags":null,"title":"Actividade Agosto 2021","uri":"https://tiagojsilva.github.io/pt/blog/2021-08-28_site-update/"},{"content":"Dotfiles para Linux Tenho acumulando configurações que me facilitam a vida ou que me resolvem pequenos problemas irritantes.\nPublicar esses ficheiros aqui permite-me descarregá-los e instalá-los em qualquer nova conta que eu crie num sistema Linux.\nO URL para descarregar será https://tiagojsilva.github.io/unix/dotfiles/ficheiro\nExiste um arquivo TAR com todos os ficheiros; para os instalar a todos na sua pasta pessoal (~), usar o comando\n1  wget -O- https://tiagojsilva.github.io/unix/dotfiles/dotfiles.tar | tar -xvf- -C ~   .bashrc \r\rExpandir\r\r# ~/.bashrc: executed by bash(1) for non-login shells. # see /usr/share/doc/bash/examples/startup-files (in the package bash-doc) # for examples # If not running interactively, don't do anything case $- in *i*) ;; *) return;; esac # don't put duplicate lines or lines starting with space in the history. # See bash(1) for more options HISTCONTROL=ignoreboth # append to the history file, don't overwrite it shopt -s histappend # for setting history length see HISTSIZE and HISTFILESIZE in bash(1) HISTSIZE=1000 HISTFILESIZE=2000 # check the window size after each command and, if necessary, # update the values of LINES and COLUMNS. shopt -s checkwinsize # If set, the pattern \u0026quot;**\u0026quot; used in a pathname expansion context will # match all files and zero or more directories and subdirectories. shopt -s globstar # make less more friendly for non-text input files, see lesspipe(1) [ -x /usr/bin/lesspipe ] \u0026amp;\u0026amp; eval \u0026quot;$(SHELL=/bin/sh lesspipe)\u0026quot; # set variable identifying the chroot you work in (used in the prompt below) if [ -z \u0026quot;${debian_chroot:-}\u0026quot; ] \u0026amp;\u0026amp; [ -r /etc/debian_chroot ]; then debian_chroot=$(cat /etc/debian_chroot) fi # set a fancy prompt (non-color, unless we know we \u0026quot;want\u0026quot; color) case \u0026quot;$TERM\u0026quot; in xterm-color|*-256color) color_prompt=yes;; esac # uncomment for a colored prompt, if the terminal has the capability; turned # off by default to not distract the user: the focus in a terminal window # should be on the output of commands, not on the prompt #force_color_prompt=yes if [ -n \u0026quot;$force_color_prompt\u0026quot; ]; then if [ -x /usr/bin/tput ] \u0026amp;\u0026amp; tput setaf 1 \u0026gt;\u0026amp;/dev/null; then # We have color support; assume it's compliant with Ecma-48 # (ISO/IEC-6429). (Lack of such support is extremely rare, and such # a case would tend to support setf rather than setaf.) color_prompt=yes else color_prompt= fi fi if [ \u0026quot;$color_prompt\u0026quot; = yes ]; then PS1='${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ ' else PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ ' fi unset color_prompt force_color_prompt # If this is an xterm set the title to user@host:dir case \u0026quot;$TERM\u0026quot; in xterm*|rxvt*) PS1=\u0026quot;\\[\\e]0;${debian_chroot:+($debian_chroot)}\\u@\\h: \\w\\a\\]$PS1\u0026quot; ;; *) ;; esac # enable color support of ls and also add handy aliases if [ -x /usr/bin/dircolors ]; then #force my dircolors # test -r ~/.dircolors \u0026amp;\u0026amp; eval \u0026quot;$(dircolors -b ~/.dircolors)\u0026quot; || eval \u0026quot;$(dircolors -b)\u0026quot; source .dircolors alias ls='ls --color=auto' alias dir='dir --color=auto' #alias vdir='vdir --color=auto' alias grep='grep --color=auto' alias fgrep='fgrep --color=auto' alias egrep='egrep --color=auto' fi # colored GCC warnings and errors export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01' # some more ls aliases alias ll='ls -hlF' alias la='ls -hA' alias lla='ls -ahlF' alias l='ls -hCF' # Add an \u0026quot;alert\u0026quot; alias for long running commands. Use like so: # sleep 10; alert alias alert='notify-send --urgency=low -i \u0026quot;$([ $? = 0 ] \u0026amp;\u0026amp; echo terminal || echo error)\u0026quot; \u0026quot;$(history|tail -n1|sed -e '\\''s/^\\s*[0-9]\\+\\s*//;s/[;\u0026amp;|]\\s*alert$//'\\'')\u0026quot;' # Alias definitions. # You may want to put all your additions into a separate file like # ~/.bash_aliases, instead of adding them here directly. # See /usr/share/doc/bash-doc/examples in the bash-doc package. if [ -f ~/.bash_aliases ]; then . ~/.bash_aliases fi # enable programmable completion features (you don't need to enable # this, if it's already enabled in /etc/bash.bashrc and /etc/profile # sources /etc/bash.bashrc). if ! shopt -oq posix; then if [ -f /usr/share/bash-completion/bash_completion ]; then . /usr/share/bash-completion/bash_completion elif [ -f /etc/bash_completion ]; then . /etc/bash_completion fi fi \r\r .dircolors O padrão do Debian, mas troca o Azul Escuro das directorias por Amarelo.\n\r\rExpandir\r\r1 2 3  export LS_COLORS=\u0026#39;rs=0:di=01;93:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:\u0026#39;; \n \r\r\n.bash_aliases \r\rExpandir\r\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  alias ll=\u0026#39;ls -hlF\u0026#39; alias la=\u0026#39;ls -hA\u0026#39; alias lla=\u0026#39;ls -ahlF\u0026#39; alias cp=\u0026#39;cp -i\u0026#39; alias mv=\u0026#39;mv -i\u0026#39; alias rm=\u0026#39;rm -i --preserve-root\u0026#39; alias df=\u0026#39;df -H\u0026#39; alias du=\u0026#39;du -hs\u0026#39; alias wget=\u0026#39;wget -c\u0026#39; alias ports=\u0026#39;netstat -tulanp\u0026#39; alias cls=\u0026#39;clear\u0026#39; alias chown=\u0026#39;chown --preserve-root\u0026#39; alias chmod=\u0026#39;chmod --preserve-root\u0026#39; alias chgrp=\u0026#39;chgrp --preserve-root\u0026#39; alias srvno=\u0026#39;systemctl stop\u0026#39; alias sysno=\u0026#39;systemctl stop\u0026#39; alias srvgo=\u0026#39;systemctl start\u0026#39; alias sysgo=\u0026#39;systemctl start\u0026#39; alias srvsta=\u0026#39;systemctl start\u0026#39; alias syssta=\u0026#39;systemctl start\u0026#39; alias srvrst=\u0026#39;systemctl restart\u0026#39; alias sysrst=\u0026#39;systemctl restart\u0026#39; alias srvena=\u0026#39;systemctl enable\u0026#39; alias sysena=\u0026#39;systemctl enable\u0026#39; alias srvdis=\u0026#39;systemctl disable\u0026#39; alias sysdis=\u0026#39;systemctl disable\u0026#39; alias srvstat=\u0026#39;systemctl status\u0026#39; alias sysstat=\u0026#39;systemctl status\u0026#39; alias sudo=\u0026#39;sudo \u0026#39; \n \r\r .bash_functions \r\rExpandir\r\r1 2 3 4  function mcd () { mkdir -vp -- \u0026#34;$1\u0026#34; \u0026amp;\u0026amp; cd -P -- \u0026#34;$1\u0026#34; }   \r\r .vimrc \r\rExpandir\r\ru0026#34; MIT Missing Semester 2020 Lecture 3 Youtube\u0026#34; https://missing.csail.mit.edu/2020/editors/\u0026#34; Comments in Vimscript start with a `\u0026#34;`.\u0026#34; tjs: load defaultssource $VIMRUNTIME/defaults.vim\u0026#34; If you open this file in Vim, it\u0026#39;ll be syntax highlighted for you.\u0026#34; Vim is based on Vi. Setting `nocompatible` switches from the default\u0026#34; Vi-compatibility mode and enables useful Vim functionality. This\u0026#34; configuration option turns out not to be necessary for the file named\u0026#34; \u0026#39;~/.vimrc\u0026#39;, because Vim automatically enters nocompatible mode if that file\u0026#34; is present. But we\u0026#39;re including it here just in case this config file is\u0026#34; loaded some other way (e.g. saved as `foo`, and then Vim started with\u0026#34; `vim -u foo`).set nocompatible\u0026#34; Cores/temas\u0026#34;set termguicolorsset background=darkcolo industryif has(\u0026#34;gui running\u0026#34;) set guioptions-=T set guioptions+=e set t_Co=256 set guitablabel=%M\\ %t let g:gruvbox_termcolors=256 let g:gruvbox_contrast_dark=\u0026#39;medium\u0026#39; colorscheme gruvboxendif\u0026#34; Turn on syntax highlighting.syntax on\u0026#34; Disable the default Vim startup message.set shortmess+=I\u0026#34; Show line numbers.set number\u0026#34; This enables relative line numbering mode. With both number and\u0026#34; relativenumber enabled, the current line shows the true line number, while\u0026#34; all other lines (above and below) are numbered relative to the current line.\u0026#34; This is useful because you can tell, at a glance, what count is needed to\u0026#34; jump up or down to a particular line, by {count}k to go up or {count}j to go\u0026#34; down.\u0026#34;set relativenumber\u0026#34; Always show the status line at the bottom, even if you only have one window open.set laststatus=2\u0026#34; The backspace key has slightly unintuitive behavior by default. For example,\u0026#34; by default, you can\u0026#39;t backspace before the insertion point set with \u0026#39;i\u0026#39;.\u0026#34; This configuration makes backspace behave more reasonably, in that you can\u0026#34; backspace over anything.set backspace=indent,eol,start\u0026#34; By default, Vim doesn\u0026#39;t let you hide a buffer (i.e. have a buffer that isn\u0026#39;t\u0026#34; shown in any window) that has unsaved changes. This is to prevent you from \u0026#34;\u0026#34; forgetting about unsaved changes and then quitting e.g. via `:qa!`. We find\u0026#34; hidden buffers helpful enough to disable this protection. See `:help hidden`\u0026#34; for more information on this.set hidden\u0026#34; This setting makes search case-insensitive when all characters in the string\u0026#34; being searched are lowercase. However, the search becomes case-sensitive if\u0026#34; it contains any capital letters. This makes searching more convenient.set ignorecaseset smartcase\u0026#34; Enable searching as you type, rather than waiting till you press enter.set incsearch\u0026#34; Unbind some useless/annoying default key bindings.nmap Q \u0026lt;Nop\u0026gt; \u0026#34; \u0026#39;Q\u0026#39; in normal mode enters Ex mode. You almost never want this.\u0026#34; Disable audible bell because it\u0026#39;s annoying.set noerrorbells visualbell t_vb=\u0026#34; Enable mouse support. You should avoid relying on this too much, but it can\u0026#34; sometimes be convenient.set mouse+=a\u0026#34; Try to prevent bad habits like using the arrow keys for movement. This is\u0026#34; not the only possible bad habit. For example, holding down the h/j/k/l keys\u0026#34; for movement, rather than using more efficient movement commands, is also a\u0026#34; bad habit. The former is enforceable through a .vimrc, while we don\u0026#39;t know\u0026#34; how to prevent the latter.\u0026#34; Do this in normal mode...\u0026#34;nnoremap \u0026lt;Left\u0026gt; :echoe \u0026#34;Use h\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;nnoremap \u0026lt;Right\u0026gt; :echoe \u0026#34;Use l\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;nnoremap \u0026lt;Up\u0026gt; :echoe \u0026#34;Use k\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;nnoremap \u0026lt;Down\u0026gt; :echoe \u0026#34;Use j\u0026#34;\u0026lt;CR\u0026gt;\u0026#34; ...and in insert mode\u0026#34;inoremap \u0026lt;Left\u0026gt; \u0026lt;ESC\u0026gt;:echoe \u0026#34;Use h\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;inoremap \u0026lt;Right\u0026gt; \u0026lt;ESC\u0026gt;:echoe \u0026#34;Use l\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;inoremap \u0026lt;Up\u0026gt; \u0026lt;ESC\u0026gt;:echoe \u0026#34;Use k\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;inoremap \u0026lt;Down\u0026gt; \u0026lt;ESC\u0026gt;:echoe \u0026#34;Use j\u0026#34;\u0026lt;CR\u0026gt;\u0026#34; escrever 4 espaços quando se usa TABset expandtabset tabstop=4set shiftwidth=4set softtabstop=4\u0026#34; open new split panes to right and bottom, which feels more naturalset splitbelowset splitrightset showmatch \u0026#34; show matching braces when text indicator is over themfiletype plugin indent on \u0026#34; enable file type detectionset autoindent\u0026#34; leader passa a ser ,let mapleader = \u0026#34;,\u0026#34;\u0026#34; Permanent undoset undodir=~/.vimdidset undofile\u0026#34; Ctrl+c and Ctrl+j as Esc\u0026#34; Ctrl-j is a little awkward unfortunately:\u0026#34; https://github.com/neovim/neovim/issues/5916\u0026#34; So we also map Ctrl+kinoremap \u0026lt;C-j\u0026gt; \u0026lt;Esc\u0026gt;nnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;inoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;vnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;snoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;xnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;cnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;onoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;lnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;tnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;nnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;inoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;vnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;snoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;xnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;cnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;onoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;lnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;tnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;\u0026#34; Neat X clipboard integration\u0026#34; \\p will paste clipboard into buffer\u0026#34; \\c will copy entire buffer into clipboardnoremap \u0026lt;leader\u0026gt;p :read !xsel --clipboard --output\u0026lt;cr\u0026gt;noremap \u0026lt;leader\u0026gt;c :w !xsel -ib\u0026lt;cr\u0026gt;\u0026lt;cr\u0026gt;\u0026#34; turn off search highlightvnoremap \u0026lt;C-h\u0026gt; :nohlsearch\u0026lt;cr\u0026gt;nnoremap \u0026lt;C-h\u0026gt; :nohlsearch\u0026lt;cr\u0026gt;\u0026#34; statusline\u0026#34;cores\u0026#34;terminal BG azulhi statusline ctermfg=4 \u0026#34;terminal letras cyanhi statusline ctermbg=6 set statusline= \u0026#34; clear the statusline for when vimrc is reloadedset statusline+=%-3.3n\\ \u0026#34; buffer numberset statusline+=%f\\ \u0026#34; file nameset statusline+=%h%m%r%w \u0026#34; flagsset statusline+=[%{strlen(\u0026amp;ft)?\u0026amp;ft:\u0026#39;none\u0026#39;}, \u0026#34; filetypeset statusline+=%{strlen(\u0026amp;fenc)?\u0026amp;fenc:\u0026amp;enc}, \u0026#34; encodingset statusline+=%{\u0026amp;fileformat}] \u0026#34; file formatset statusline+=%= \u0026#34; right alignset statusline+=%{synIDattr(synID(line(\u0026#39;.\u0026#39;),col(\u0026#39;.\u0026#39;),1),\u0026#39;name\u0026#39;)}\\ \u0026#34; highlightset statusline+=%b,0x%-8B\\ \u0026#34; current charset statusline+=%-14.(%l,%c%V%)\\ %\u0026lt;%P \u0026#34; offset\u0026#34; Folding\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;set foldenable \u0026#34; enable foldingset foldlevelstart=10 \u0026#34; open most folds by defaultset foldnestmax=10 \u0026#34; 10 nested fold max\u0026#34; space open/closes folds\u0026#34; nnoremap \u0026lt;space\u0026gt; zaset foldmethod=indent \u0026#34; fold based on indent level\u0026#34; This is especially useful for me since I spend my days in Python.\u0026#34; Other acceptable values are marker, manual, expr, syntax, diff.\u0026#34; Run :help foldmethod to find out what each of those do.\u0026#34; Custom Functions\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34; toggle between number and relativenumber (\\t)function! ToggleNumber() if(\u0026amp;relativenumber == 1) set norelativenumber set number else set relativenumber endifendfuncnnoremap \u0026lt;leader\u0026gt;t :call ToggleNumber()\u0026lt;CR\u0026gt;\u0026#34; Vim Markdown\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;let g:markdown_fenced_languages = [ \\ \u0026#39;bash=sh\u0026#39;, \\ \u0026#39;c\u0026#39;, \\ \u0026#39;coffee\u0026#39;, \\ \u0026#39;erb=eruby\u0026#39;, \\ \u0026#39;javascript\u0026#39;, \\ \u0026#39;json\u0026#39;, \\ \u0026#39;perl\u0026#39;, \\ \u0026#39;python\u0026#39;, \\ \u0026#39;ruby\u0026#39;, \\ \u0026#39;yaml\u0026#39;, \\ \u0026#39;go\u0026#39;,\\]let g:vim_markdown_conceal = 2  \r\r .nanorc \r\rExpandir\r\r## .nanorc tjs 2020-06 ## https://www.if-not-true-then-false.com/2009/tuning-nano-text-editor-with-nanorc/ # scroll by line set smooth # indent set autoindent # easy backup (ficheiro~) set backup # one line more for content set morespace # hide shortcut help # set nohelp # tab 4 spaces set tabsize 4 # convert tabs to spaces on insertion set tabstospaces ########## #sintax ## Nanorc files include \u0026quot;/usr/share/nano/nanorc.nanorc\u0026quot; ## C/C++ include \u0026quot;/usr/share/nano/c.nanorc\u0026quot; ## HTML include \u0026quot;/usr/share/nano/html.nanorc\u0026quot; ## TeX include \u0026quot;/usr/share/nano/tex.nanorc\u0026quot; ## Quoted emails (under e.g. mutt) include \u0026quot;/usr/share/nano/mutt.nanorc\u0026quot; ## Patch files include \u0026quot;/usr/share/nano/patch.nanorc\u0026quot; ## Manpages include \u0026quot;/usr/share/nano/man.nanorc\u0026quot; ## Groff include \u0026quot;/usr/share/nano/groff.nanorc\u0026quot; ## Perl include \u0026quot;/usr/share/nano/perl.nanorc\u0026quot; ## Python include \u0026quot;/usr/share/nano/python.nanorc\u0026quot; ## Ruby include \u0026quot;/usr/share/nano/ruby.nanorc\u0026quot; ## Java include \u0026quot;/usr/share/nano/java.nanorc\u0026quot; ## Assembler include \u0026quot;/usr/share/nano/asm.nanorc\u0026quot; ## Bourne shell scripts include \u0026quot;/usr/share/nano/sh.nanorc\u0026quot; ## POV-Ray include \u0026quot;/usr/share/nano/pov.nanorc\u0026quot; \r\r .tmux.conf A tecla de atalho passa a ser Ctrl-A (que faz muito mais sentido, especialmente para quem trocar o CapsLock para Control), mas como interfere com a navegação na shell, é preciso segurar no Ctrl e teclar A duas vezes.\r\n\r\rExpandir\r\r#### #Keybindings #### # remap prefix from 'C-b' to 'C-a' # interfere com o \u0026quot;inicio de linha\u0026quot; na shell, passa a ser C-a+C-a unbind C-b set-option -g prefix C-a bind-key C-a send-prefix # split panes using | and - bind | split-window -h bind - split-window -v unbind '\u0026quot;' unbind % # reload config file (change file location to your the tmux.conf you want to use) bind r source-file ~/.tmux.conf # switch panes using Alt-arrow without prefix bind -n M-Left select-pane -L bind -n M-Right select-pane -R bind -n M-Up select-pane -U bind -n M-Down select-pane -D # Enable mouse mode (tmux 2.1 and above) set -g mouse on ###################### ### DESIGN CHANGES ### ###################### # loud or quiet? set -g visual-activity off set -g visual-bell off set -g visual-silence off setw -g monitor-activity off set -g bell-action none # modes setw -g clock-mode-colour colour5 setw -g mode-style 'fg=colour1 bg=colour18 bold' # panes set -g pane-border-style 'fg=colour19 bg=colour0' set -g pane-active-border-style 'bg=colour0 fg=colour9' # statusbar set -g status-position bottom set -g status-justify left #set -g status-style 'bg=colour18 fg=colour137 dim' set -g status-style 'bg=blue fg=colour240' set -g status-left '' set -g status-right '#[fg=colour253,bg=colour19] %d/%m #[fg=colour253,bg=colour8] %H:%M:%S ' set -g status-right-length 50 set -g status-left-length 20 #setw -g window-status-current-style 'fg=colour1 bg=colour19 bold' setw -g window-status-current-style 'fg=brightblue bg=cyan' #setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F ' setw -g window-status-current-format ' #I#[fg=white]:#[fg=colour255]#W#[fg=black]#F ' setw -g window-status-style 'fg=colour9 bg=colour18' #setw -g window-status-style 'fg=brightred bg=brightgreen' #setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F ' setw -g window-status-format ' #I#[fg=red]:#[fg=green]#W#[fg=blue]#F ' setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold' #setw -g window-status-bell-style 'fg=red bg=white bold' # messages #set -g message-style 'fg=colour232 bg=colour16 bold' set -g message-style 'fg=white bg=red bold'  \r\n","description":"Unix/Linux dotfiles","id":16,"section":"unixlike","tags":null,"title":"Dotfiles","uri":"https://tiagojsilva.github.io/pt/unixlike/dotfiles/"},{"content":"Sentem-se, e estejam à vontade.\nTenho tido a sorte de fazer dos meus gostos profissão; em novo, tive de escolher um deles (Som para Cinema), mas as voltas da vida levaram-me a abraçar um outro gosto, as TI, Mesmo que no final de contas tenha voltado à casa de partida, não dei o meu tempo como perdido; tive óptimos professores e colegas e aprendi imensas coisas que sempre quis saber\nPor isso, porque o bichinho acordou e para evitar que me esqueça de tudo, decidi fazer este site para registar e partilhar o que vou aprendendo.\nE se de caminho ajudar mais alguém, fico feliz por isso.\nQuando acabei o curso CET-GRSI (Gestão de Redes e de Sistemas de Informação) no CINEL, em 2020, e voltei para o Restauro de Som, dei de caras com este vídeo que me inspirou:\n\rQue de resto são coisas básicas: continuar a progredir, documentar extensivamente, e manter-me atento.\nUm dos conselhos já foi seguido: criar um site pessoal estático.\nÉ mesmo aqui. Bem-vindos.\n","description":"É preciso começar por qualquer lado!","id":17,"section":"blog","tags":null,"title":"Hello World","uri":"https://tiagojsilva.github.io/pt/blog/2021-08-09_hello-world/"}]