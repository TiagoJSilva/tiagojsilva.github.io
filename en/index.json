[{"content":"Obarun and S6 The suite S6 - Skarnet.org\u0026rsquo;s Small \u0026amp; Secure Supervision Software Suite includes an init, one of several projects that rebelled against SystemD by trying to prove there were better and/or simpler ways to do the same thing. For whom?\r\nDespite the official implementation of S6 began to be on Alpine Linux, for some reason the author now collaborates with Adélie Linux, which I\u0026rsquo;ve already tried.\nHowever, the most mature implementation of S6-init seems to be on Obarun, an Arch-based distro and, as far as I know, without any input from the author of S6, despite all of them being French. I say this because S6 still hasn\u0026rsquo;t specified a mechanism to organize the dependencies between services (and being a \u0026ldquo;UNIX Way\u0026rdquo;-zealot, it might never do so), which means someone else has to do it; and Obarun\u0026rsquo;s contribution is a set of scripts called 66\nTherefore, to try S6 I had to install Obarun; being Arch-based, I feared the worst, but compared to Adélie it was actually pretty simple to install.\n\r\rInstallation Notes  The PT-UTF8 locale has bad character rendering on the text console (wrong settings on grub.cfg?)\n\r\rI reinstalled with the en_GB-UTF8 locale and it worked properly. If you install on Minimal mode, VirtualBox\u0026rsquo;s NAT provides the DHCP options and the nameserver address (DHCP option 5) is written to /etc/resolv.conf; on a NATnetwork it doesn\u0026rsquo;t, /etc/resolv.conf has to be edited by hand. VirtualBox bug? NATnetwork is known for being buggy, maybe one of those is failing to send DHCP options - but I didn\u0026rsquo;t deploy a packet sniffer to check\u0026hellip;  S6/66 (v.6.3+) 66 is, as i said, a management layer over the S6 suite, which is based on the creation of a set of trees by the administrator; these trees are something in-between the numerical/alphabetical ordering of SysV-init and the dynamically-updated graph of SystemD.\nExample: installing SSHD The sshd service is installed with\n1  pacman -S --needed openssh   66 stage 1: service script The service script to control the openssh service isn\u0026rsquo;t installed automatically; it must be created, or obtained from the scripts that exist in the observice repository. All the service scripts that exist in this repo can be listed with:\n1  pacman -Sl observice   To install the necessary service script,\n1  pacman -S sshd-66serv   To tell the system the service was added,\n1  66-enable sshd   Now we can look at the contents of the service script with:\n1  66-inservice sshd   Name : sshd\rVersion : 0.2.1\rIn tree : Status : Type : classic\rDescription : ssh daemon\rSource : /usr/lib/66/service/sshd\rLive : /run/66/scandir/0/sshd\rDependencies : sshd-log\rExternal dependencies : None\rOptional dependencies : None\rStart script : foreground { exec ssh-keygen -A } execl-cmdline -s { /usr/sbin/sshd -f ${conf_file} ${cmd_args} }\rStop script : None\rEnvironment source : /etc/66/conf/sshd/0.2.1\rEnvironment file : environment variables from: /etc/66/conf/sshd/0.2.1/.sshd\rconf_file=!/etc/ssh/sshd_config\rcmd_args=!-D\rLog name : sshd-log\rLog destination : /var/log/66/sshd\rLog file : None\r 66 stage 2: configure dependencies However, services have to be added to a tree before starting; the tree codifies the services' dependencies.\nTo see and manipulate the trees, the 66-intree command is used (from 66 version 0.6x onwards)\nI find the -g switch very useful, since it shows the dependency structure of the services that are configured in the trees.\n1  66-intree -g   Name : boot\rInitialized : yes\rEnabled : no\rStarts after : None\rCurrent : no\rAllowed : root\rSymlinks : svc-source db-source\rContents : /\r├─(144,Enabled,classic) tty-earlier@tty12\r├─(up,Enabled,oneshot) system-hostname\r├─(up,Enabled,oneshot) mount-run\r├─(up,Enabled,oneshot) populate-run\r├─(up,Enabled,oneshot) mount-tmp\r├─(up,Enabled,oneshot) populate-tmp\r├─(up,Enabled,oneshot) mount-proc\r├─(up,Enabled,oneshot) mount-sys\r├─(up,Enabled,oneshot) populate-sys\r├─(up,Enabled,oneshot) mount-dev\r├─(up,Enabled,oneshot) mount-pts\r├─(up,Enabled,oneshot) mount-shm\r├─(up,Enabled,oneshot) populate-dev\r├─(up,Enabled,oneshot) mount-cgroups\r├─(up,Enabled,bundle) 00\r├─(up,Enabled,bundle) all-Mount\r├─(up,Enabled,oneshot) system-hwclock\r├─(up,Enabled,oneshot) modules-kernel\r├─(up,Enabled,oneshot) system-random\r├─(up,Enabled,oneshot) modules-system\r├─(up,Enabled,oneshot) system-sysctl\r├─(184,Enabled,longrun) udevd-log\r├─(359,Enabled,longrun) udevd\r├─(up,Enabled,oneshot) udevadm\r├─(up,Enabled,oneshot) system-fontnkey\r├─(up,Enabled,oneshot) system-fsck\r├─(up,Enabled,oneshot) mount-fstab\r├─(up,Enabled,bundle) all-System\r├─(up,Enabled,oneshot) mount-rw\r├─(up,Enabled,oneshot) mount-netfs\r├─(up,Enabled,oneshot) local-loop\r├─(up,Enabled,oneshot) local-sethostname\r├─(up,Enabled,oneshot) local-time\r├─(up,Enabled,oneshot) local-authfiles\r├─(up,Enabled,oneshot) local-tmpfiles\r├─(up,Enabled,oneshot) local-dmesg\r├─(up,Enabled,bundle) all-Local\r├─(up,Enabled,oneshot) all-Runtime\r├─(up,Enabled,bundle) All\r├─(580,Enabled,longrun) tty-rc@tty1\r├─(579,Enabled,longrun) tty-rc@tty2\r└─(up,Enabled,module) boot@system\rName : root\rInitialized : yes\rEnabled : yes\rStarts after : None\rCurrent : yes\rAllowed : root\rSymlinks : svc-source db-source\rContents : /\r├─(567,Enabled,classic) dhcpcd-log\r└─(566,Enabled,classic) dhcpcd\r To activate the service and start it at the correct place of the startup process, we create a new tree called net (that will run services that depend on the network being configured) after the root tree (where the dhcpcd service which sets the network up currently resides):\n1  66-tree –S root -nE net   66-tree: info: Created successfully tree: net\r66-tree: info: Enabled successfully tree: net\r66-tree: info: Ordered successfully tree: net starts after tree: root\r After creating the new tree, add the sshd service to that tree:\n1  66-enable -t net sshd   66-enable: info: Enabled successfully: sshd\r And finally start all services on that tree:\n1  66-all -t net up   66-all: info: Initialized successfully: sshd-log\r66-all: info: Initialized successfully: sshd\r66-all: info: Initialization: no atomic services into tree: net\r66-all: info: sshd-log: started successfully\r66-all: info: sshd: started successfully\r Now we can connect to Obarun by SSH.\nWe can see the changes that were made by repeating the command 66-intree -g\nName : boot\rInitialized : yes\rEnabled : no\rStarts after : None\rCurrent : no\rAllowed : root\rSymlinks : svc-source db-source\rContents : /\r├─(144,Enabled,classic) tty-earlier@tty12\r├─(up,Enabled,oneshot) system-hostname\r├─(up,Enabled,oneshot) mount-run\r├─(up,Enabled,oneshot) populate-run\r├─(up,Enabled,oneshot) mount-tmp\r├─(up,Enabled,oneshot) populate-tmp\r├─(up,Enabled,oneshot) mount-proc\r├─(up,Enabled,oneshot) mount-sys\r├─(up,Enabled,oneshot) populate-sys\r├─(up,Enabled,oneshot) mount-dev\r├─(up,Enabled,oneshot) mount-pts\r├─(up,Enabled,oneshot) mount-shm\r├─(up,Enabled,oneshot) populate-dev\r├─(up,Enabled,oneshot) mount-cgroups\r├─(up,Enabled,bundle) 00\r├─(up,Enabled,bundle) all-Mount\r├─(up,Enabled,oneshot) system-hwclock\r├─(up,Enabled,oneshot) modules-kernel\r├─(up,Enabled,oneshot) system-random\r├─(up,Enabled,oneshot) modules-system\r├─(up,Enabled,oneshot) system-sysctl\r├─(184,Enabled,longrun) udevd-log\r├─(359,Enabled,longrun) udevd\r├─(up,Enabled,oneshot) udevadm\r├─(up,Enabled,oneshot) system-fontnkey\r├─(up,Enabled,oneshot) system-fsck\r├─(up,Enabled,oneshot) mount-fstab\r├─(up,Enabled,bundle) all-System\r├─(up,Enabled,oneshot) mount-rw\r├─(up,Enabled,oneshot) mount-netfs\r├─(up,Enabled,oneshot) local-loop\r├─(up,Enabled,oneshot) local-sethostname\r├─(up,Enabled,oneshot) local-time\r├─(up,Enabled,oneshot) local-authfiles\r├─(up,Enabled,oneshot) local-tmpfiles\r├─(up,Enabled,oneshot) local-dmesg\r├─(up,Enabled,bundle) all-Local\r├─(up,Enabled,oneshot) all-Runtime\r├─(up,Enabled,bundle) All\r├─(580,Enabled,longrun) tty-rc@tty1\r├─(579,Enabled,longrun) tty-rc@tty2\r└─(up,Enabled,module) boot@system\rName : root\rInitialized : yes\rEnabled : yes\rStarts after : None\rCurrent : yes\rAllowed : root\rSymlinks : svc-source db-source\rContents : /\r├─(565,Enabled,classic) sshd-log\r├─(567,Enabled,classic) dhcpcd-log\r├─(566,Enabled,classic) dhcpcd\r└─(564,Enabled,classic) sshd\rName : net\rInitialized : yes\rEnabled : yes\rStarts after : root\rCurrent : no\rAllowed : root\rSymlinks : svc-source db-source\rContents : /\r├─(565,Enabled,classic) sshd-log\r└─(564,Enabled,classic) sshd\r\nFinal thoughts Yes, 66\u0026rsquo;s trees allow us to manage the dependencies of services in a slightly more intuitive way than the classic numbered scripts of SysV-init, but they are very far from the ease of use of SystemD\u0026rsquo;s service units, which are declarative.\nIn addition, the installation and configuration of SystemD\u0026rsquo;s service units is automated most of the time by the package managers of SystemD-supporting distros, and by being declarative, all that\u0026rsquo;s needed is to create the service unit and then SystemD will take charge of extracting the dependencies and parallelism in the configured services. Although 66 supports the parallel startup of services through the use of trees, it still falls to the administrator to define exactly the starting order of each service.\nFor those wanting more control over the boot process than what\u0026rsquo;s offered by SystemD, it\u0026rsquo;s great, or at least less work-intensive than SysV-init. 66\u0026rsquo;s scripts do help, but not much.\nOf course what S6, OpenRC, Runit, etc, are missing, are the thousands of hours of programming that were invested on SystemD and quantity in this case has a quality in itself. In comparison, all these inits are a cake which is missing the yeast to rise.\nIf you are interested in contributing to this project, they need you.\n","description":"A(nother) SystemD alternative","id":0,"section":"unixlike","tags":null,"title":"S6-init on Obarun","uri":"https://tiagojsilva.github.io/en/unixlike/meme/arch_manjaro/2021-12-02_obarun-install/"},{"content":"OpenSSL-based PKI (part 1) Sources:\nhttps://openssl-ca.readthedocs.io/en/latest/index.html\nhttps://www.golinuxcloud.com/tutorial-pki-certificates-authority-ocsp/\nhttps://social.technet.microsoft.com/wiki/contents/articles/2900.offline-root-certification-authority-ca.aspx\nhttps://pki-tutorial.readthedocs.io/en/latest/index.html\nAn airgapped Root CA The system that contains the RootCA is supposed to be airgapped, to be under controlled access, and to be used only for the emission of new CAs and revocation of compromised CAs. In this example, we can put everything on the same server, but one should try to separate the RootCA from the other CAs as much as possible.\nThe first step is to create a Root Certification Authority (RootCA), which will only create other CAs.\nSwitch to the root user:\n1 2 3 4 5 6 7  mkdir /root/ca \u0026amp;\u0026amp; cd $_ mkdir /root/ca/{certs,crl,newcerts,private} chmod 700 /root/ca/private touch /root/ca/index.txt echo 1000 \u0026gt; /root/ca/serial echo 1000 \u0026gt; /root/ca/crlnumber cat \u0026gt; /root/ca/openssl.cnf   /root/ca/openssl.cnf\n\r\rExpand\r\r# OpenSSL root CA configuration file.\r# Copy to '/root/ca/openssl.cnf.\r[ ca ]\r# 'man ca'\rdefault_ca = CA_default\r[ CA_default ]\r# Directory and file locations.\rdir = /root/ca\rcerts = $dir/certs\rcrl_dir = $dir/crl\rnew_certs_dir = $dir/newcerts\rdatabase = $dir/index.txt\rserial = $dir/serial\rRANDFILE = $dir/private/.rand\r# The root key and root certificate.\rprivate_key = $dir/private/ca.key.pem\rcertificate = $dir/certs/ca.cert.pem\r# For certificate revocation lists.\rcrlnumber = $dir/crlnumber\rcrl = $dir/crl/ca.crl.pem\rcrl_extensions = crl_ext\rdefault_crl_days = 385\r# SHA-1 is deprecated, so use SHA-2 instead.\rdefault_md = sha512\rname_opt = ca_default\rcert_opt = ca_default\rdefault_days = 375\rpreserve = no\rpolicy = policy_strict\r[ policy_strict ]\r# The root CA should only sign intermediate certificates that match.\r# See the POLICY FORMAT section of 'man ca'.\rcountryName = match\rstateOrProvinceName = match\rorganizationName = match\rorganizationalUnitName = optional\rcommonName = supplied\remailAddress = optional\r[ policy_loose ]\r# Allow the intermediate CA to sign a more diverse range of certificates.\r# See the POLICY FORMAT section of the 'ca' man page.\rcountryName = optional\rstateOrProvinceName = optional\rlocalityName = optional\rorganizationName = optional\rorganizationalUnitName = optional\rcommonName = supplied\remailAddress = optional\r[ req ]\r# Options for the 'req' tool ('man req').\rdefault_bits = 4096\rdistinguished_name = req_distinguished_name\rstring_mask = utf8only\r# SHA-1 is deprecated, so use SHA-2 instead.\rdefault_md = sha512\r# Extension to add when the -x509 option is used.\rx509_extensions = v3_ca\r[ req_distinguished_name ]\r# See \u0026lt;https://en.wikipedia.org/wiki/Certificate_signing_request\u0026gt;.\rcountryName = Country Name (2 letter code)\rstateOrProvinceName = State or Province Name\rlocalityName = Locality Name\r0.organizationName = Organization Name\rorganizationalUnitName = Organizational Unit Name\rcommonName = Common Name\remailAddress = Email Address\r# Optionally, specify some defaults.\rcountryName_default = PT\rstateOrProvinceName_default = Lisboa\rlocalityName_default = Lisboa\r0.organizationName_default = TiagoJoaoSilva\rorganizationalUnitName_default = TJS\remailAddress_default = bofh@tjs.lan\r[ v3_ca ]\r# Extensions for a typical CA ('man x509v3_config').\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid:always,issuer\rbasicConstraints = critical, CA:true\rkeyUsage = critical, digitalSignature, cRLSign, keyCertSign\r[ v3_intermediate_ca ]\r# Extensions for a typical intermediate CA ('man x509v3_config').\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid:always,issuer\rbasicConstraints = critical, CA:true, pathlen:0\rkeyUsage = critical, digitalSignature, cRLSign, keyCertSign\r[ usr_cert ]\r# Extensions for client certificates ('man x509v3_config').\rbasicConstraints = CA:FALSE\rnsCertType = client, email\rnsComment = \u0026quot;OpenSSL Generated Client Certificate\u0026quot;\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer\rkeyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment\rextendedKeyUsage = clientAuth, emailProtection\r[ server_cert ]\r# Extensions for server certificates ('man x509v3_config').\rbasicConstraints = CA:FALSE\rnsCertType = server\rnsComment = \u0026quot;OpenSSL Generated Server Certificate\u0026quot;\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer:always\rkeyUsage = critical, digitalSignature, keyEncipherment\rextendedKeyUsage = serverAuth\r[ crl_ext ]\r# Extension for CRLs ('man x509v3_config').\rauthorityKeyIdentifier=keyid:always\r[ ocsp ]\r# Extension for OCSP signing certificates ('man ocsp').\rbasicConstraints = CA:FALSE\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer\rkeyUsage = critical, digitalSignature\rextendedKeyUsage = critical, OCSPSigning\r\r\r\nWe create a random complex password:\n1 2 3  openssl rand -base64 12 \u0026gt; /root/ca/private/ca.key.pass chmod 400 /root/ca/private/ca.key.pass cat /root/ca/private/ca.key.pass   ayUiXnIjZFRh\r\nWe create the key and provide the complex password:\n1 2  openssl genrsa -aes256 -passout file:/root/ca/private/ca.key.pass \\ -out /root/ca/private/ca.key.pem 8192   Generating RSA private key, 8192 bit long modulus (2 primes)\r......................................................+++\r..+++\re is 65537 (0x010001)\r\nThen we create (and self-sign) the RootCA certificate:\n1 2 3 4 5 6  chmod 400 /root/ca/private/ca.key.pem openssl req -config /root/ca/openssl.cnf \\ -passin file:/root/ca/private/ca.key.pass \\ -key /root/ca/private/ca.key.pem \\ -new -x509 -days 7300 -sha512 -extensions v3_ca \\ -out /root/ca/certs/ca.cert.pem   You are about to be asked to enter information that will be incorporated\rinto your certificate request.\rWhat you are about to enter is what is called a Distinguished Name or a DN.\rThere are quite a few fields but you can leave some blank\rFor some fields there will be a default value,\rIf you enter '.', the field will be left blank.\r-----\rCountry Name (2 letter code) [PT]:\rState or Province Name [Lisboa]:\rLocality Name [Lisboa]:\rOrganization Name [TiagoJoaoSilva]:\rOrganizational Unit Name [TJS]:\rCommon Name []:ca-tjs-1\rEmail Address [bofh@tjs.lan]:\r 1  chmod 444 /root/ca/certs/ca.cert.pem   We can check the certificate\u0026rsquo;s contents:\n1  openssl x509 -noout -text -in /root/ca/certs/ca.cert.pem   Certificate:\rData:\rVersion: 3 (0x2)\rSerial Number:\r25:92:4d:14:da:6f:9f:8b:4b:49:55:fc:68:be:9e:c7:57:24:cd:70\rSignature Algorithm: sha512WithRSAEncryption\rIssuer: C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\rValidity\rNot Before: Aug 12 19:38:30 2021 GMT\rNot After : Aug 7 19:38:30 2041 GMT\rSubject: C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\rSubject Public Key Info:\rPublic Key Algorithm: rsaEncryption\rRSA Public-Key: (8192 bit)\rModulus: [...]\rExponent: 65537 (0x10001)\rX509v3 extensions:\rX509v3 Subject Key Identifier:\r01:F2:CC:54:E0:F2:58:AC:E2:14:8E:2B:DB:6D:B6:FF:5C:25:41:A0\rX509v3 Authority Key Identifier:\rkeyid:01:F2:CC:54:E0:F2:58:AC:E2:14:8E:2B:DB:6D:B6:FF:5C:25:41:A0\rX509v3 Basic Constraints: critical\rCA:TRUE\rX509v3 Key Usage: critical\rDigital Signature, Certificate Sign, CRL Sign\rSignature Algorithm: sha512WithRSAEncryption\r[...]\r Certificate Revocation Before we go any further, I think we have to talk right now about the revocation of certificates, unlike all other Internet tutorials which leave it until the end, if at all; if we do not configure Certificate Revocation now, it will be too late to be included in any certificate created by our RootCA.\nHow to revoke a certificate 1 2 3 4 5 6  stamp=$(date +%F_%T) mv /root/ca/inter-ca/certs/example-ca.cert.pem{,-revoked_$stamp} openssl ca -config /root/ca/openssl.cnf \\ -passin file:/root/ca/private/ca.key.pass \\ -revoke /root/ca/inter-ca/certs/example-ca.cert.pem-revoked_$stamp \\ -crl_reason unspecified   -crl_reason can also have the values keyCompromise, CACompromise, affiliationChanged, superseded, cessationOfOperation, certificateHold, or (for Delta-CRLs only) removeFromCRL\n-crl_hold automatically places the reason as certificateHold but that\u0026rsquo;s outside the scope of this document\n-crl_compromise AAAAMMDDHHMMSSZ sets the reason as keyCompromise on the suppied date.\n-crl_CA_compromise AAAAMMDDHHMMSSZ does the same, but the reason is CACompromise\nWe need to set up a mechanism for the RootCA to disseminate the information of the revoked certificates, and this needs to be done before creating any subsequent certificate, by adding information to the RootCA\u0026rsquo;s openssl.cnf before de creating any certificate (up to and including other CAs).\nCRL distribution The classic method is the direct distribution of the CRL lists, which can be done by various means, such as an HTTP server, an LDAP or AD directory, etc.; there may still be an additional complication because to avoid the constant transmission of large files you can use Delta-CRLs containing only the changes to the CRL, but while these can be implemented in Windows or other PKI packages, they are not available on OpenSSL.\nThese lists are usually updated (because they expire and all CA certificates are no longer accepted) at a maximum of every 30 days, but the RootCA\u0026rsquo;s CRL list should not expire (or expire only annually when it is time to update the system that hosts the RootCA).\n[CA_default]\rdefault_crl_days = 385\rAt that time, the CRL is refreshed and (in the case of an airgapped RootCA system) extracted on paper, QR Code, CD-R or other safe medium, then taken to the system from where it will be distributed.\nThe distribution format of these lists is DER (binary coding), but the file must have a .CRL extension (RFC 2585).\nThe other method, more recommended these days, is using an OCSP Responder to answer queries about the validity of a certificate interactively, which is a quick operation that does not require much bandwidth, certifies the revocation by signing it with a key from the originator CA, and that answer can be cached on the clients (through OCSP Stapling).\nAs the RootCA\u0026rsquo;s CRL will contain very few certificates (the RootCA will only issue other CAs, called IntermediateCAs, SubordinateCAs ou\nSigningCAs, which won\u0026rsquo;t be many), let\u0026rsquo;s set up a CRLDistribution package for the RootCA.\nWe begin by putting the information from where the CRL will be served on the [ v3_intermediate_ca ] section of /root/ca/openssl.cnf, to be\nIncluded in any certificates issued by the RootCA. We will use an HTTP server on port 7788:\n[ v3_intermediate_ca ]\rcrlDistributionPoints = URI:http://server.tjs.lan:7788/root-ca.crl\rWe create the CRL (https://blog.didierstevens.com/2013/05/08/howto-make-your-own-cert-and-revocation-list-with-openssl/)\n1 2 3 4  openssl ca -config /root/ca/openssl.cnf -gencrl \\ -passin file:/root/ca/private/ca.key.pass \\ -keyfile /root/ca/private/ca.key.pem -cert /root/ca/certs/ca.cert.pem \\ -out /root/ca/crl/ca.crl.pem   We verify the contents of the CRL:\n1  openssl crl -in /root/ca/crl/ca.crl.pem -noout -text   Certificate Revocation List (CRL):\rVersion 2 (0x1)\rSignature Algorithm: sha512WithRSAEncryption\rIssuer: C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\rLast Update: Aug 13 23:46:07 2021 GMT\rNext Update: Sep 2 23:46:07 2022 GMT\rCRL extensions:\rX509v3 Authority Key Identifier:\rkeyid:01:F2:CC:54:E0:F2:58:AC:E2:14:8E:2B:DB:6D:B6:FF:5C:25:41:A0\rX509v3 CRL Number:\r4097\rRevoked Certificates:\rSerial Number: 1001\rRevocation Date: Aug 13 22:11:25 2021 GMT\rCRL entry extensions:\rX509v3 CRL Reason Code:\rUnspecified\rSerial Number: 1002\rRevocation Date: Aug 13 23:41:51 2021 GMT\rCRL entry extensions:\rX509v3 CRL Reason Code:\rSuperseded\rSignature Algorithm: sha512WithRSAEncryption [...]\r\nAnd we need to convert the PEM (Base64) into DER format:\n1 2  # openssl crl -inform PEM -in /root/ca/crl/ca.crl.pem \\ -outform DER -out /root/ca/crl/root-ca.crl   Network-connected system Since the RootCA should be airgapped and offline, it is not on the RootCA\u0026rsquo;s system that we should configure the CRL\u0026rsquo;s distribution because that system must be accessible on the network.\nWe set up a new Debian 11 system, and recreate the folder that contains the RootCA\u0026rsquo;s CRL:\n1  mkdir -p /root/ca/crl   We bring the root-ca.crl file to it using a safe mechanism (burn a CD-R, printing and scanning with OCR, etc.) e place it in /root/ca/crl\nInstall and configure the CRLDistribution webserver Let\u0026rsquo;s use a very basic webserver, lighttpd\n1  apt install lighttpd -y   According to Debian\u0026rsquo;s wiki about Lighttpd, the default installation configures the service, grabs the 80/TCP port, runs with the wser www-data, set the webroot to be /var/www/html, and the default file to be index.php or  index.html, although it comes pre-configured to not run .php files.\nLet\u0026rsquo;s set up a different port (7788), another webroot to not interfere with the defaults from other webservers, and we will disable the automatic redirection to index.html\nIn addition, and this can be important, the MIME type settings have been pre-configured with a Perl script, which we may have to edit and re-do because the CRL files have to be served by HTTP with a specific MIME type, application/pkix-crl\n(https://pki-tutorial.readthedocs.io/en/latest/mime.html)\n1  cp /etc/lighttpd/lighttpd.conf{,.orig}   Change the lines:\n 1 server.modules = (\r2 # \u0026quot;mod_indexfile\u0026quot;,\r3 # \u0026quot;mod_access\u0026quot;,\r4 # \u0026quot;mod_alias\u0026quot;,\r5 # \u0026quot;mod_redirect\u0026quot;,\r6 )\r8 server.document-root = \u0026quot;/var/www/crl\u0026quot;\r10 server.errorlog = \u0026quot;/var/log/lighttpd/crl-error.log\u0026quot;\r14 server.port = 7788\r41 #index-file.names = ( \u0026quot;index.php\u0026quot;, \u0026quot;index.html\u0026quot; )\rCreate a new webroot:\n1  mkdir /var/www/crl   Move the original index.html installed by the lighttpd package to that place and deactivate it:\n1 2  mv /var/www/html/index.lighttpd.html /var/www/crl/index.lighttpd.html.disabled   Place the DER-format CRL inside webroot:\n1 2 3  cp /root/ca/crl/root-ca.crl /var/www/crl/root-ca.crl chown www-data:www-data /var/www/crl/root-ca.crl chmod 400 /var/www/crl/root-ca.crl   To configure the MIME types, the lighttpd.conf package called a script that creates a MIME configuration from the types defined in /etc/mime.types; did the latter already have a definition for the CRL\u0026rsquo;s MIME type?\n1  grep pkix-crl /etc/mime.types   application/pkix-crl crl\r\nTherefore, line 47 of lighttpd.conf will create a list of MIME types that includes our CRL type each time the lighttpd service is started.\n47 include_shell \u0026quot;/usr/share/lighttpd/create-mime.conf.pl\u0026quot;\rWe check lighttpd.conf\u0026rsquo;s syntax for errors:\n1  lighttpd -tt -f /etc/lighttpd/lighttpd.conf   2021-08-14 02:26:38: configfile.c.1142) WARNING: unknown config-key:\rurl.access-deny (ignored)\r\nThis error isn\u0026rsquo;t important, so:\n1 2  systemctl restart lighttpd systemctl status lighttpd   ● lighttpd.service - Lighttpd Daemon\rLoaded: loaded (/lib/systemd/system/lighttpd.service; enabled; vendor preset: enabled)\rActive: active (running)\r 1  systemctl enable lighttpd   Synchronizing state of lighttpd.service with SysV service script with /lib/systemd/systemd-sysv-install.\rExecuting: /lib/systemd/systemd-sysv-install enable lighttpd\r\nWe open port 7788 in the firewall:\n1  ufw allow 7788   And test access to the file:\n1  wget localhost:7788/root-ca.crl   Resolving localhost (localhost)... ::1, 127.0.0.1\rConnecting to localhost (localhost)|::1|:7788... connected.\rHTTP request sent, awaiting response... 200 OK\rLength: 1359 (1.3K) [application/pkix-crl]\rSaving to: ‘root-ca.crl’\rroot-ca.crl 100%[=================================================] 1.33K --.-KB/s in 0s\r2021-08-14 02:33:18 (168 MB/s) - ‘root-ca.crl’ saved [1359/1359] \nConnection was established and the file is served with the correct MIME type.\nBut unfortunately, you should only use CRLs when we are sure that our clients support this format (and in this regard, none is better than Microsoft). For example, it is impossible to revoke webserver certificates by CRLDistribution because only Internet Explorer has the code to download and analyze a CRL (Firefox and Chrome don\u0026rsquo;t even care) https://news.netcraft.com/archives/2013/05/13/how-certificate-revocation-doesnt-work-in-practice.html . That\u0026rsquo;s why it\u0026rsquo;s safer to set up the alternative mechanism, which is an OCSP Responder, also called AIA due to the directive that configures it ( AuthorityInfoAccess).\nSetting up the OCSP Responder on the RootCA\u0026rsquo;s CNF We start by placing on the RootCA\u0026rsquo;s openssl.cnf the following, on the [ intermediate_ca ] section:\nauthorityInfoAccess = OCSP;URI:http://ocsp.tjs.lan:7899\rWe can use any TCP port for the OCSP Responder, and it\u0026rsquo;s usually listening on a seldom-used HTTP port (like 8008). I chose port 7899 because after analyzing IANA\u0026rsquo;s port list, TCP ports 7888-7899 are not assigned, and may be used for this purpose. If we weren\u0026rsquo;t using CRLD, Lighttpd could also be switched off and port 7788 reused.\nThe protocol is HTTP and not HTTPS because how would any OCSP\u0026rsquo;s SSL Certificate be checked? (https://social.technet.microsoft.com/Forums/office/en-US/c65e1784-39be-4732-a135-bfba7446ad05/should-the-ocsp-responder-service-be-running-http-80-or-https-443-) The configuration of an OCSP Responder will be documented in the next part, which will about configuring an IntermediateCA. But we left the information in the RootCA\u0026rsquo;s .CNF in case we want to implement an OCSP Responder later.\nNote: if this information is not configured now, it can only be introduced on the PKI (and passed to any downstream certificates issued by the RootCA) by revoking and re-issuing all certificates already issued; therefore the structure of a PKI should be very well-planned before being implemented.\nNow we can start the IntermediateCA\u0026rsquo;s configuration.\n","description":"PKI in OpenSSL: part 1 (RootCA)","id":1,"section":"sec","tags":null,"title":"PKI OpenSSL (pt 1)","uri":"https://tiagojsilva.github.io/en/sec/pki/opensslpki_1/"},{"content":"Some time ago, I needed to simulate a heterogeneous network, with a Cisco router connected to another Huawei router.\nIt wasn\u0026rsquo;t easy because IOS is not publicly available and the Huawei simulator, eNSP, is discontinued and only works on VirtualBox 5.\nTo make this simulation, a CPU that supports VM nesting (Second-Level Address Translation - SLAT) is required.\nSimulation VM Create a Windows 7-based VM, with 4GB of RAM, 2 vCPUS and 4 network interfaces.It may be possible to lower RAM for 2GB, but this has not been tested; 1GB has been tested and is insufficient.\n\r\rIn order for the ARP protocol of the simulated routers to not complain that there are duplicate IPs in different MACs, it\u0026rsquo;s necessary to do MAC Spoofing on purpose, placing in the MAC configuration of each VirtualBox interface the MAC of the simulated router interface that it will represent. First the MAC is left in the standard setting, and then after we raise the simulated routers we take note of the MAC of each router\u0026rsquo;s interface, switch off the VM, and introduces this MAC in the corresponding VirtualBox interface configuration before bringing back the VM.\nCisco\u0026rsquo;s simulated router can change its MACs to duplicate the default VirtualBox MACs, so this step is optional for the Cisco\u0026rsquo;s interfaces; the same is supposed to be possible in the Huawei router, but although it is described in the manual, the simulation of the AR2220 can not change its MACs, so this step is required for the simulated Huawei router to work.\nThe final settings are:\nVirtual Interface 1  Internal Network: WAN Promiscuous: Allow All  Virtual Interface 2  Internal Network: LAN Promiscuous: Allow All  Virtual Interface 3  Internal Network: WAN Always with the same MAC as the corresponding external interface of the Huawei router Promiscuous: Allow All  Virtual Interface 4  Internal Network: LAN Always with the same MAC as the corresponding external interface of the Huawei router Promiscuous: Allow All\n\r\r  Guest\u0026rsquo;s network configuration Control Panel, Network Connections\nVirtual Interface 1\u0026rsquo;s \u0026ldquo;real\u0026rdquo; interface (confirm, for example, by disconnecting the virtual network cable)\nName: C-Outside or Cisco-EXT\nIP: 10.5.222.4\nNetmask: 255.255.0.0\nGateway: \u0026ndash;\nVirtual Interface 2\u0026rsquo;s \u0026ldquo;real\u0026rdquo; interface Name: C-Inside or Cisco-INT\nIP: 10.10.0.58\nNetmask: 255.255.255.248\nGateway: \u0026ndash;\nVirtual Interface 3\u0026rsquo;s \u0026ldquo;real\u0026rdquo; interface Name: H-Outside or Huawei-EXT\nIP: 10.5.222.6\nNetmask: 255.255.0.0\nGateway: \u0026ndash;\nVirtual Interface 4\u0026rsquo;s \u0026ldquo;real\u0026rdquo; interface Name: H-Inside or Huawei-INT\nIP: 10.10.0.59\nNetmask: 255.255.255.248\nGateway: \u0026ndash;\nSoftware to install  VirtualBox 5.2.x and its Extension Pack Winpcap 4.1.3 Wireshark-win64 3.2.5 eNSP V100R002C00B510 Setup GNS3 2.2.x or higher (don\u0026rsquo;t install GNS3 VM)  Finish the simulation VM\u0026rsquo;s configuration Save all projects, close all programs, turn off the VM (Shutdown)\nOn the VM\u0026rsquo;s Network properties, change each virtual interface\u0026rsquo;s MAC address to the same MAC of the router port that will connect to it \r\rBoot the VM up again, open the projects and configure the routers.\nGNS3 setup for Cisco 7200 Router Simulation Create a template for the Cisco 7200 Click on the first option of the bar on the left, Browse Routers\n+ New template\n\r\rInstall appliance from server\nNext\nPick Routers \u0026gt; Cisco 7200 / Dynamips\nInstall\n\r\rInstall on this computer\nNext\nAllow custom files\nOn the warning *Do you want to proceed? Yes\nChoose the .image file (which is Missing) and click on the Import button below it.\n\r\rChoose the c7200-adventerprisek9-mz.152-4.S3.bin file that has the checksum 79ffe4050b2cac60d51af8b953bb02b7. I do not know how I found this file, surely it fell from the back of a truck and I certainly have no permission to use it (nor do you). The official Cisco IOS images for academic use are included in the (paid) membership for VIRL - Cisco Modeling Labs\nOpen\nThis is not the correct file\nYes\n\r\rIt turns to Ready to Install\nAlternatively, click on Create a new version and create version 152-4.S3\nSelect the original version or newly created version, and\nNext\n\r\rDo you want to install?\nYes\nCreate a new topology for the Cisco router Create a new project.\nDrag a Cisco 7200 router from the template we created.\nRight-click, Configure\n\r\rWe need to add extra network interfaces to the router by inserting interface boards:\nTab Slots\nSlot 1: PA-GE\nSlot 2: PA-GE\nOK\n\r\rClick on the left bar\u0026rsquo;s pane (Browse End Devices).\nDrag two Clouds to the topology and give them appropriate names\n\r\rClick on the cable on the left bar (Add links) - the cursor switches to a +\nClick the router, select a port\n\r\rClick on one of the Clouds, and choose the Windows' network interface that will be used for this port\n\r\rDo the same with the other Cloud.\nRight-click on the router, Start to boot it up.\nRight-click on the router, Console to open the serial console\n\r\rClick on Enter (RETURN), and the simulated router boots already on privileged mode (#)\nMake a note of the MACs of the router interfaces you want to connect to the outside of the topology, because we need to put these MACs in the respective VirtualBox 6 virtual interfaces:\n1  show interface gig1/0   GigabitEthernet1/0 is administratively down, line protocol is down\rHardware is 82543, address is ca01.0438.001c (bia **ca01.0438.001c**)\r Simulated Huawei router eNSP setup for simulated Huawei AR2220 router Unlike the Cisco simulation, the use of eNSP images is free (especially because it is a Linux that simulates the actual software and not a copy of the real software in itself as it is the case of IOS images).\nCreate a new topology for the Huawei router Click the New Topo button\n\r\rDrag an AR2220 router\n\r\rDrag two Clouds and name them\n\r\rRight-click on a cloud, Settings\n\r\rOn the Outside cloud, right-click, Settings\nPort Building\nBinding info: UDP\nPort type: Ethernet\nAdd\n\r\rBinding info: select interface 3\nPort type: Ethernet\nAdd\n\r\rPort Map Setting\nPort type: Ethernet\nLocal Port: 1\nRemote Port: 2\nTwo-way Channel\nAdd\n\r\rClose the window\n\r\rOn the Inside cloud, right-click, Settings\nPort Building\nBinding info: UDP\nPort type: Ethernet\nAdd\nBinding info: select interface 4\nPort type: Ethernet\nAdd\nPort Map Setting\nPort type: Ethernet\nLocal Port: 1\nRemote Port: 2\nTwo-way Channel\nAdd\nClose the window.\nClick on the connections (lightning icon), select Auto or Copper\nConnect the router to each of the clouds (as in Packet Tracer - click, choose Port, click on the destination, choose port)\n\r\r\r\rEsc to leave the connection mode (pointer goes back to normal)\nRight-click on the router, Start (boots the router up)\nRight-click on the router, CLI (opens the serial console)\n\r\rMake a note of the MACs of the router interfaces that were connected to the clouds.\n\u0026lt;Huawei\u0026gt; display int g0/0/0\r[…]\rIP Sending Frames' Format is PKTFMT_ETHNT_2, Hardware address is\r**00e0-fc29-614c**\r[…]\r\n\r\rHuawei initial setup Open the AR2220\u0026rsquo;s CLI\nMay 16 2021 07:43:40-08:00 Huawei %%01IFPDT/4/IF_STATE(l)[0]:Interface GigabitEthernet0/0/0 has turned into UP state.\rMay 16 2021 07:43:40-08:00 Huawei %%01IFPDT/4/IF_STATE(l)[1]:Interface GigabitEthernet0/0/1 has turned into UP state.\r\nDisplay the base config:\n\u0026lt;Huawei\u0026gt; display current\r[V200R003C00]\r#\rsnmp-agent local-engineid 800007DB03000000000000\rsnmp-agent #\rclock timezone China-Standard-Time minus 08:00:00\r#\rportal local-server load portalpage.zip\r#\rdrop illegal-mac alarm\r#\rset cpu-usage threshold 80 restore 75\r#\raaa authentication-scheme default\rauthorization-scheme default\raccounting-scheme default\rdomain default domain default_admin local-user admin password cipher %$%$K8m.Nt84DZ}e#Set the clock to not be on the Beijing timezone:\n\u0026lt;Huawei\u0026gt; clock timezone GMT add 0\r\u0026lt;Huawei\u0026gt; clock daylight-saving-time GMT repeating 01:00 last Sun Mar 01:00 last sun Oct 01:00\r\u0026lt;Huawei\u0026gt; display clock\r2021-05-16 01:21:21 DST\rSunday\rTime Zone(GMT) : UTC+00:00\rDaylight saving time :\rName : GMT\rRepeat mode : repeat\rStart year : 2000\rEnd year : 2099\rStart time : last Sunday March 01:00:00\rEnd time : last Sunday October 01:00:00\rSaving time : 01:00:00\r \u0026lt;Huawei\u0026gt; system-view\rEnter system view, return user view with Ctrl+Z.\r [Huawei] display version\rHuawei Versatile Routing Platform Software\rVRP (R) software, Version 5.130 (AR2200 V200R003C00)\rCopyright (C) 2011-2012 HUAWEI TECH CO., LTD\rHuawei AR2220 Router uptime is 0 week, 0 day, 1 hour, 55 minutes\rBKP 0 version information: 1. PCB Version : AR01BAK2A VER.NC\r2. If Supporting PoE : No\r3. Board Type : AR2220\r4. MPU Slot Quantity : 1\r5. LPU Slot Quantity : 6\rMPU 0(Master) : uptime is 0 week, 0 day, 1 hour, 55 minutes\rMPU version information : 1. PCB Version : AR01SRU2A VER.A\r2. MAB Version : 0\r3. Board Type : AR2220\r4. BootROM Version : 0\r [Huawei] sysname RSFE\r[RSFE]\rSimulated routers' redundancy test Three pings were started on a client in the LAN (internal) network\nIf you\u0026rsquo;re using a Linux system, use the -O option (uppercase \u0026ldquo;o\u0026rdquo;) to show all the ping timeout messages like on Windows\n One ping to 1.1.1.1 One ping to Cisco\u0026rsquo;s internal IP, (10.10.0.60, in this case) One ping to Huawei\u0026rsquo;s internal address, (10.10.0.61, in this case)\nIn the normal situation, with Cisco as the designated router, we have access to the WAN\n\r\r  Shutting down Cisco\u0026rsquo;s internal interface, the ping to 10.10.0.60 stops, but we can still access the WAN.\nI do not know the source of the ICMP duplicate responses, but:\n with the Huawei as backup the pings to 10.10.0.61 return duplicates with Huawei as Master the pings to 10.10.0.61 return normally, but the pings to 1.1.1.1 return duplicates.\n\r\r  Good luck! I hope this hairy hack can help anyone who needs to set up a mixed system even if you are prevented from having access to physical hardware, or serves as an enabler for other, more advanced, topologies.\n","description":"Omelets with no eggs...","id":2,"section":"networking","tags":null,"title":"Cisco and Huawei simulated routers","uri":"https://tiagojsilva.github.io/en/networking/simul/gns3-ensp/"},{"content":"OpenSSL PKI (part 2) - IntermediateCA Creating an IntermediateCA Once again, the intermediateCA(s) must be hosted in a separate system (server) from that which hosts the RootCA, and the RootCA\u0026rsquo;s system (root) should be airgapped and offline. In the online system I don\u0026rsquo;t think it\u0026rsquo;s a bad idea to keep the secondary CAs under /root/ca, which allows the placing the RootCA\u0026rsquo;s certificate on the same path (/root/ca/certs/ca.cert.pem). However, this is the only information from the RootCA that needs to be brought to the online world where the secondary CAs reside; it is even debatable if it is worth bringing the RootCA\u0026rsquo;s CRL in PEM format and putting it in /root/ca/crl/ca.crl.pem.\n1 2 3 4 5  mkdir -p /root/ca/certs cp ca.cert.pem /root/ca/certs/ mkdir /root/ca/crl cp ca.crl.pem /root/ca/crl/ mkdir /root/ca/csr   Create the complete folder tree that is needed to support the IntermediateCA\u0026rsquo;s operations:\n1 2 3 4 5 6  inter=\u0026#34;/root/ca/inter-ca\u0026#34; mkdir $inter/{certs,crl,csr,newcerts,private} chmod 700 $inter/private touch $inter/index.txt echo 1000 \u0026gt; $inter/serial echo 1000 \u0026gt; $inter/crlnumber   Create the configuration file for the InterCA:\n1  cat \u0026gt; $inter/openssl.cnf   /root/ca/inter-ca/openssl.cnf\n\r\rExpandir\r\r# OpenSSL intermediate CA configuration file.\r# Copy to '/root/ca/inter-ca/openssl.cnf'.\r[ ca ]\r# 'man ca'\rdefault_ca = CA_default\r[ CA_default ]\r# Directory and file locations.\rdir = /root/ca/inter-ca\rcerts = $dir/certs\rcrl_dir = $dir/crl\rnew_certs_dir = $dir/newcerts\rdatabase = $dir/index.txt\rserial = $dir/serial\rRANDFILE = $dir/private/.rand\r# The root key and root certificate.\rprivate_key = $dir/private/inter-ca.key.pem\rcertificate = $dir/certs/inter-ca.cert.pem\r# For certificate revocation lists.\rcrlnumber = $dir/crlnumber\rcrl = $dir/crl/inter-ca.crl.pem\rcrl_extensions = crl_ext\rdefault_crl_days = 30\r# SHA-1 is deprecated, so use SHA-2 instead.\rdefault_md = sha512\rname_opt = ca_default\rcert_opt = ca_default\rdefault_days = 375\rpreserve = no\rpolicy = policy_loose\r# copy SAN, OCSP and other stuff to downstream certificates\rcopy_extensions = copy\r[ policy_strict ]\r# The root CA should only sign intermediate certificates that match.\r# See the POLICY FORMAT section of 'man ca'.\rcountryName = match\rstateOrProvinceName = match\rorganizationName = match\rorganizationalUnitName = optional\rcommonName = supplied\remailAddress = optional\r[ policy_loose ]\r# Allow the intermediate CA to sign a more diverse range of certificates.\r# See the POLICY FORMAT section of the 'ca' man page.\rcountryName = optional\rstateOrProvinceName = optional\rlocalityName = optional\rorganizationName = optional\rorganizationalUnitName = optional\rcommonName = supplied\remailAddress = optional\r[ req ]\r# Options for the 'req' tool ('man req').\rdefault_bits = 4096\rdistinguished_name = req_distinguished_name\rstring_mask = utf8only\r# SHA-1 is deprecated, so use SHA-2 instead.\rdefault_md = sha512\r# Extension to add when the -x509 option is used.\rx509_extensions = v3_ca\r[ req_distinguished_name ]\r# See \u0026lt;https://en.wikipedia.org/wiki/Certificate_signing_request\u0026gt;.\rcountryName = Country Name (2 letter code)\rstateOrProvinceName = State or Province Name\rlocalityName = Locality Name\r0.organizationName = Organization Name\rorganizationalUnitName = Organizational Unit Name\rcommonName = Common Name\remailAddress = Email Address\r# Optionally, specify some defaults.\rcountryName_default = PT\rstateOrProvinceName_default = Lisboa\rlocalityName_default = Lisboa\r0.organizationName_default = TiagoJoaoSilva\rorganizationalUnitName_default = TJS\remailAddress_default = bofh@tjs.lan\r[ v3_ca ]\r# Extensions for a typical CA ('man x509v3_config').\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid:always,issuer\rbasicConstraints = critical, CA:true\rkeyUsage = critical, digitalSignature, cRLSign, keyCertSign\r[ v3_intermediate_ca ]\r# Extensions for a typical intermediate CA ('man x509v3_config').\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid:always,issuer\rbasicConstraints = critical, CA:true, pathlen:0\rkeyUsage = critical, digitalSignature, cRLSign, keyCertSign\r[ usr_cert ]\r# Extensions for client certificates ('man x509v3_config').\rbasicConstraints = CA:FALSE\rnsCertType = client, email\rnsComment = \u0026quot;OpenSSL Generated Client Certificate\u0026quot;\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer\rkeyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment\rextendedKeyUsage = clientAuth, emailProtection\r[ server_cert ]\r# Extensions for server certificates ('man x509v3_config').\rbasicConstraints = CA:FALSE\rnsCertType = server\rnsComment = \u0026quot;OpenSSL Generated Server Certificate\u0026quot;\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer:always\rkeyUsage = critical, digitalSignature, keyEncipherment\rextendedKeyUsage = serverAuth\r[ crl_ext ]\r# Extension for CRLs ('man x509v3_config').\rauthorityKeyIdentifier=keyid:always\r[ ocsp ]\r# Extension for OCSP signing certificates ('man ocsp').\rbasicConstraints = CA:FALSE\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer\rkeyUsage = critical, digitalSignature\rextendedKeyUsage = critical, OCSPSigning\r\r\r\nIn an ideal world, there would be several subCAs, named by the use to which they would be intended (usually with different extension sets for each use):\n tls-ca: Certificates for servers and clients vpn-ca: Certificates for VPNs mime-ca: Certificates for email code-ca: Certificates for code signing net-ca: Certificates for network assets\nThe configuration of these extensions is outside the scope of this document. But each of them would have their own folder tree and their copy of the openssl.cnf, to which I would give a more specific name in each case.\nActually, it seems that almost no one bothers to do all this; there\u0026rsquo;s usually a separate CA for external VPNs, if the company develops software there\u0026rsquo;s a CA for code-signing, and then a single CA for all internal systems.\nTo avoid having to create separate configuration files for each certificate that re-specify all the functionalities that are common to the InterCA, we add the following to /root/ca/inter-ca/openssl.cnf:  [ CA_default ]\r(…)\r# copy extensions missing from the CSR to the final certificate\rcopy_extensions = copy\rNote that since this IntermediateCA is more dynamic than the RootCA, its CRL\u0026rsquo;s validity should not be greater than 30 days; I\u0026rsquo;d advise you to set up a periodic task that refreshes the CRL every 29 days.\ndefault_crl_days = 30\rGenerate a complex password for the InterCA:\n1 2  openssl rand -base64 12 \u0026gt; $inter/private/inter-ca.key.pass chmod 400 $inter/private/inter-ca.key.pass   We create the InterCA\u0026rsquo;s key providing the complex password:\n1 2  openssl genrsa -aes256 -passout file:$inter/private/inter-ca.key.pass \\ -out $inter/private/inter-ca.key.pem 8192   Generating RSA private key, 8192 bit long modulus (2 primes)\r......................................................................................................................................................................................................+++\r.....................................................................................................................................................................................................+++\re is 65537 (0x010001)\r 1  chmod 400 $inter-ca/private/inter-ca.key.pem   Create the Certificate Signing Request that will be signed by the RootCA (notice that it is placed on the csr folder of the RootCA):\n1 2 3 4  openssl req -config $inter/openssl.cnf -new -sha512 \\ -passin file:$inter/private/inter-ca.key.pass \\ -key $inter/private/inter-ca.key.pem \\ -out /root/ca/csr/inter-ca.csr.pem   You are about to be asked to enter information that will be incorporated\rinto your certificate request.\rWhat you are about to enter is what is called a Distinguished Name or a DN.\rThere are quite a few fields but you can leave some blank\rFor some fields there will be a default value,\rIf you enter '.', the field will be left blank.\r-----\rCountry Name (2 letter code) [PT]:\rState or Province Name [Lisboa]:\rLocality Name [Lisboa]:\rOrganization Name [TiagoJoaoSilva]:\rOrganizational Unit Name [TJS]:\rCommon Name []:**inter-ca-tjs-2**\rEmail Address [bofh@tjs.lan]\r Sign the CSR with the RootCA Go back to the offline system of the RootCA and add some folder for the IntermediateCA.\nAs it will only support the creation of the InterCA(s) and not its operation, it is much simpler:\n1 2 3  inter=\u0026#34;/root/ca/inter-ca\u0026#34; mkdir $inter/certs chmod 740 $inter/certs   Bring in from the online system the IntermediateCA\u0026rsquo;s CSR, which we place on the same path where it was (the RootCA\u0026rsquo;s csr folder):\n1  cp inter-ca.csr.pem /root/ca/csr   To make sure that the CDL and/or AIA information of the RootCA is passed to the IntermediateCA, we add this directive to the [ CA_default ] section on /root/ca/openssl.cnf\n# copy extensions missing from the CSR to the final certificate\rcopy_extensions = copy\rSign the CSR; notice that we specify the extension from /root/ca/openssl.cnf to be used is [ v3_intermediate_ca ]!\n1 2 3 4 5  openssl ca -config /root/ca/openssl.cnf -extensions v3_intermediate_ca \\ -days 3650 -notext -md sha512 \\ -passin file:/root/ca/private/ca.key.pass \\ -in /root/ca/csr/inter-ca.csr.pem \\ -out $inter/certs/inter-ca.cert.pem   Using configuration from /root/ca/openssl.cnf\rCheck that the request matches the signature\rSignature ok\rCertificate Details:\rSerial Number: 4099 (0x1003)\rValidity\rNot Before: Aug 13 23:44:07 2021 GMT\rNot After : Aug 11 23:44:07 2031 GMT\rSubject:\rcountryName = PT\rstateOrProvinceName = Lisboa\rorganizationName = TiagoJoaoSilva\rorganizationalUnitName = TJS\rcommonName = inter-ca-tjs-2\remailAddress = bofh@tjs.lan\rX509v3 extensions:\rX509v3 Subject Key Identifier:\rE3:75:25:D7:74:08:0B:23:F0:AF:E4:EC:D0:D4:52:CB:5A:3A:10:2E\rX509v3 Authority Key Identifier:\rkeyid:01:F2:CC:54:E0:F2:58:AC:E2:14:8E:2B:DB:6D:B6:FF:5C:25:41:A0\rX509v3 Basic Constraints: critical\rCA:TRUE, pathlen:0\rX509v3 Key Usage: critical\rDigital Signature, Certificate Sign, CRL Sign\rX509v3 CRL Distribution Points:\rFull Name:\rURI:http://server.tjs.lan:7788/root-ca.crl\rCertificate is to be certified until Aug 11 23:44:07 2031 GMT (3650 days)\rSign the certificate? [y/n]:Y\r1 out of 1 certificate requests certified, commit? [y/n]Y\rWrite out database with 1 new entries\rData Base Updated\r\nWe check the signing:\n1  openssl verify -CAfile /root/ca/certs/ca.cert.pem $inter/certs/inter-ca.cert.pem   /root/ca/inter-ca/certs/inter-ca.cert.pem: OK\r\nCreate a certificate for the Chain of Authority with a Chain certificate (also called Bundle), by concatenating the certificates in ascending order - the latter will be the RootCA or the nearest to it.\n1 2 3  cat $inter/certs/inter-ca.cert.pem /root/ca/certs/ca.cert.pem \u0026gt; \\ $inter/certs/inter-ca_chain.cert.pem chmod 444 $inter/certs/inter-ca_chain.cert.pem   Activate the IntermediateCA on the online system Since we left on the online system all the things the IntermediateCA needs to do its job, we only have to bring the certificates signed by the RootCA to their proper place (using safe methods); I didn\u0026rsquo;t find any guidance whether the IntermediateCA\u0026rsquo;s certificates should be placed in /root/ca/certs (as it would be logical to do), so I\u0026rsquo;ll place them in /root/ca/inter-ca/certs\n1  cp inter-ca.cert.pem inter-ca_chain.cert.pem $inter/certs   Revoking IntermediateCA certificates As the number of certificates to issue (or revoke) by the IntermediateCA will be much larger than the RootCA\u0026rsquo;s, it\u0026rsquo;s better to use the OCSP Responder method (also called AIA because of the directive AuthorityInfoAccess that sets it up), to check for certificate revocation.\nSetting up the OCSP Responder\u0026rsquo;s address on the InterCA\u0026rsquo;s CNF We start by putting the following in the [server_cert] and [usr_cert] sections of /root/ca/inter-ca/openssl.cnf\nauthorityInfoAccess = OCSP;URI:http://ocsp.tjs.lan:7888\rCreate the certificate Generate a key:\n1  openssl genrsa -out /root/ca/inter-ca/private/ocsp.tjs.lan.key.pem 4096   Generating RSA private key, 4096 bit long modulus (2 primes)\r...............................++++\r................................................++++\re is 65537 (0x010001)\r\nInsert the OCSP-specific SAN (Subject Alternative Name) informations on another .CNF:\n1  cat \u0026gt; /root/ca/inter-ca/san/ocsp.tjs.lan-san.cnf   [req]\rdistinguished_name = req_distinguished_name\rreq_extensions = req_ext\rprompt = no\r[req_distinguished_name]\rC = PT\rST = Lisboa\rL = Lisboa\rO = Tiago Joao Silva\rOU = TJS\rCN = ocsp.tjs.lan\r[req_ext]\rsubjectAltName = @alt_names\r[alt_names]\rIP.1 = 192.168.1.70\rDNS.1 = ocsp.tjs.lan Build the CSR with that SAN info:\n1 2 3  openssl req -config /root/ca/inter-ca/san/ocsp.tjs.lan-san.cnf -new -sha512 \\ -key /root/ca/inter-ca/private/ocsp.tjs.lan.key.pem \\ -out /root/ca/inter-ca/csr/ocsp.tjs.lan.csr.pem   Confirm the CSR has the SAN info:\n1 2  openssl req -noout -text -in /root/ca/inter-ca/csr/ocsp.tjs.lan.csr.pem | \\ grep -A 1 \u0026#34;Subject Alternative Name\u0026#34;   X509v3 Subject Alternative Name: IP Address:192.168.1.70, DNS:ocsp.tjs.lan\r\nSign the CSR with -extensions ocsp:\n1 2 3 4 5  openssl ca -config /root/ca/inter-ca/openssl.cnf \\ -extensions ocsp -days 823 -notext -md sha512 \\ -passin file:/root/ca/inter-ca/private/inter-ca.key.pass \\ -in /root/ca/inter-ca/csr/ocsp.tjs.lan.csr.pem \\ -out /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem   Using configuration from /root/ca/inter-ca/openssl.cnf\rCheck that the request matches the signature\rSignature ok\rCertificate Details:\rSerial Number: 4099 (0x1003)\rValidity\rNot Before: Aug 22 22:53:56 2021 GMT\rNot After : Nov 23 22:53:56 2023 GMT\rSubject:\rcountryName = PT\rstateOrProvinceName = Lisboa\rlocalityName = Lisboa\rorganizationName = Tiago Joao Silva\rorganizationalUnitName = TJS\rcommonName = ocsp.tjs.lan\rX509v3 extensions:\rX509v3 Basic Constraints:\rCA:FALSE\rX509v3 Subject Key Identifier:\rBD:A6:EE:6D:0F:73:0E:47:DC:26:9A:A8:B0:40:18:55:DB:35:6B:5A\rX509v3 Authority Key Identifier:\rkeyid:E3:75:25:D7:74:08:0B:23:F0:AF:E4:EC:D0:D4:52:CB:5A:3A:10:2E\rX509v3 Key Usage: critical\rDigital Signature\rX509v3 Extended Key Usage: critical\rOCSP Signing\rCertificate is to be certified until Nov 23 22:53:56 2023 GMT (823 days)\rSign the certificate? [y/n]:Y\r1 out of 1 certificate requests certified, commit? [y/n]Y\rWrite out database with 1 new entries\rData Base Updated\r\nConfirm the certificate has the OCSP extension info:\n1 2  openssl x509 -noout -text -in /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem | \\ grep -A1 X509v3   X509v3 extensions:\rX509v3 Basic Constraints:\rCA:FALSE\rX509v3 Subject Key Identifier:\rBD:A6:EE:6D:0F:73:0E:47:DC:26:9A:A8:B0:40:18:55:DB:35:6B:5A\rX509v3 Authority Key Identifier:\rkeyid:E3:75:25:D7:74:08:0B:23:F0:AF:E4:EC:D0:D4:52:CB:5A:3A:10:2E\r--\rX509v3 Key Usage: critical\rDigital Signature\rX509v3 Extended Key Usage: critical\rOCSP Signing\r 1  chmod 400 $inter/certs/ocsp.tjs.lan.cert.pem   Use OpenSSL to create a testing OCSP Responder (do not use in production) For testing, we\u0026rsquo;ll activate OpenSSL\u0026rsquo;s in-built OCSP Responder temporarily:\n we\u0026rsquo;ll use port 7888, one of the previously known free ports (see Part 1) with the-nrequest 1 option, it wil close itself after a single query and we\u0026rsquo;ll gather a log.  1 2 3 4 5 6  openssl ocsp -index /root/ca/inter-ca/index.txt -port 7888 -text \\ -CA /root/ca/inter-ca/certs/inter-ca_chain.cert.pem \\ -rkey /root/ca/inter-ca/private/ocsp.tjs.lan.key.pem \\ -rsigner /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem \\ -out /root/ca/inter-ca/ocsp-log.txt \\ -nrequest 1 \u0026amp;   ocsp: waiting for OCSP client connections...\r\nOpen a port on the firewall\n1  ufw allow 7888   Query the Responder about a certificate (the Responder\u0026rsquo;s own, or another):\n1 2 3 4  openssl ocsp -CAfile /root/ca/inter-ca/certs/ca-chain.cert.pem \\ -url http://127.0.0.1:7888 -resp_text \\ -issuer /root/ca/inter-ca/certs/inter-ca.cert.pem \\ -cert /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem   […]\rResponse verify OK\r/root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem: good\rThis Update: Aug 22 23:06:21 2021 GMT\r[1]+ Done openssl ocsp -index /root/ca/inter-ca/index.txt -port 7888 -text -CA /root/ca/inter-ca/certs/inter-ca_chain.cert.pem -rkey /root/ca/inter-ca/private/ocsp.tjs.lan.key.pem -rsigner /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem -out /root/ca/inter-ca/ocsp-log.txt -crl_check_all -nrequest 1\r\nExamine the log to check what\u0026rsquo;s happened:\n1  head -30 /root/ca/inter-ca/ocsp-log.txt   OCSP Request Data:\rVersion: 1 (0x0)\rRequestor List:\rCertificate ID:\rHash Algorithm: sha1\rIssuer Name Hash: AE59C598DC56A005EA5239AE471093B7924F5018\rIssuer Key Hash: E37525D774080B23F0AFE4ECD0D452CB5A3A102E\rSerial Number: 1003\rRequest Extensions:\rOCSP Nonce:\r04104CA2F5C63FA8F6A8D89256935DB37177\rOCSP Response Data:\rOCSP Response Status: successful (0x0)\rResponse Type: Basic OCSP Response\rVersion: 1 (0x0)\rResponder Id: C = PT, ST = Lisboa, L = Lisboa, O = Tiago Joao Silva, OU = TJS, CN = ocsp.tjs.lan\rProduced At: Aug 22 23:06:21 2021 GMT\rResponses:\rCertificate ID:\rHash Algorithm: sha1\rIssuer Name Hash: AE59C598DC56A005EA5239AE471093B7924F5018\rIssuer Key Hash: E37525D774080B23F0AFE4ECD0D452CB5A3A102E\rSerial Number: 1003\rCert Status: good\rThis Update: Aug 22 23:06:21 2021 GMT\rResponse Extensions:\rOCSP Nonce:\r04104CA2F5C63FA8F6A8D89256935DB37177\rSignature Algorithm: sha256WithRSAEncryption\r Set the OCSP Responder up as a permanent service If your distribution uses systemd, create a Service Unit (other inits have their own ways)\n1  cat \u0026gt; /etc/systemd/system/ocsp-responder_inter-ca.service   [Unit]\rDescription = OCSP responder using OpenSSL (for CA inter-ca)\rAfter = network.target\r[Service]\rExecStart = /usr/bin/openssl ocsp \\\r-index /root/ca/inter-ca/index.txt \\\r-port 7888 \\\r-rkey /root/ca/inter-ca/private/ocsp.tjs.lan.key.pem \\\r-rsigner /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem \\\r-CA /root/ca/inter-ca/certs/inter-ca_chain.cert.pem \\\r-text -crl_check_all\\\r-out /root/ca/inter-ca/ocsp-log.txt\r[Install]\rWantedBy = multi-user.target\r1  systemctl daemon-reload   Test the service:\n1 2  systemctl start ocsp-responder_inter-ca systemctl status ocsp-responder_inter-ca   ● ocsp-responder_inter-ca.service - OCSP responder using OpenSSL (for CA inter-ca)\rLoaded: loaded (/etc/systemd/system/ocsp-responder_inter-ca.service; disabled; vendor preset: enabled)\rActive: active (running) since Mon 2021-08-23 00:21:27 WEST; 22s ago\r[…]\rAug 23 00:21:27 debian systemd[1]: Started OCSP responder using OpenSSL (for CA inter-ca).\rAug 23 00:21:27 debian openssl[2585]: ocsp: waiting for OCSP client connections...\r Query the service:\n1 2 3 4  openssl ocsp -CAfile /root/ca/inter-ca/certs/ca-chain.cert.pem \\ -url http://127.0.0.1:7888 -resp_text \\ -issuer /root/ca/inter-ca/certs/inter-ca.cert.pem \\ -cert /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem   Confirm that the answer is identical to the previously done test. Then leave the service as permanent:\n1  systemctl enable ocsp-responder_inter-ca   Other CAs If this is not the only IntermediateCA, others could be set up following exactly the same steps, and just changing the listening port (they\u0026rsquo;re free up to 7899/TCP, so 10 more potential ports).\nHowever, it is not recommended to use OpenSSL as an OCSP Responder, because the implementation is barebone.\n","description":"OpenSSL-based PKI: part 2 (IntermediateCA)","id":3,"section":"sec","tags":null,"title":"PKI OpenSSL (pt 2)","uri":"https://tiagojsilva.github.io/en/sec/pki/opensslpki_2/"},{"content":"\r\r\rHow we got here The Centos distribution has always been a strange beast: how could it be that the main exclusively paid Linux distribution (Red Hat Enterprise Linux, or RHEL) had a totally free clone?\nTherefore, and for reasons I will elaborate below, it did not surprise me that the conditions of use for CentOS have changed, although the method, the time and the way everything was communicated will be a case-study on how-not-to-do\u0026hellip;\nI was curious about the two alternatives that immediately presented themselves, Rocky Linux and AlmaLinux, so I decided to test the migration of a CentOS 8 system to both, since everything ended up with the End-Of-Life of CentOS8 on December 2021 instead of 2029 as many people had planned.\nFragmentation? As always in the FOSS world, there is never a single answer to a problem - it\u0026rsquo;s a strength, and a weakness. In this case, I believe both projects have their target audiences, which should allow both them to keep going in strength:\n    RockyLinux AlmaLinux     Territorial Base USA Europe   Target markets High-Performance Computing, hardware ditributed with binary drivers (looking at you, HPE), former users of Scientific Linux cPanel, Web servers    We\u0026rsquo;ll see if both survive in the long term…\nAnother player just sat himself at the table and asked to be dealt in; days after the original publication, SuSE, which already had an RPM-based distribution (SuSE Linux Enterprise, or SLE) and a kernel more-or-less binary compatible with RedHat, announced Liberty Linux, which offers an alternative with business-level support and capable of being managed by the same tools that are used to manage a SUSE-based infrastructure (well, but so could RHEL already\u0026hellip;). According to The Register, it\u0026rsquo;s of note that Liberty Linux\u0026rsquo;s kernel is the same used by SuSE Linux Enterprise (5.3.x), which is much more recent than what\u0026rsquo;s currently on RHEL 8 (4.18) - so Liberty Linux seems to be a proposal to convince certain types of mixed customers to abandon RedHat once and for all if their systems are compatible with SLE.\r The test For this test, I started from a set of VMs that simulate a typical Windows service network (AD-DC, SMB, printing, Group Policies) based on CentOS8 and Samba (compiled from source).\n\r\rThe task consists on doing the sidegrade of this server (TJGGS) to both CentOS 8 alternatives, Rocky Linux and AlmaLinux, and test basic functionality.\nSetting up The computers are in the DASILVAT domain and domain users can log on to computers:\n\r\rLOGONSERVER=\\\\TJGGS\rUSERDNSDOMAIN=DASILVAT.LOCAL\rUSERDOMAIN=DASILVAT\r I logged in to the server, called TJGGS, with PuTTY, from the RSAT client.\nOut of the box, this server is just I left in June 2020, when I finished the assigment for CINEL where I used this set of VMs.\nlogin as: formando\rAuthenticating with public key \"rsa-key-20200615\"\rPassphrase for key \"rsa-key-20200615\":\rLast login: Sat Jun 27 20:31:21 2020 from 10.12.140.99\r[formando@tjggs ~]$ uname -a\rLinux tjggs 4.18.0-147.8.1.el8_1.x86_64 #1 SMP Thu Apr 9 13:49:54 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\r\nThe first thing we have to do is a general update. And since the repositories haven\u0026rsquo;t been updated for more than a year, we\u0026rsquo;d better use --refresh\n1  sudo dnf upgrade -y --refresh   [...]\rTransaction Summary\r====================================================================================================================================\rInstall 22 Packages\rUpgrade 518 Packages\r[...]\r After a restart, we went from Centos 8.1 to 8.4:\n1  uname -a   Linux tjggs 4.18.0-305.19.1.el8_4.x86_64 #1 SMP Wed Sep 15 15:39:39 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\r In the Windows clients there was a warning that credentials needed to be reintroduced; logoff, change of password, and when trying to logon again, I got an error that the computer wasn\u0026rsquo;t registered in the domain.\n\r\rVery well, I logged on to Client with the local Administrator and tried first Remove-Computer -Credential DASILVAT\\Administrator and then Add-Computer; always Access is denied.\nThen I logged in to TJGGS and checked the logs; sure enough, /var/log/messages had an indication that sysvol had the wrong permissions:\nchdir_current_service: vfs_ChDir(/usr/local/samba/var/locks/sysvol) failed: Permission denied. Current token: uid=3000025, gid=3000026, 7 groups: 3000025 3000026 3000035 3000036 3000037 3000006 3000011\r\nDespite the danger, I broke out the grease scrubber:\n1 2  samba-tool ntacl sysvolreset systemctl restart samba-ad-dc   Now systemctl status samba-ad-dc showed the service as active and without errors. So when I tried again to logon to the Client computer, I got in, and the user\u0026rsquo;s GPOs were applied.\nSolving the same issue on RSAT was a tad more involved; first I had to take the computer out of the domain using the GUI (Computer Preferences as local Administrator), and then I was able to open an Admin PowerShell and use the commands:\n1 2  Add-Computer -Credential DASILVAT\\Administrator -Domain DASILVAT Restart-Computer   However, I began to see another problem in samba-ad-dc\u0026rsquo;s log; maybe because I refreshed the sysvol ACLs, now the error comes from the shares' permissions:\nchdir_current_service: vfs_ChDir(/mnt/dumdum/recursos) failed: Permission denied. Current token: uid=3000041, gid=3000026, 7 groups: 3000041 3000026 3000035 3000036 3000037 3000006 3000011\r\nThis token, of course, matches the computer that I just reintroduced into the domain:\n1  wbinfo --sid-to-name $(wbinfo --uid-to-sid 3000041)   DASILVAT\\WIN7-RSAT$ 1\r This was fixed by adding the Domain Computers group to the share\u0026rsquo;s permissions (Read was enough)\nNow that we have the system more or less stabilized, we can test TJGGS' migration from CentOS8 to Rocky Linux and to AlmaLinux\nRocky Linux Rocky\u0026rsquo;s documentation page for the migration process is at https://docs.rockylinux.org/guides/migrate2rocky/, and it\u0026rsquo;s advisable to be logged-on as root.\nTo avoid the curl \u0026lt;url\u0026gt; -o \u0026lt;script\u0026gt;.sh method, which can be insecure if there is a Man-In-The-Middle attack, start by installing git:\n1  dnf install git -y   Last metadata expiration check: 2:05:12 ago on Sun 31 Oct 2021 09:14:58 PM WET.\rPackage git-2.27.0-1.el8.x86_64 is already installed.\rDependencies resolved.\rNothing to do.\rComplete!\r Download the migration scripts from the repo and run the migration script:\n1 2 3  git clone https://github.com/rocky-linux/rocky-tools.git chmod u+x ./rocky-tools/migrate2rocky/migrate2rocky.sh ./rocky-tools/migrate2rocky/migrate2rocky.sh -r   [...]\rDone, please reboot your system.\rA log of this installation can be found at /var/log/migrate2rocky.log\r After restarting, GRUB has an entry for \u0026ldquo;Rocky Linux\u0026rdquo;:\n\r\rhostnamectl\u0026rsquo;s output is:\n\r\rA pre-existing user can still log on to the domain:\n\r\rUsing RSAT, I created a new user with the same characteristics and the same set of GPOs:\n\r\r\r\rThe new user also logged in and the same settings were applied, except for the shared printer which is a very brittle configuration in Samba; however, the correct wallpaper (specified by GPO from a network share) was loaded, so that wasn\u0026rsquo;t affected by any issues with permissions in the domain\u0026rsquo;s shares.\n\r\rAlmaLinux To keep the test even, a second clone of TJGGS was used, still on CentOS but with the Samba issues solved (at least, those I noticed)\nAlmaLinux\u0026rsquo;s migration process isn\u0026rsquo;t as well documented as Rocky\u0026rsquo;s; instead of an explanatory page, the Migrate button at https://almalinux.org links directly to the migration scripton the Github repository, where the documentation of the process left to the README. Not ideal.\nOn the other hand, it\u0026rsquo;s not proposed to locally clone the repository, and the only suggestion is downloading the script with curl. Even less ideal, and plainly insecure.\nSo, let\u0026rsquo;s repeat the safer process, as we did for Rocky.\nOpen a root shell e clone the repo:\n1 2 3  git clone https://github.com/AlmaLinux/almalinux-deploy.git chmod u+x ./almalinux-deploy/almalinux-deploy.sh ./almalinux-deploy/almalinux-deploy.sh   Check root privileges OK\rCheck centos-8.x86_64 is supported OK\rDownload RPM-GPG-KEY-AlmaLinux OK\rImport RPM-GPG-KEY-AlmaLinux to RPM DB OK\rDownload almalinux-release package OK\rVerify almalinux-release package OK\rYour OS is supported OK\rRemove OS specific rpm packages OK\r[...]\rAll Secure Boot related packages which were released by not AlmaLinux are reinstalledOK\rMigration to AlmaLinux is completed\r And restart the TJGGS server\n\r\r\r\r\r\rAgain, I created a new user with RSAT, now on the Active Directory of the AlmaLinux-migrated server.\n\r\rThis new user also logged in to the domain from the client computer, with the GPOs applied correctly (minus the printer):\n\r\rFinal thoughts As promised, both Rocky Linux and AlmaLinux were able to make the sidegrade of a Centos8 server with some services (samba-ad-dc, chrony, mdm RAIDs, SSHd) without major issues.\nThe initial problems with permissions were certainly caused by me during the initial configuration of the server, because I remember that I had problems with the permissions of the sysvol which prevented some GPOs from working properly; basically the problem went on for this long (but no more, hopefully).\nEditorial The Free and Open Source world has always experienced a problem caused by \u0026ldquo;Free as in Freedom\u0026rdquo; and \u0026ldquo;Free as in Beer\u0026rdquo;. And if Being Free has a relative value for a lot of people, Being For Free is a much larger attractive and it can be measured directly, so the FOSS world, at least in its early years, did little to stress that of the two possibilities, Freedom is FOSS\u0026rsquo;s main objective.\nObviously nothing is \u0026ldquo;for free\u0026rdquo; (free lunches and all that), everything has a cost and if we aren\u0026rsquo;t paying, someone else is paying for us, whether in human effort, CPU cycles, storage, connectivity, energy, hardware… So when FOSS projects reach some maturity and market position, they try to entice users to contribute something (anything!) that benefits the project directly, more than mere disclosure and promotion.\nIn this way, the companies behind many FOSS projects sell services and support, but are also closing certain conveniences behind these contracts, to instill users to pay money for the FOSS product. These extra conveniences (beyond simple support) usually are:\n Limited functionality: certain functions which add value in an enterprise setting are developed on a non-FOSS model and are only unlocked against payment of a license or purchase of packaged hardware  OPNsense, among others; notably, almost all providers of ZFS-based storage appliances (like TrueNAS) lock clustering and High-Availability behind the purchase of hardware bundled with the FOSS software.   Access to updates: only the binaries of version x.0.0 are publicly available, and any updates in the form of pre-compiled binaries are only available for users with a Support Agreement; however, usually the FOSS license used mandates acess to all source code, which allows anyone that is up to it to try to compile the update.  Bareos, OPNsense work like this   Access to stable versions: as a complete reversal of the previous option, only the nightly build of the actual state of the development process is made publicly available, without any type of functionality tests (except the assurance that the build didn\u0026rsquo;t break); in this case, to get a stable(r) version it\u0026rsquo;s safer to get the source for the nightly of the previous major version, which will be better tested and whose updates should be just bug fixes - but even then, without any testing for regressions.  VyOS    RedHat decided to use a variant of this last option: instead of only making the CentOS nightlies available, which they knew was too much (and they already had Fedora Rawhide for that), they decided that CentOS would be accessible only as the development branch of the next minor version of RHEL\n Instead of CentOS version 8.4 being released after RHEL 8.4, while RHEL is at 8.4 CentOS Stream will be testing the next version 8.5; and only when CentOS Stream 8.5 is found to be stable it will be converted into RHEL 8.5, while CentOS Stream proceeds with testing the corrections slated for 8.6. Even better, whoever wants to test the features of RHEL 9, can already try to install CentOS Stream 9\u0026hellip; In this way, users of CentOS will be contributing with testing (and hopefully bug reports), therefore paying something for their use of code developed and packaged by RedHat.  ","description":"Out of the frying pan and into the fire","id":4,"section":"unixlike","tags":null,"title":"Escape From CentOS","uri":"https://tiagojsilva.github.io/en/unixlike/rpm/redhat/rocky_almalinux/2022-01-10_escape-from-centos/"},{"content":"BIND9 Installation The system where this BIND9 service was installed is the same described in the article TinyCoreLinux Installation.\nThere is a BIND9 package for TinyCore, but jusk like almost everything else, the installation is very do-it-yourself1. We\u0026rsquo;re not provided with a firelighter, and not even matches; we really have to scratch a couple of sticks next to some kindling to get some fire.\nThe BIND9 extension can be installed from the browser tce-ab or directly by the installer tce-load\n1  tce-load -wi bind   bind.tcz.dep OK\rlibcap.tcz.dep OK\rDownloading: gcc_libs.tcz\rConnecting to repo.tinycorelinux.net (89.22.99.37:80)\rsaving to 'gcc_libs.tcz'\rgcc_libs.tcz 100% |************************************************************************************| 1020k 0:00:00 ETA\r'gcc_libs.tcz' saved\rgcc_libs.tcz: OK\rDownloading: attr.tcz\rConnecting to repo.tinycorelinux.net (89.22.99.37:80)\rsaving to 'attr.tcz'\rattr.tcz 100% |************************************************************************************| 24576 0:00:00 ETA\r'attr.tcz' saved\rattr.tcz: OK\rDownloading: libcap.tcz\rConnecting to repo.tinycorelinux.net (89.22.99.37:80)\rsaving to 'libcap.tcz'\rlibcap.tcz 100% |************************************************************************************| 24576 0:00:00 ETA\r'libcap.tcz' saved\rlibcap.tcz: OK\rDownloading: bind.tcz\rConnecting to repo.tinycorelinux.net (89.22.99.37:80)\rsaving to 'bind.tcz'\rbind.tcz 100% |************************************************************************************| 1864k 0:00:00 ETA\r'bind.tcz' saved\rbind.tcz: OK\r\nWe then have to manually install some dependencies that for some reason aren\u0026rsquo;t automatically installed:\n1  tce-load -wi libuv.tcz   Downloading: libuv.tcz\rConnecting to repo.tinycorelinux.net (89.22.99.37:80)\rsaving to 'libuv.tcz'\rlibuv.tcz 100% |************************************************************************************| 65536 0:00:00 ETA\r'libuv.tcz' saved\rlibuv.tcz: OK\r Initial Setup We\u0026rsquo;ll take advantage of the automatic backup (persistence) we\u0026rsquo;ve set up for /opt/, by placing BIND\u0026rsquo;s config files on /opt/local/etc/bind instead of the usual /usr/local/etc/bind\n1 2 3  mkdir /opt/local/ mkdir /opt/local/etc/ mkdir /opt/local/etc/bind   We have to download two important pieces of information: the root zone and the bind keys\n1 2  wget -O /opt/local/etc/bind/root.zone \\  http://www.internic.net/domain/root.zone   Connecting to www.internic.net (192.0.32.9:80)\rsaving to '/opt/local/etc/bind/root.zone'\rroot.zone 100% |************************************************************************************| 2113k 0:00:00 ETA\r'/opt/local/etc/bind/root.zone' saved\r 1 2  wget -O /opt/local/etc/bind/bind.keys \\  https://downloads.isc.org/isc/bind9/keys/9.11/bind.keys.v9_11   Connecting to downloads.isc.org (151.101.2.217:443)\rsaving to '/opt/local/etc/bind/bind.keys'\rbind.keys 100% |************************************************************************************| 3923 0:00:00 ETA\r'/opt/local/etc/bind/bind.keys' saved\r BIND9\u0026rsquo;s main configuration file is named.conf\nPut the following in /opt/local/etc/bind/named.conf:\nacl tjs {\rlocalnets; #zona dnstesteswan\rlocalhost;\r172.24.130.0/23; #zona windows\r10.48.130.0/24; #zona linux\r};\roptions {\rdirectory \u0026quot;/opt/local/etc/bind\u0026quot;;\rforwarders { 1.1.1.1; 8.8.8.8; };\rallow-query { tjs; };\rdnssec-validation auto;\rbindkeys-file \u0026quot;/opt/local/etc/bind/bind.keys\u0026quot;;\rauth-nxdomain no;\rlisten-on-v6 { none; };\r};\r directory: location for config files forwarders: what BIND doesn\u0026rsquo;t know about, ask it to these allow-query: networks that are allowed to make name resolution requests (an ACL was defined to hold them all)  In this file the zones are also declared. First, the root zone:\nzone \u0026quot;.\u0026quot; in {\rtype hint;\rfile \u0026quot;root.zone\u0026quot;;\r};\rThere are two configurations for each zone: the forward zone, which converts names to IP addresses, and the reverse zone, which converts IP addresses to names)\nOne direct zone for localhost2:\nzone \u0026quot;localhost\u0026quot; in {\rtype master;\rfile \u0026quot;localhost.zone\u0026quot;;\r};\rOne reverse zone for localhost:\nzone \u0026quot;localhost\u0026quot; in {\rtype master;\rfile \u0026quot;localhost.zone\u0026quot;;\r};\rAnd for security reasons, specified on RFC1912, two other zones must be present:\nzone \u0026quot;0.in-addr.arpa\u0026quot; in {\rtype master;\rfile \u0026quot;0.in-addr.arpa.zone\u0026quot;;\r};\rzone \u0026quot;255.in-addr.arpa\u0026quot; in {\rtype master;\rfile \u0026quot;255.in-addr.arpa.zone\u0026quot;;\r};\rEach zone declared on named.conf needs a zone file.\nThe forward zone file for localhost is /opt/local/etc/bind/localhost.zone:\n; BIND data for LOCALHOST zone FWD\r;\r$ORIGIN localhost.\r$TTL 3D\r@ IN SOA @ root (\r2020090600 ; serial\r8H ; refresh\r2H ; retry\r7D ; expiry\r1D ; minimum\r)\r@ IN NS @\rIN A 127.0.0.1\rThe reverse zone for localhost is /opt/local/etc/bind/127.in-addr.arpa.zone:\n; BIND data for LOCALHOST zone REV\r;\r$ORIGIN 127.in-addr.arpa.\r$TTL 3D\r@ IN SOA localhost. admin.localhost. (\r2020090600 ; serial\r8H ; refresh\r2H ; retry\r7D ; expire\r1D ; negative caching TTL\r)\r;NS\r@ IN NS localhost.\r;localhost\r1 IN PTR localhost.\rOn the Serial field I decided3 to use the date that the zone was changed, followed by two digits indicating if there were more than one revision on the same day. If the Serial of an altered zone file isn\u0026rsquo;t a bigger number than the Serial of the previously-loaded version, the new zone file won\u0026rsquo;t be loaded by the service.\nThe SOA times are close to the 24h, 2h, 30d, 4d recommended for external DNS servers, while 8h, 2h, 7d, 1d are recommended for internal DNS servers inside a LAN (source: RFC1912).\nThe zones demanded by RFC1912 only carry the SOA and NS blocks:\n/opt/local/etc/bind/0.in-addr.arpa.zone\n; BIND RFC1912 data\r;\r$ORIGIN 0.in-addr.arpa.\r$TTL 3D\r@ IN SOA localhost. admin.localhost. (\r2020090600 ; serial\r8H ; refresh\r2H ; retry\r7D ; expire\r1D ; negative caching TTL\r)\r;NS\r@ IN NS localhost.\rThe 255.in-addr.arpa zone is identical, so we just copy it:\n1  sudo cp -a /opt/local/etc/bind/0.in-addr.arpa.zone /opt/local/etc/bind/255.in-addr.arpa.zone   And all we need to change in the new file is $ORIGIN to 255.in-addr.arpa\nTest if bind is operational with the command:4\n1  sudo /usr/local/sbin/named -4g -c /opt/local/etc/bind/named.conf   05-Sep-2020 19:47:25.186 starting BIND 9.16.3 (Stable Release) \r05-Sep-2020 19:47:25.186 running on Linux i686 5.4.3-tinycore #2020 SMP Tue Dec 17 17:00:50 UTC 2019\r05-Sep-2020 19:47:25.186 built with '--prefix=/usr/local' '--sysconfdir=/usr/local/etc' '--libdir=/usr/local/lib' '--localstatedir=/var' '--enable-shared' '--disable-static' '--with-libtool' '--with-openssl=/usr/local' '--with-readline=-lreadline -lncursesw' '--enable-full-report' '--enable-linux-caps' 'CC=gcc -flto -fuse-linker-plugin -march=i486 -mtune=i686 -Os -pipe'\r05-Sep-2020 19:47:25.186 running as: named -4g -c /opt/local/etc/bind/named.conf\r05-Sep-2020 19:47:25.186 compiled by GCC 9.2.0\r05-Sep-2020 19:47:25.186 compiled with OpenSSL version: OpenSSL 1.1.1f 31 Mar 2020\r05-Sep-2020 19:47:25.186 linked to OpenSSL version: OpenSSL 1.1.1f 31 Mar 2020\r05-Sep-2020 19:47:25.186 compiled with zlib version: 1.2.11\r05-Sep-2020 19:47:25.186 linked to zlib version: 1.2.11\r05-Sep-2020 19:47:25.186 ----------------------------------------------------\r05-Sep-2020 19:47:25.186 BIND 9 is maintained by Internet Systems Consortium,\r05-Sep-2020 19:47:25.186 Inc. (ISC), a non-profit 501(c)(3) public-benefit\r05-Sep-2020 19:47:25.186 corporation. Support and training for BIND 9 are\r05-Sep-2020 19:47:25.186 available at https://www.isc.org/support\r05-Sep-2020 19:47:25.186 ----------------------------------------------------\r05-Sep-2020 19:47:25.186 adjusted limit on open files from 4096 to 1048576\r05-Sep-2020 19:47:25.186 found 1 CPU, using 1 worker thread\r05-Sep-2020 19:47:25.186 using 1 UDP listener per interface\r05-Sep-2020 19:47:25.186 using up to 21000 sockets\r05-Sep-2020 19:47:25.206 loading configuration from '/opt/local/etc/bind/named.conf'\r05-Sep-2020 19:47:25.209 reading built-in trust anchors from file '/opt/local/etc/bind/bind.keys'\r05-Sep-2020 19:47:25.209 /opt/local/etc/bind/bind.keys:22: option 'managed-keys' is deprecated\r05-Sep-2020 19:47:25.209 using default UDP/IPv4 port range: [32768, 60999]\r05-Sep-2020 19:47:25.216 listening on IPv4 interface lo, 127.0.0.1#53\r05-Sep-2020 19:47:25.219 listening on IPv4 interface eth0, 10.123.130.6#53\r05-Sep-2020 19:47:25.219 generating session key for dynamic DNS\r05-Sep-2020 19:47:25.219 sizing zone task pool based on 5 zones\r05-Sep-2020 19:47:26.176 extra data in root hints 'root.zone'\r05-Sep-2020 19:47:26.176 none:98: 'max-cache-size 90%' - setting to 162MB (out of 180MB)\r05-Sep-2020 19:47:26.183 obtaining root key for view _default from '/opt/local/etc/bind/bind.keys'\r05-Sep-2020 19:47:26.183 dnssec-validation auto: WARNING: root zone key not found\r05-Sep-2020 19:47:26.183 using built-in root key for view _default\r05-Sep-2020 19:47:26.183 set up managed keys zone for view _default, file 'managed-keys.bind'\r[...]\r05-Sep-2020 19:47:26.236 configuring command channel from '/usr/local/etc/rndc.key'\r05-Sep-2020 19:47:26.236 couldn't add command channel 127.0.0.1#953: file not found\r05-Sep-2020 19:47:26.239 not using config file logging statement for logging due to -g option\r05-Sep-2020 19:47:26.239 managed-keys-zone: loaded serial 3\r05-Sep-2020 19:47:26.243 zone 0.in-addr.arpa/IN: loaded serial 2020090600\r05-Sep-2020 19:47:26.269 zone 127.in-addr.arpa/IN: loaded serial 2020090600\r05-Sep-2020 19:47:26.273 zone 255.in-addr.arpa/IN: loaded serial 2020090600\r05-Sep-2020 19:47:26.279 zone localhost/IN: loaded serial 2020090600\r05-Sep-2020 19:47:26.279 all zones loaded\r05-Sep-2020 19:47:26.283 running\r Make the service start with the system:\n1 2  echo \u0026#34;/usr/local/sbin/named -4 -c /opt/local/etc/bind/named.conf \u0026amp;\u0026#34; \u0026gt;\u0026gt; \\  /opt/bootlocal.sh \u0026amp;\u0026amp; filetool.sh -b   And we must change the network configuration to use the service that was installed as the system DNS resolver. The change can be made immediately without needing to restart:\n1  sudo echo \u0026#34;nameserver 127.0.0.1\u0026#34; \u0026gt; /etc/resolv.conf   But since we want to keep this setting after a restart, there\u0026rsquo;s another thing still to do: edit the /opt/eth0.sh file, comment the existing echo lines, and add the following:\necho \u0026quot;nameserver 127.0.0.1\u0026quot; \u0026gt; /etc/resolv.conf\rSince the file is write-protected, the change needs to be forced with the vim command :w!. Finally, of course,\n1  filetool.sh -b   Service Management TinyCore has no pre-defined or configured service management process, it\u0026rsquo;s all by hand. If anything, BIND could be stopped with sudo killall named and turned on again with the command we\u0026rsquo;ve been using up to now.\nBut why sleep on the floor when we can get a mattress? BIND, just like the OpenSSH we installed in the article about the initial installation of TinyCoreLinux (link at the top of this article), has a management script (in this case, bind) which the extension installs automatically in /usr/local/etc/init.d/\n1  /usr/local/etc/init.d/bind   usage /usr/local/etc/init.d/bind start|stop|reload|restart|status\r This way, we don\u0026rsquo;t need to write our own script5 nor try to adapt the OpenSSH script.\nThis script, due to the way the extensions are mounted on the system, can not be changed; to make the necessary changes, we need, first of all, to copy it to a permanent location where we have write permissions.\nThe original placement of the script is /usr/local/etc/init.d/, so a logical place would be /opt/local/etc/init.d/\n1  mkdir /opt/local/etc/init.d   And we must copy while breaking the symlink that points to the real location where TinyCore has mounted the extension, cto make sure we copy the real file and not the symlink:\n1  sudo cp -aL /usr/local/etc/init.d/bind /opt/local/etc/init.d/   Add the new script location to PATH, so we don\u0026rsquo;t have to write the full path when we want to run one of these scripts:\n1 2 3  echo \u0026#39;export PATH=\u0026#34;$PATH:/opt/local/etc/init.d/\u0026#34; \u0026gt;\u0026gt; ~/.ashrc sudo echo \u0026#39;export PATH=\u0026#34;$PATH:/opt/local/etc/init.d/\u0026#34; \u0026gt;\u0026gt; /root/.ashrc filetool.sh -b   Now we can make changes to the script, namely the variable NAMED_OPTIONS. But first of all, we need to create, by hand, the user and group that will administer BIND (named), because a TCZ extension is just a set of files and won\u0026rsquo;t touch system files.\nUser and group for the service The script expects a specific user, named, that is used specifically to run the service. To make it6:\n1 2  sudo addgroup named -g 2000 sudo adduser named -u 2000 -G named -DH -s /bin/false   Set /etc/passwd and /etc/group as persistent:\n1 2  echo \u0026#34;etc/passwd\u0026#34; \u0026gt;\u0026gt; /opt/.filetool.lst echo \u0026#34;etc/group\u0026#34; \u0026gt;\u0026gt; /opt/.filetool.lst \u0026amp;\u0026amp; filetool.sh -b   Change the permissions:\n1 2  sudo chown -R named:named /opt/local/etc/bind sudo chmod -R 660 /opt/local/etc/bind   When using the named user, BIND will try to use the folder /var/run/named, which doesn\u0026rsquo;t exist. We must make that folder and make it persistent:\n1 2 3  mkdir /var/run/named sudo chown named:named /var/run/named echo \u0026#34;var/run/named\u0026#34; \u0026gt;\u0026gt; /opt/.filetool.lst \u0026amp;\u0026amp; filetool.sh -b   On our current command that starts the service, our options were -4 (IPv4 only) and -c /opt/local/etc/bin/named.conf (path to the configuration file); those are the arguments that we must add to NAMED_OPTIONS on the /opt/local/etc/init.d/bind script (along with the nameduser):\nNAMED_OPTIONS=\u0026quot;-u named -4 -c /opt/local/etc/bind/named.conf\u0026quot;\rSave and exit.\nSetup BIND management with RNDC However, the service startup script also depends on the control utility rndc7, which doesn\u0026rsquo;t come assembled and ready to run, because This\u0026hellip; Is\u0026hellip; CoreLinux\u0026hellip;\nGenerate the key that authorizes rndc to give commands to bind and make it persistent\n1 2 3 4  sudo rndc-confgen -a sudo chown root:staff /usr/local/etc/rndc.key sudo chmod 640 /usr/local/etc/rndc.key echo \u0026#34;usr/local/etc/rndc.key\u0026#34; \u0026gt;\u0026gt; /opt/.filetool.lst \u0026amp;\u0026amp; filetool.sh -b   Use this command to generate a template configuration:\n1 2  sudo rndc-confgen \u0026gt; /opt/local/etc/bind/rndc.out sudo cat /opt/local/etc/bind/rndc.out   # Start of rndc.conf\rkey \"rndc-key\" {\ralgorithm hmac-sha256;\rsecret \"qXe5NgimFUmfztOZXJG4XXjkZJX0AdUEcTgci3+m38s=\";\r};\roptions {\rdefault-key \"rndc-key\";\rdefault-server 127.0.0.1;\rdefault-port 953;\r};\r# End of rndc.conf\r# Use with the following in named.conf, adjusting the allow list as needed:\r# key \"rndc-key\" {\r# algorithm hmac-sha256;\r# secret \"qXe5NgimFUmfztOZXJG4XXjkZJX0AdUEcTgci3+m38s=\";\r# };\r#\r# controls {\r# inet 127.0.0.1 port 953\r# allow { 127.0.0.1; } keys { \"rndc-key\"; };\r# };\r# End of named.conf\r On /opt/local/etc/bind/named.conf, add the instructions required to use rndc, following the example of the comment block above.\nFirst, add the contents of rndc.key\n1  sudo cat /usr/local/etc/rndc.key \u0026gt;\u0026gt; /opt/local/etc/bind/named.conf   Then add the following to /opt/local/etc/bind/named.conf\ncontrols {\rinet 127.0.0.1 port 953\rallow { 127.0.0.1; } keys { \u0026quot;rndc-key\u0026quot;; };\r};\rTo test,\n1 2 3  sudo killall named /usr/local/sbin/named -u named -4 -c /opt/local/etc/bind/named.conf \u0026amp; rndc status   version: BIND 9.16.3 (Stable Release) \rrunning on verynice: Linux i686 5.4.3-tinycore #2020 SMP Tue Dec 17 17:00:50 UTC 2019\rboot time: Sun, 06 Sep 2020 00:54:14 GMT\rlast configured: Sun, 06 Sep 2020 00:54:16 GMT\rconfiguration file: /opt/local/etc/bind/named.conf\rCPUs found: 1\rworker threads: 1\rUDP listeners per interface: 1\rnumber of zones: 106 (97 automatic)\rdebug level: 0\rxfers running: 0\rxfers deferred: 0\rsoa queries in progress: 0\rquery logging is OFF\rrecursive clients: 0/900/1000\rtcp clients: 0/150\rTCP high-water: 0\rserver is up and running\r Now we can go to /opt/bootlocal.sh and change the service activation line from the raw command to the init script. Comment the previous startup line (/usr/local/sbin/named -4 -c /opt/local/etc/bind/named.conf \u0026amp;) and add:\n/opt/local/etc/init.d/bind start\rSave and exit.\nsudo reboot, to confirm that our settings survive a system restart.\nAfter booting back, test the service:\n1  rndc status   [...]\rserver is up and running\r 1  nslookup www.google.com   Server: 127.0.0.1\rAddress: 127.0.0.1#53\rNon-authoritative answer:\rName: www.google.com\rAddress: 216.58.211.228\rName: www.google.com\rAddress: 2a00:1450:4003:805::2004\r\n\r\rIn a client that belongs to one of the networks authorized to ask for name resolution, change the DNS configuration to point to the IP of thi sserver (I\u0026rsquo;ve been using 10.123.130.6), check if DNS resolution is successful:\n\r\rCreating DNS zones Zones are configured in named.conf and the contents of each zone resides in zone files.\nI think it\u0026rsquo;s good policy to separate zones by category under BIND\u0026rsquo;s config folder (/opt/local/etc/bind/), meaning that zone files should be placed in:\n/opt/local/etc/bind/forward\r/opt/local/etc/bind/reverse\r/opt/local/etc/bind/slave\r/opt/local/etc/bind/stub\rIn this case I won\u0026rsquo;t do this because we have very few zones, but even then making a folder for the zone files won\u0026rsquo;t let them get mixed with the BIND settings themselves:\n1  sudo mkdir /opt/local/etc/bind/zones   The filename of a zone file is completely arbitrary, but some conventions are used; sometimes, the name declared on named.conf is used, adding a .zone extension; on Debian, zone file names are usually db.\u0026lt;zonename\u0026gt;.\nDeclaring zones on named.conf Edit /opt/local/etc/bind/named.conf and add the following:\nForward zone of the DNS server:\nzone \u0026quot;dnstests.wan\u0026quot; in {\rtype master;\rfile \u0026quot;zones/dnstests.wan.zone\u0026quot;;\r# allow-update { };\r# allow-transfer { };\r# notify yes;\r};\rAnd its reverse zone:\nzone \u0026quot;130.123.10.in-addr.arpa\u0026quot; in {\rtype master;\rfile \u0026quot;zones/130.123.10.in-addr.arpa.zone\u0026quot;;\r# allow-update { };\r# allow-transfer { };\r# notify yes;\r};\rallow-update, allow transfer and notify are used when there are DNS servers that are only followers for this zone and should be updated by Zone Transfer when there are changes in the zone.\r A regular forward zone is declared on /opt/local/etc/bind/named.conf like this:\nzone \u0026quot;tjs.lan\u0026quot; in {\rtype master;\rfile \u0026quot;zones/tjs.lan.zone\u0026quot;;\r# allow-update { };\r# allow-transfer { };\r# notify yes;\r};\rThis network is a /23 and needs two reverse zones to be covered (AFAICT, reverse DNS zones are classful , that is, they can only be /8, /16, or /24), so I\u0026rsquo;ll declare these two zones:\nzone \u0026quot;130.24.172.in-addr.arpa\u0026quot; in {\rtype master;\rfile \u0026quot;zones/130.24.172.in-addr.arpa.zone\u0026quot;;\r# allow-update { };\r# allow-transfer { };\r# notify yes;\r};\rzone \u0026quot;131.24.172.in-addr.arpa\u0026quot; in {\rtype master;\rfile \u0026quot;zones/131.24.172.in-addr.arpa.zone\u0026quot;;\r# allow-update { };\r# allow-transfer { };\r# notify yes;\r};\rRestart the service and check its status:\n1  /opt/local/etc/init.d/bind restart   Stopping BIND: /usr/local/sbin/rndc stop\rUsing killall named on additional BIND processes...\rStarting BIND: /usr/local/sbin/named -u named -4 -c /opt/local/etc/bind/named.conf\r 1  rndc status   version: BIND 9.16.3 (Stable Release) \rrunning on verynice: Linux i686 5.4.3-tinycore #2020 SMP Tue Dec 17 17:00:50 UTC 2019\rboot time: Sat, 19 Sep 2020 11:12:11 GMT\rlast configured: Sat, 19 Sep 2020 11:12:12 GMT\rconfiguration file: /opt/local/etc/bind/named.conf\rCPUs found: 1\rworker threads: 1\rUDP listeners per interface: 1\rnumber of zones: 111 (97 automatic)\rdebug level: 0\rxfers running: 0\rxfers deferred: 0\rsoa queries in progress: 0\rquery logging is OFF\rrecursive clients: 0/900/1000\rtcp clients: 0/150\rTCP high-water: 0\rserver is up and running\r 1  tail -20 /var/log/messages | grep \u0026#34;named\u0026#34; | cut -d\u0026#34; \u0026#34; -f4-   verynice daemon.info named[1612]: none:98: 'max-cache-size 90%' - setting to 162MB (out of 180MB)\rverynice daemon.notice named[1612]: command channel listening on 127.0.0.1#953\rverynice daemon.info named[1612]: managed-keys-zone: loaded serial 58\rverynice daemon.info named[1612]: zone 130.48.10.in-addr.arpa/IN: loaded serial 2020091600\rverynice daemon.info named[1612]: zone 0.in-addr.arpa/IN: loaded serial 2020090600\rverynice daemon.info named[1612]: zone 130.24.172.in-addr.arpa/IN: loaded serial 2020091710\rverynice daemon.info named[1612]: zone dnstestes.wan/IN: loaded serial 2020091600\rverynice daemon.info named[1612]: zone 127.in-addr.arpa/IN: loaded serial 2020090600\rverynice daemon.info named[1612]: zone 131.24.172.in-addr.arpa/IN: loaded serial 2020091710\rverynice daemon.info named[1612]: zone 255.in-addr.arpa/IN: loaded serial 2020090600\rverynice daemon.info named[1612]: zone tjs.lan/IN: loaded serial 2020091710\rverynice daemon.info named[1612]: zone localhost/IN: loaded serial 2020090600\rverynice daemon.notice named[1612]: all zones loaded\rverynice daemon.notice named[1612]: running\rverynice daemon.info named[1612]: managed-keys-zone: Key 20326 for zone . is now trusted (acceptance timer complete)\rverynice daemon.info named[1612]: resolver priming query complete\r For testing, use the nslookup that\u0026rsquo;s already there or install dig. Nslookup still needs a dependence that wasn\u0026rsquo;t installed, though:\n1  tce-load -wi readline.tcz   readline.tcz.dep OK\rDownloading: readline.tcz\rConnecting to repo.tinycorelinux.net (89.22.99.37:80)\rsaving to 'readline.tcz'\rreadline.tcz 100% |************************************************************************************| 128k 0:00:00 ETA\r'readline.tcz' saved\rreadline.tcz: OK\r The following resolutions were used for testing, based on zone files whose contents I leave for you to write based on the results on the screenshot (one zone file for each zone declared on /opt/local/etc/bind/named.conf), to be placed in /opt/local/etc/bind/zones according to the template shown in the zones requested by the RFC1912 (above):\n1 2 3 4  nslookup dasilvat.tjs.lan nslookup tjspc.tjs.lan nslookup gateway.dnstestes.wan nslookup verynice.dnstestes.wan   \r\r\rSince we left an MX record definition on the tjs.lan zone, its resolution was also tested (change the zone file according to the result on the screenshot below):\n1  nslookup -type=MX tjs.lan   \r\r\rFinal thoughts Back when, I picked TinyCore Linux to implement this service because my host system had very little RAM to also implement the rest of the topology that I was going to use; however, TinyCore Linux needs RAM to load the system image and for applications, so the smallest working RAM size I was able to get away with was 256MB, because with just 128MB BIND9 didn\u0026rsquo;t have enough RAM to start.\nHowever however, a Debian 10 system (Minimal Install), which runs the system from the mass storage and also has a pagefile, can run an SSH server, an NTP server (this TinyCore Linux only had a client) and BIND9 with the same 256MB so, unless running from RAM and being stateless is of paramount importance, my advice is to use Debian or another more mainstream Linux distro.\n (https://mivilisnet.wordpress.com/2019/06/11/microcore-linux-and-the-bind-server/#more-2666\u0026gt;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n (https://wiki.samba.org/index.php/Setting_up_a_BIND_DNS_Server)\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Just one the possible methods; there are others.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n -4 = IPv4 only; -g = log to STDOUT instead of STDERR ; -c \u0026lt;configuration_file_path\u0026gt;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n (https://mivilisnet.wordpress.com/2020/05/05/how-i-wrote-my-shell-script-to-control-the-bind-daemon/)\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n -D don\u0026rsquo;t set a password; -H don\u0026rsquo;t make a home folder; -s shell (fake shell to block user login)\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n https://www.ibm.com/support/pages/how-setup-rndc-bind-9\nhttps://tecadmin.net/configure-rndc-for-bind9\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","description":"Trying to set up BIND9 on TinyCoreLinux means doing everything by myself","id":5,"section":"networking","tags":null,"title":"BIND9: from the start","uri":"https://tiagojsilva.github.io/en/networking/protocols/2021-10-30_dns-bind9-tinycorelinux/"},{"content":"\r\r\rI was just trying to downlood the ESXi evaluation\u0026hellip;\nUnless this goes away tomorrow, it looks like my Type1 hypervisor journey will start with XCP-ng\u0026hellip;\nYou only get one chance to make a good impression.\n","description":"Falling on the first hurdle","id":6,"section":"blog","tags":null,"title":"Computer Says No","uri":"https://tiagojsilva.github.io/en/blog/2021-11-17_computersaysno/"},{"content":"I dun it!\nThe button to copy the contents of the code boxes now appears both in those that have syntax (highlight, chroma) as in those that don\u0026rsquo;t have:\n1  cowsay \u0026#34;monkeys, I tell you!\u0026#34;   # output\r______________________\r\u0026lt; monkeys, I tell you! \u0026gt;\r----------------------\r\\ ^__^\r\\ (oo)\\_______\r(__)\\ )\\/\\\r||----w |\r|| ||\rHow have I dun it? Dunno\u0026hellip;\nHence the title: one thousand monkeys banging on one thousand typewriters could write \u0026ldquo;The C Programming Language\u0026rdquo; if they had until the heat death of the Universe to do it.\nI am partly kidding; but that\u0026rsquo;s how it felt.\nThe reasoning Eventually I cottoned on that in Zdoc codeblocks can have two different structures, depending on if syntax highlighting has been activated; one big difference in that case is the insertion of a column with the line number or the prompt prior to the text itself; or rather, I had noticed it already, but eventually I surrendered to the evidence that I would have to create two different selectors, which could separate one case from the other so I could handle them differently.\nBut for a long time I could only select the codes with highlight, or when I could place buttons on the two types of blocks, the highlight blocks ended up with two buttons, one of them inoperative (because of the two column structure, I imagine).\nThe highlight codeblock is structured like this:\n1 2 3 4 5 6 7 8 9 10 11 12 13  \u0026lt;div class=\u0026#34;highlight\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;chroma\u0026#34;\u0026gt; \u0026lt;table class=\u0026#34;lntable\u0026#34;\u0026gt;\u0026lt;tr\u0026gt;\u0026lt;td class=\u0026#34;lntd\u0026#34;\u0026gt; \u0026lt;pre class=\u0026#34;chroma\u0026#34;\u0026gt;\u0026lt;code\u0026gt;\u0026lt;span class=\u0026#34;lnt\u0026#34;\u0026gt; 1 \u0026lt;/span\u0026gt;\u0026lt;span class=\u0026#34;lnt\u0026#34;\u0026gt; 2 \u0026lt;/span\u0026gt;\u0026lt;span class=\u0026#34;lnt\u0026#34;\u0026gt; 3 \u0026lt;!-- line numbers --\u0026gt; \u0026lt;/span\u0026gt;\u0026lt;span class=\u0026#34;lnt\u0026#34;\u0026gt;36 \u0026lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td class=\u0026#34;lntd\u0026#34;\u0026gt; \u0026lt;pre class=\u0026#34;chroma\u0026#34;\u0026gt;\u0026lt;code class=\u0026#34;language-assets/sass/pages/_single.scss\u0026#34; data-lang=\u0026#34;assets/sass/pages/_single.scss\u0026#34;\u0026gt; \u0026lt;!-- code --\u0026gt; \u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt;\u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt;   While the syntax-less code block is much simpler:\n1 2 3  \u0026lt;pre\u0026gt;\u0026lt;code\u0026gt; \u0026lt;!-- code --\u0026gt; \u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;   The selector Eventually I tried this method, and it worked:\n Grab everything under \u0026lt;pre\u0026gt;\u0026lt;code\u0026gt; Does it have more sections inside?  Y: button with syntax N: button without syntax    As it happens, Zdoc has some code for Mermaid diagrams, but then you look into it and it\u0026rsquo;s not active.\nNot very useful\u0026hellip;\r In code, it came up like this:\n1 2 3 4 5 6 7 8 9 10  var codeBlocks = document.querySelectorAll(\u0026#39;pre \u0026gt; code\u0026#39;); for (var i = 0; i \u0026lt; codeBlocks.length; i++) { var highlightBlocks = codeBlocks[i].firstElementChild; if (highlightBlocks != null) { i++; addCopyButton(codeBlocks[i].parentNode.parentNode); } else { addCopyCodeButton(codeBlocks[i].parentNode.parentNode); } }   After I became able to select the two blocks in two differently coded branches, I treated them differently in the most heavy-handed way possible, which was to duplicate the function and make adjustments in each of the copies.\nThen I had a devil of a time to avoid getting duplicated buttons, and everything I achieved was through painstaking trial-and-error with all combinations of .firstElementChild e .parentNode.\nAnd I find myself in a place I don\u0026rsquo;t appreciate at all, \u0026ldquo;it works and I don\u0026rsquo;t know how\u0026rdquo;\u0026quot;; and since I don\u0026rsquo;t kow how it works, I can\u0026rsquo;t help but notice that the buttons are in different places and misaligned, but I can\u0026rsquo;t solve it\u0026hellip;\nResult 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80  // ================================================================= // insert just before the \\\u0026lt;\\/script\\\u0026gt; tag // tomspencer, https://www.tomspencer.dev/blog/2018/09/14/adding-click-to-copy-buttons-to-a-hugo-powered-blog/ (function() { \u0026#39;use strict\u0026#39;; if(!document.queryCommandSupported(\u0026#39;copy\u0026#39;)) { return; } function flashCopyMessage(el, msg) { el.textContent = msg; setTimeout(function() { el.textContent = \u0026#34;COPY\u0026#34;; }, 1000); } function selectText(node) { var selection = window.getSelection(); var range = document.createRange(); range.selectNodeContents(node); selection.removeAllRanges(); selection.addRange(range); return selection; } function addCopyButton(containerEl) { var copyBtn = document.createElement(\u0026#34;button\u0026#34;); copyBtn.className = \u0026#34;highlight-copy-btn\u0026#34;; copyBtn.textContent = \u0026#34;COPY\u0026#34;; var codeEl = containerEl.firstElementChild; copyBtn.addEventListener(\u0026#39;click\u0026#39;, function() { try { var selection = selectText(codeEl); document.execCommand(\u0026#39;copy\u0026#39;); selection.removeAllRanges(); flashCopyMessage(copyBtn, \u0026#39;Copied!\u0026#39;) } catch(e) { console \u0026amp;\u0026amp; console.log(e); flashCopyMessage(copyBtn, \u0026#39;Failed :\\\u0026#39;(\u0026#39;) } }); containerEl.appendChild(copyBtn); } function addCopyCodeButton(containerEl) { var copyBtn = document.createElement(\u0026#34;button\u0026#34;); copyBtn.className = \u0026#34;code-copy-btn\u0026#34;; copyBtn.textContent = \u0026#34;COPY\u0026#34;; var codeEl = containerEl.firstElementChild; copyBtn.addEventListener(\u0026#39;click\u0026#39;, function() { try { var selection = selectText(codeEl); document.execCommand(\u0026#39;copy\u0026#39;); selection.removeAllRanges(); flashCopyMessage(copyBtn, \u0026#39;Copied!\u0026#39;) } catch(e) { console \u0026amp;\u0026amp; console.log(e); flashCopyMessage(copyBtn, \u0026#39;Failed :\\\u0026#39;(\u0026#39;) } }); containerEl.appendChild(copyBtn); } var codeBlocks = document.querySelectorAll(\u0026#39;pre \u0026gt; code\u0026#39;); for (var i = 0; i \u0026lt; codeBlocks.length; i++) { var highlightBlocks = codeBlocks[i].firstElementChild; if (highlightBlocks != null) { i++; addCopyButton(codeBlocks[i].parentNode.parentNode); } else { addCopyCodeButton(codeBlocks[i].parentNode.parentNode); } } })();   And the CSS:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72  .code-copy-btn { position: relative; bottom: 1.1rem; left: 0.5rem; border: 0; border-radius: 4px; padding: 1px; font-size: 0.6em; line-height: 1.0; opacity: 0.6; min-width: 65px; text-align: center; letter-spacing: 2px; @includethemify($codeblock) { color: themed(\u0026#39;content-pre-color\u0026#39;); background: themed(\u0026#39;content-pre-background-color\u0026#39;); border: 1.25px solid themed(\u0026#39;border-line-color\u0026#39;); } border-top-left-radius: 0; border-top-right-radius: 4px; border-bottom-right-radius: 0; border-bottom-left-radius: 4px; white-space: nowrap; padding: 4px 4px 5px 4px; margin: 0 0 0 1px; cursor: pointer; opacity: 0.6; } .code-copy-btn:hover { @includethemify($themes) { color: themed(\u0026#39;link\u0026#39;); background-color: themed(\u0026#39;body-background-color\u0026#39;); } } .highlight-copy-btn { position: relative; bottom: 0rem; left: -1.8rem; border: 0; border-radius: 4px; padding: 1px; font-size: 0.6em; line-height: 1.0; opacity: 0.6; min-width: 65px; text-align: center; letter-spacing: 2px; @includethemify($codeblock) { color: themed(\u0026#39;content-pre-color\u0026#39;); background: themed(\u0026#39;content-pre-background-color\u0026#39;); border: 1.25px solid themed(\u0026#39;border-line-color\u0026#39;); } border-top-left-radius: 0; border-top-right-radius: 4px; border-bottom-right-radius: 0; border-bottom-left-radius: 4px; white-space: nowrap; padding: 4px 4px 5px 4px; margin: 0 0 0 1px; cursor: pointer; opacity: 0.6; } .highlight-copy-btn:hover { @includethemify($themes) { color: themed(\u0026#39;link\u0026#39;); background-color: themed(\u0026#39;body-background-color\u0026#39;); } }   In the end Do I feel happy? No.\nBut that\u0026rsquo;s all there is at the moment.\nWhat I actually needed was to find some way of inserting the column with the line numbers on all codeblocks, so I could go back to the previous code, which was much cleaner.\nNext steps I need to find a workflow for adding network diagrams\u0026hellip;\nEven Mermaid won\u0026rsquo;t do it. Not that it works.\nI\u0026rsquo;m not bitter, you\u0026rsquo;re bitter.\n","description":"With one thousand typewriters","id":7,"section":"blog","tags":null,"title":"One Thousand Monkeys","uri":"https://tiagojsilva.github.io/en/blog/2021-11-15_monkeys/"},{"content":"For this system, which will eventually be a server called verynice, I made a VM with 256MB of RAM and 640MB of disk.\n\r\r[TinyCore]1 is a very special Linux installation, destined for systems with very few resources. I\u0026rsquo;ll use the Deluxe version, CorePlus, with leather seats, GUI and possibility of disk installation, but there are leaner flavors of CoreLinux that will cheerfully boot from a 128MB flashdrive and load themselves to a RAMdrive at startup.\nIt works in a very particular way because the core system is completely separated from the applications and settings and these are only applied at the following boot if they are explicitly stored.\nVery few concessions are made to convenience and user-friendliness, the default shell (busybox)2 is extremely simplified in comparison to a normal Linux distribution and management utilities are just like UNIX/Linux ten years ago.\nInstallation Download from TinyCore\u0026rsquo;s main site the CorePlus installer\nPlace the ISO on the VM\u0026rsquo;s virtual optical drive and start it.\nPick the default option, FLWM topside\n\r\rAt the dock on the bottom of the screen, open the tc-install3 application.\n\r\rPick Frugal, Whole disk, and then, sda. Confirm that Install boot loader is enabled. Click on \u0026gt;\n\r\rFormatting Options: ext4 \u0026gt;\n\r\rBoot options to add to the installer (check the on-screen list, or Chapter 10 of the Official Tiny Core Linux book, Into the Core):\ntce=sda1 home=sda1 opt=sda1 nodhcp showapps safebackup cron syslog host=verynice kmap=qwerty/pt-latin1.kmap\r(Change the hostname and keymap to something more appropriate for you, obviously)\nThe keyboard will be in US layout, so =, « and / will be on different keys if that\u0026rsquo;s not your actual layout.\r\nClick on \u0026gt;\n\r\rInstall type I chose Core and X/GUI Desktop but when following this guide, you may not need the GUI and be able to choose Core Only\nThe only extension to install right now is Non-US keyboard layout support (if you need it)\nClick on \u0026gt;\n\r\rActually, after having CoreLinux installed and the network configured, this extension can be installed quite easily from the extension manager, so it\u0026rsquo;s really not required to use the CorePlus installer to have international keymaps, and a lighter installer would be enough. But this is the most general case.\nThe same may not be true for support for Wi-Fi cards, which is also chosen on this panel but which I haven\u0026rsquo;t tested.\nReview the settings and click Proceed\n\r\rClick on the Exit icon on the dock, pick Shutdown, OK\n\r\rWhen the installtion completes, remove the ISO from the optical drive and reboot the VM.\nInitial Settings Changing boot options To change the boot options, edit /mnt/sda1/tce/boot/extlinux/extlinux.conf and make your changes to the APPEND line.\nNon-US keyboard Open a terminal and test a key that\u0026rsquo;s specific to the layout you specified; if the result isn\u0026rsquo;t what you expected (the kmap boot option isn\u0026rsquo;t being followed), use the commands:\n1 2 3  echo \u0026#39;loadkmap \u0026lt; /usr/share/kmap/qwerty/\u0026lt;your_layout\u0026gt;.kmap\u0026#39; \u0026gt;\u0026gt; /opt/bootsync.sh filetool.sh -b sudo reboot   \r\r\rSet up Permanence Without this step, TinyCoreLinux will not automatically save the changes we make to the configuration because after each restart, all settings are lost except those that we tell it to save (which can be both good, or bad).\nThe steps below configure the automatic saving of the existing settings on system shutdown using the script that is run automatically by the system before shutting down:\n1  vi /opt/shutdown.sh   Beneath the #put user shutdown commands here line, add:\n1  filetool.sh -b   Save and exit. The command to force the recording of this change is, of course,\n1  filetool.sh -b   Change the default user\u0026rsquo;s (tc) password 1  passwd   Pick a password.\nAdd a config file to the Permanence list To save a configuration file, like the password file, after a restart (giving it permanence), the file path to save, minus the leading /, has to be placed in /opt/.filetool.lst\n1 2  sudo echo \u0026#39;etc/shadow\u0026#39; \u0026gt;\u0026gt; /opt/.filetool.lst filetool.sh -b   Network To configure a network interface in a flavor of CoreLinux with a GUI, use the command sudo network in a terminal window (the following values are just for illustrative purposes):\nInterface: eth0\nDHCP Broadcast: no\nIP Address: 10.123.130.6\nNet mask: 255.255.255.248\nBroadcast: 10.123.130.7\nGateway: 10.123.130.1\nNameServers: 1.1.1.1, 8.8.8.8\nSave Configuration: yes\nApply\n\r\rTest with ping 1.1.1.1\nConfirm the settings with cat /opt/eth0.sh\n#!/bin/sh\rpkill udhcpc\rifconfig eth0 10.123.130.6 netmask 255.255.255.248 broadcast 10.123.130.7 up\rroute add default gw 10.123.130.1\recho nameserver 1.1.1.1  /etc/resolv.conf\recho nameserver 8.8.8.8  /etc/resolv.conf\r\nTo configure the network without having access to the GUI, simply copy the above information to /opt/eth0.sh\nConfirm that /opt/eth0.sh has been added to the Permanence with:\n1  cat /opt/.filetool.lst | grep eth0   opt/eth0.sh\r\nIf it\u0026rsquo;s not,\n1  echo \u0026#34;opt/eth0.sh\u0026#34; \u0026gt;\u0026gt; /opt/.filetool.lst \u0026amp;\u0026amp; filetool.sh -b   Aliases The aliases of the default user (tc) are in ~/.ashrc. I added these aliases that I found useful:\n1 2 3 4  #filter the syslog echo \u0026#34;alias log=\u0026#39;grep /var/log/messages -e\u0026#39;\u0026#34; \u0026gt;\u0026gt; ~/.ashrc #use sudo with aliases\t echo \u0026#34;alias sudo=\u0026#39;sudo \u0026#39;\u0026#34; \u0026gt;\u0026gt; ~/.ashrc\t  And it would be nice to have those aliases (as well as others, like ll='ls -l' and especially rm='rm -i') on a rootshell; copy the necessary files to /root and let CoreLinux know that we want to save the contents of the /root folder between boots as well:\n1 2  sudo cp /home/tc/.ashrc /root/.ashrc \u0026amp;\u0026amp; sudo chown root:root /root/.ashrc echo \u0026#34;root\u0026#34; \u0026gt;\u0026gt; /opt/.filetool.lst \u0026amp;\u0026amp; filetool.sh -b   Set the Time Zone information Source\nConfirm that we are in the user\u0026rsquo;s folder: cd ~\nMake sure that we can connect to the WAN (e.g, ping 1.1.1.1)\nThe tce-fetch.sh script downloads an extension without installing it. In this case we want the tzdata.tcz extension (Time Zone data.TCextension Zipped)\n1  tce-fetch.sh tzdata.tcz   CoreLinux can mount extensions directly for reading (as a matter of fact, that how it \u0026ldquo;installs\u0026rdquo; an extension). Create a folder and mount:\n1 2  mkdir tztemp sudo mount tzdata.tcz tztemp -t squashfs -o loop,ro   Copy the desired Timezone information to the default location, /etc/localtime\n1  sudo cp -a tztemp/usr/local/share/zoneinfo/Europe/Lisbon /etc/localtime   Make the setting permanent:\n1 2  sudo echo \u0026#34;etc/localtime\u0026#34; \u0026gt;\u0026gt; /opt/.filetool.lst filetool.sh -b   Remote access with OpenSSH Source\nMake sure that we can connect to the WAN (e.g, ping 1.1.1.1)\nThe tce-load -wi permanently installs an extension:\n1  tce-load -wi openssh.tcz   Create the OpenSSH service\u0026rsquo;s configuration by copying the default configuration provided with the extension:\n1 2  cd /usr/local/etc/ssh sudo cp -a sshd_config.orig sshd_config   Start the service with the extension-supplied init script:\n1  sudo /usr/local/etc/init.d/openssh start   Check the service with:\n1  netstat -anp | grep 22   Tcp\t0\t0 0.0.0.0:22\t0.0.0.0:*\tLISTEN\r1470/sshd\r First access The default sshd_config mandates a password-protected default user, so if the tc user\u0026rsquo;s password is not configured yet it\u0026rsquo;s necessary to do so now (host-based auth or public/private keypairs can be configured, but only after editing sshd_config)\n1 2  passwd sudo echo \u0026#34;etc/shadow\u0026#34; \u0026gt;\u0026gt; /opt/.filetool.lst \u0026amp;\u0026amp; filetool.sh -b   Test the connection using an SSH client (like PuTTY on Windows):\n\r\rMake sure that SSH settings are saved for the next boot\n1  sudo echo \u0026#34;usr/local/etc/ssh\u0026#34; \u0026gt;\u0026gt; /opt/.filetool.lst \u0026amp;\u0026amp; filetool.sh -b   Setup the service to start on system boot Nostalgia is a lady dog\u0026hellip; It\u0026rsquo;s done the pre-SystemD way:\n1  sudo echo \u0026#39;usr/local/etc/init.d/openssh start \u0026amp;\u0026#39; \u0026gt;\u0026gt; /opt/bootlocal.sh \u0026amp;\u0026amp; filetool.sh -b   (Uuuhhh\u0026hellip; no. SystemD service management is vastly superior to fiddling with shell scripts and dependencies by hand. But it would probably be larger than the rest of CoreLinux itself)\nInstall a text editor (vim) Call up the text-mode application manager:\n1  tce-ab   S)earch\rEnter starting chars of desired extension, e.g. abi:\r Write vim, Enter tce - Tiny Core Extension browser\r1. gvim-base.tcz\r2. gvim-doc.tcz\r3. gvim.tcz\r4. gvim-tutor.tcz\r5. vim-locale.tcz\r6. vim.tcz\rEnter selection ( 1 - 6 ) or (q)uit:\r6\r\nThe About info of the extension is shown; q to go back and show the menu again:\nA)bout I)nstall O)nDemand D)epends T)ree F)iles siZ)e L)ist S)earch P)rovides K)eywords or Q)uit:\ri\rvim.tcz.dep OK\rDownloading: gvim-base.tcz\rConnecting to repo.tinycorelinux.net (89.22.99.37:80)\rsaving to 'gvim-base.tcz'\rgvim-base.tcz 100% |************************************************************************************| 8036k 0:00:00 ETA\r'gvim-base.tcz' saved\rgvim-base.tcz: OK\rDownloading: ncursesw.tcz\rConnecting to repo.tinycorelinux.net (89.22.99.37:80)\rsaving to 'ncursesw.tcz'\rncursesw.tcz 100% |************************************************************************************| 212k 0:00:00 ETA\r'ncursesw.tcz' saved\rncursesw.tcz: OK\rDownloading: vim.tcz\rConnecting to repo.tinycorelinux.net (89.22.99.37:80)\rsaving to 'vim.tcz'\rvim.tcz 100% |************************************************************************************| 1432k 0:00:00 ETA\r'vim.tcz' saved\rvim.tcz: OK\rvim.tcz\rA)bout I)nstall O)nDemand D)epends T)ree F)iles siZ)e L)ist S)earch P)rovides K)eywords or Q)uit:\r\nQ to exit; S, P, or K, to find more extensions to install. For example, coreutils.tcz installs the most-used GNU/POSIX commands in their full versions, replacing the ones integrated on busybox, and bash.tcz replaces busybox itself (but since TinyCore makes no concession to user-friendliness, we have to edit /etc/passwd and change the user\u0026rsquo;s login shell, set /etc/passwd to be permanent, and roll the backup)\nSetting up vim 1 2  cd ~ vim .vimrc   Set the file up with the desired options (and since it\u0026rsquo;s located in /home/tc/, the boot options we provided, specifically home=sda1, will automatically make the file permanent).\nSuggestions for a .vimrc can be found on the Dotfiles page.\nAfter customizing to our taste, having the same options when editing a file as root would be nice. To accomplish that, copy the .vimrc to root\u0026rsquo;s home folder:\n1 2  sudo cp /home/tc/.vimrc /root sudo chown root:root /root/.vimrc   (Check the Aliases section for how to add /root to the Permanence, if it\u0026rsquo;s not already there)\nNTP client If the system clock isn\u0026rsquo;t correct the communication between any local services and WAN servers can be refused by the latter. And on a VirtualBox VM without GuestAdditions, the clock will be wrong most of the time.\nDespite the existence of a chrony extension for TinyCore, I used a very basic NTP client4, because I was interested in as lean a system as possible.\n1  tce-load -wi ntpclient.tcz   Downloading: ntpclient.tcz\rConnecting to repo.tinycorelinux.net (89.22.99.37:80)\rsaving to 'ntpclient.tcz'\rntpclient.tcz 100% |********************************| 12288 0:00:00 ETA\r'ntpclient.tcz' saved\rntpclient.tcz: OK\r Configure the client Place on /opt/bootlocal.sh three instructions with very different tasks:\n1) Update the time while booting up5 If we don\u0026rsquo;t have DNS available at this stage, we\u0026rsquo;ll need to use straight IP addresses instead of hostnames, so we can\u0026rsquo;t use a pool address. My recommendation in that case is to ask the time to your country\u0026rsquo;s Official Time servers (the example uses the addresses of the Portuguese Official Time servers)5\n1  echo \u0026#34;ntpclient -c 1 -s -t -h 194.117.47.42 || ntpclient -c 1 -s -t -h 194.117.47.44\u0026#34; \u0026gt;\u0026gt; /opt/bootlocal.sh   2) Update the Real-Time Clock (RTC) TinyCore, until told otherwise, will ignore the NTP time and will always get the time from the hardware clock, which in the case of VirtualBox without Guest Additions, can\u0026rsquo;t ask the VM host for the current time and boots with the same time the VM was last turned off. So after we receive the system time from an NTP server, we must update the hardware clock with hwclock -w\n1  echo \u0026#34;hwclock -w\u0026#34; \u0026gt;\u0026gt; /opt/bootlocal.sh   3) Correct any time drift Then we need to ensure that the clock won\u0026rsquo;t drift from the correct time while the system is up, by starting a process that checks the time at regular intervals6\n1  echo \u0026#34;/usr/local/bin/ntpclient -c 0 -l -t -i 300 -h 3.pt.pool.ntp.org \u0026amp;\u0026#34; \u0026gt;\u0026gt; /opt/bootlocal.sh   In case of a reboot, the clock will jump forward one hour, but running the first two commands manually at the end of the boot process the system time is immediately corrected. I can\u0026rsquo;t tell if it\u0026rsquo;s a bug, but I tried all the combinations of UTC and localtime on Virtualbox and TinyCore nothing solved this.\nFrom a cold boot, these settings work well.\r Final thoughts TinyCoreLinux is very small, but this has its costs.\nEverything must be configured, and everything has to be defined as persistent.\nIt behaves more like a container than a regular system install; it has good company, because AlpineLinux works under the same principles, and is also very popular as a container base (being the default container base on Docker) and on embedded systems.\nHowever, it seems to me that Tinycore is beginning to be too much work for what resources it saves. Usually we\u0026rsquo;re not that desperate any more.\nFor a really minimalist system, there is an even more reduced version, MicroCoreLinux (or simply Core), without any GUI and just 8MB.\nFor something that would allow me to be productive quickly, I have high hopes for AlpineLinux, which I\u0026rsquo;ll try to test very soon.\n http://distro.ibiblio.org/tinycorelinux/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n https://busybox.net/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n http://tinycorelinux.net/install.html\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n -c = count \u0026lt;times\u0026gt;; -s = set; -t = trust; -h = host \u0026lt;address_server_NTP\u0026gt;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n http://oal.ul.pt/hora-legal/como-acertar/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n -c 0 = no limit on tries; -l = lock; -i = interval ; this command uses hostnames and assumes DNS resolution is available\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","description":"Pocket Jawbreaker","id":8,"section":"unixlike","tags":null,"title":"TinyCore Linux - Initial steps","uri":"https://tiagojsilva.github.io/en/unixlike/meme/2021-10-29_tinycorelinux-install/"},{"content":"The first time I tried to set up a Copy button for code boxes, I left an issue on Zdoc\u0026rsquo;s GitHub.\nSome days ago, another Zdoc user published the solution that worked for him, and stimulated by that, I tried again.\nUnfortunately, I must have manipulated my theme\u0026rsquo;s DOM code too much (tracking upstream is going to be impossible until I nuke it and pave it on the next Zdoc release) to be able to use his code, but I tried fiddling a little more with the code I had tried to use previously, which was based on this proposal by Tom Spencer.\nWith my changes, it ended up like this:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53  // insert just before the \u0026lt;/script\u0026gt; tag // tomspencer, https://www.tomspencer.dev/blog/2018/09/14/adding-click-to-copy-buttons-to-a-hugo-powered-blog/ (function() { \u0026#39;use strict\u0026#39;; if(!document.queryCommandSupported(\u0026#39;copy\u0026#39;)) { return; } function flashCopyMessage(el, msg) { el.textContent = msg; setTimeout(function() { el.textContent = \u0026#34;COPY\u0026#34;; }, 1000); } function selectText(node) { var selection = window.getSelection(); var range = document.createRange(); range.selectNodeContents(node); selection.removeAllRanges(); selection.addRange(range); return selection; } function addCopyButton(containerEl) { var copyBtn = document.createElement(\u0026#34;button\u0026#34;); copyBtn.className = \u0026#34;highlight-copy-btn\u0026#34;; copyBtn.textContent = \u0026#34;COPY\u0026#34;; var codeEl = containerEl.firstElementChild; copyBtn.addEventListener(\u0026#39;click\u0026#39;, function() { try { var selection = selectText(codeEl); document.execCommand(\u0026#39;copy\u0026#39;); selection.removeAllRanges(); flashCopyMessage(copyBtn, \u0026#39;Copied!\u0026#39;) } catch(e) { console \u0026amp;\u0026amp; console.log(e); flashCopyMessage(copyBtn, \u0026#39;Failed :\\\u0026#39;(\u0026#39;) } }); containerEl.appendChild(copyBtn); } // Add copy button to code blocks var highlightBlocks = document.getElementsByClassName(\u0026#39;highlight\u0026#39;); for (var i = 0; i \u0026lt; highlightBlocks.length; i++) { addCopyButton(highlightBlocks[i]); } })();   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  .highlight-copy-btn { position: relative; bottom: 22px; right: 0px; border: 0; border-radius: 4px; padding: 1px; font-size: 0.6em; line-height: 1.0; opacity: 0.6; min-width: 65px; text-align: center; letter-spacing: 2px; @includethemify($codeblock) { color: themed(\u0026#39;content-pre-color\u0026#39;); background: themed(\u0026#39;content-pre-background-color\u0026#39;); border: 1.25px solid themed(\u0026#39;border-line-color\u0026#39;); } border-top-left-radius: 0; border-top-right-radius: 4px; border-bottom-right-radius: 0; border-bottom-left-radius: 4px; white-space: nowrap; padding: 4px 4px 5px 4px; margin: 0 0 0 1px; cursor: pointer; opacity: 0.6; } .highlight-copy-btn:hover { @includethemify($themes) { color: themed(\u0026#39;link\u0026#39;); background-color: themed(\u0026#39;body-background-color\u0026#39;); } }   It kinda works, but only in code blocks for which a syntax was detected (meaning, div class is highlight and chroma has been activated). For any other code blocks (notably, the native MarkDown code blocks), it doesn\u0026rsquo;t, and there are times when I can\u0026rsquo;t or won\u0026rsquo;t activate chroma. What then?\nPreston Rodriguez\u0026rsquo;s code, which I\u0026rsquo;m thankful for, doesn\u0026rsquo;t work with the changes I\u0026rsquo;ve already done to the theme and I can\u0026rsquo;t undo them nor notice where they are messing up (did I say I\u0026rsquo;m not really grokking JavaScript right now?)\nI also tried to repeat, without success, Tom Spencer\u0026rsquo;s code in layouts/partials/head/scripts.html, but using this as the DOM selector instead:\nvar codeBlocks = document.querySelectorAll('pre \u0026gt; code');\rcodeBlocks.forEach(function(plainBlock) {\raddCopyButton(plainBlock);\r}\r(which is a perfect demonstration of what\u0026rsquo;s happening - right now the COPY button is not showing here, but whenever I can get this working, it should be there as well)\n","description":"I got a helping hand and tried again","id":9,"section":"blog","tags":null,"title":"Copy button, take 1","uri":"https://tiagojsilva.github.io/en/blog/2021-11-08_copy-button-1/"},{"content":"As I said in a previous article, I was trying to check on VyOS, which seems to be a cheap way for testing network concepts without having to pay for Cisco Modeling Labs (the only legal way of using Cisco virtual systems) or something similar.\nAnd I hit smack-dab into the issue of the Portuguese keyboard layout: there isn\u0026rsquo;t one. Yes, an SSH connection assumes the client\u0026rsquo;s layout - but you need to setup the network beforehand.\nIncidentally, the entire Debian console configuration system is deactivated or dead. And Debian has its very own way of setting the console up.\nI tried testing backwards and forwards to try to discover the regression point and I realized that:\n It still works in 1.2  But it\u0026rsquo;s no longer advisable to run dpkg-reconfigure from the raw shell, now there\u0026rsquo;s a set console keymap command from Monitor mode ($); all this does is call up dpkg-reconfigure keyboard-configuration and then restart keyboard-setup.service (Vyos is now based on systemd just like the Debian underneath)   In 1.3 and 1.4 it doesn\u0026rsquo;t work  another command has been added, now in Configuration mode (#), set system option keyboard-layout XX, but it only accepts XX=US, DE, FR, DK, NO, FI. This command works, at least for the NO layout (Norway, ou Nordic) which has many keys in common with the PT-pt layout.    Hmmm, I wonder where the main contributors of the project are from?\nBy the way, I also found out that the best way to build Vyos is through the Docker image; I tried to reverse-engineer the dockerfile as recommended by the documentation page, but despite ./configure telling me that the dependencies were all met, the build process was stopped right at the beginning:\nE: The method driver /usr/lib/apt/methods/https could not be found.\rE: Failed to fetch https://repo.saltproject.io/py3/debian/10/amd64/3003/dists/buster/InRelease\rE: Some index files failed to download. They have been ignored, or old ones used instead.\rP: Begin unmounting filesystems...\rP: Saving caches...\rReading package lists...\rBuilding dependency tree...\rmake: *** [Makefile:32: iso] Error 1\r\nBuilding with the Docker image has been easy, so access to the 1.3 official builds shouldn\u0026rsquo;t be harder than taking the time to build them.\nAs for the keymap problem, my baseless speculation leads me to suspect something in the scripts that build the chroot which is then placed on the ISO. Did they forget debconf console-setup? Some package? The /bin/setupcon file is missing and without it keyboard-setup.service won\u0026rsquo;t work.\nOne of the first things I noticed is that from version 1.3 onwards the characters of the console are the native ones, and not the typical font used by Debian-based distributions; could this be related?\nI opened a thread on the forum, and I\u0026rsquo;ll wait some more time before officially opening a bug in Phabricator. How long should I wait? Two weeks?\n","description":"What's taking so long","id":10,"section":"blog","tags":null,"title":"Update about VyOS","uri":"https://tiagojsilva.github.io/en/blog/2021-10-31_vyos2/"},{"content":"LiveCD 1.0-RC2, MATE edition Development of the Adélie distro seemed to have stopped for a long time because the team dedicated themselves to the development of a graphical and scriptable setup program, called Horizon, and that took many resources off the development of the base system. There was much going on behind the scenes but from the outside all we could see was no new releases.\nHowever, a recent reorganization put wind in their sails and the site has been much improved, looking sharp, professional and organized, the mailing-lists make more sense, and progress seems to be accelerating.\nOn the version I had tested a long time ago (1.0-beta4), Horizon was completely inoperative and I had to use the manual installation method; even now that\u0026rsquo;s an interesting path to take, because it\u0026rsquo;s a good example of how to do bootstrap a Linux system from a binary repository, instead of source code as in Gentoo or LinuxFromScratch, which takes a lot longer.\nTo test the installation, I downloaded the LiveCD for x86_64 with the MATE flavor, but there are also KDE and LXQt options, in ARMv7, ARM64, PPC, PPC64 and x86 architectures.\nI set up an Other Linux (64-bit) VM on VirtualBox (6.1.22) with 1GB of RAM, and defaults for almost everything else.\nGRUB on the LiveCD does not automatically pick an option to boot from, so it\u0026rsquo;s always necessary some interaction, if only hitting Enter, to boot.\r\nIssues, for starters Right on MATE\u0026rsquo;s initial screen the lack of polish is noticeable: clicking on Computer errors out, and the proc e tmp partitions should\u0026rsquo;ve been left hidden.\n\r\rThis may only be cosmetics, but it\u0026rsquo;s but a small appetizer for what awaits us\u0026hellip;\nTo start the HorizonUI installer, Applications \u0026gt; System Tools \u0026gt; System Installation\n\r\rIf you don\u0026rsquo;t want to come on this journey with me and want to start installing right now, do this:\nClose the installer.\nOpen a terminal window: Applications \u0026gt; System Tools \u0026gt; MATE Terminal\nLog in as root: $ su - ; the password is live\n# horizon-ui\r\nMaybe because we\u0026rsquo;ll be running a root application on an X session for a regular user, if PowerManagement shuts the monitor down the VM does not recover and can even crash during installation. Before opening the installer set System \u0026gt; Preferences \u0026gt; Hardware \u0026gt; Power Management \u0026gt; Display Sleep = Never, and in System \u0026gt; Preferences \u0026gt; Look and Feel \u0026gt; Screensaver, turn off Activate when idle and Lock Screen; after the installation starts these configuration panels can\u0026rsquo;t be opened any longer. Both are needed.\nThis was tested in VirtualBox and VMware Workstation/Player\r\nAlso, they are definitely not joking when they say access to WAN is mandatory; none of the packages are installed from the LiveCD, and everything is downloaded from the Adélie repositories.\r\nThe installer looks very much like a wizard:\n\r\rContinue\n Keyboard Layout Load Firmware: Adélie includes non-libre firmware for graphics adapters and Wi-Fi interfaces Select Installation Disk Select partitioning Type: Erase and Use the Whole Disk or Manual (I picked Whole) Networking Setup: Automatic or Manual - and here\u0026rsquo;s the first showstopper, because access to the network is mandatory for installation and this step has a lot where to screw up.\n\r\rIf picking Manual, manually input the IPv4 and IPv6 addressing, but nothing is done to validate if the data is correct; an address in the multicast range and a gateway in Class E are both accepted as valid in this step and the network isn\u0026rsquo;t tested (with a ping to the indicated DNS address, for example):\n\r\rAutomatic means DHCP, of course, and fails to get an address, not even starting a DORA negotiation (Review DHCP Log). And this is all because HorizonUI isn\u0026rsquo;t running with system privileges \u0026hellip;\n\r\rOpening a terminal, we quickly find out that: The LiveCD itself starts without access to the network because DCHP must be activated manually (# dhcpcd eth0) By the way, this also led to the realization that the man help system isn\u0026rsquo;t set up as well (you\u0026rsquo;re on your own, kid!) And finally, even with DHCP working, the eth0 port raised, with an assigned IP and access to the outside, HorizonUI continues to fail in the network configuration step because it wants to do a DORA negotiation (for which it doesn\u0026rsquo;t have permissions) and won\u0026rsquo;t budge until it succeds.\nThe solution is to invoke the installer from the root account (the password is live), with # horizon-ui\n\r\rProceeding with the installation: Date and Time Settings (if we haven\u0026rsquo;t run # horizon-ui, it\u0026rsquo;s not possible to adjust the date and time, only the Timezone is available) Computer Name Software Selection  Standard: installs a complete KDE system (although I\u0026rsquo;ve picked a MATE-flavored LiveCD?) Mobile: KDE as above, but with drivers and settings more suitable for laptops Compact: Very basic LXQt Text-only Custom: as a matter of fact, the only available way for installing MATE\n\r\r   Startup Configuration: if we want to install a bootloader (in this case, yes) Set Root Passphrase User Accounts (you can create several, but you must configure at least one user)\n\r\rAnd at the end of it all, if you haven\u0026rsquo;t followed my initial advice, it breaks again because of missing permissions (in this case, to save the installation script)\n\r\rIf (and only if) the installer was ran as root, the installtion starts:\n\r\rAnd ends:\n\r\rHowever, Finish doesn\u0026rsquo;t restart the system as promised. Which isn\u0026rsquo;t bad because it allows you to do Shutdown, take the ISO off the virtual optical drive and boot back up in an orderly fashion.  Standard A cursory investigation confirms KDE is installed, but it doesn\u0026rsquo;t even honor the keyboard scheme we chose in the installer; I had chosen pt:\n\r\rMobile Exactly the same as Standard but includes drivers and utilities for peripherals used in laptops, such as trackpads and battery managers; I can\u0026rsquo;t test these features.\nCompact (LXQt and minimal install) Crashes during installation and leaves the system unable to boot; note that after giving the error, I tried to use the LXQt-flavored LiveCD instead of the MATE version to see if it helped, but something seems to be wrong in the repos or in the installation script of the Compact option and it errors while configuring ConsoleFonts (again, the installation on the hard disk depends only on the Horizon script and on Adélie\u0026rsquo;s repos, and the LiveCD is just a graphical environment for the installer)\nOptions used by the Horizon script:\n\r\rInstallation log showing the error:\n\r\rCustom It\u0026rsquo;s the only way of installing MATE or XFCE.\nCustom has more configuration pages:\n Software Selection: package sets to install; detailed below for each case Software Choices: allows choosing three very particular options:  Shell: Dash (POSIX-compatible), ou Bash (GNU-compatible) Init: S6-linux-init (+ OpenRC) (an attempt from the MUSL world to have something similar to SystemD, which only supports GNU Glibc) or SysV Init Uevent: eudev (stable) vs mdevd (more dynamic and modern but unstable) I always picked Bash, S6 e eudev    \r\rSoftware Selection wes set up as:\n☐ Desktop Environments\n ☑ KDE Plasma 5  ☑ Documentation\n☑ Internet Software\nThe image below is from another installation attempt, with MATE selected instead of KDE:\n\r\rAfter installing, it hangs on the first boot; no VTY responds and the login process does not start.\nI have no image because the screenshots came out empty, which made me suspect from an issue with the VirtualBox graphics card (VMSVGA)\nI decided to test the same installation settings in VMware Workstation: the first boot completed successfully, but VTY 7 (where X ususally is) only had a blinking cursor; and startx resulted in not found\nComparing the the installation script options (installfile) between the \u0026ldquo;Standard\u0026rdquo; and \u0026ldquo;Custom\u0026rdquo; installation options, I noticed that on \u0026ldquo;Custom\u0026rdquo; two fundamental packages for a X system weren\u0026rsquo;t being installed: sddm (managing the GUI login panel and the DE picker) and X11 itself\n\r\rFigure 17. Instalação Standard\r\r\r\r\r\rFigure 18. Instalação Custom\r\r\r\rAnd note that the keyboard configured in the console continued to be US.\nI also tested the \u0026ldquo;Custom\u0026rdquo; installation of MATE (as seen above) and LXQt, with the same results.\nConclusion As much as I have a soft spot for Adélie (I wonder why), using it is an exercise of frustration that reminds me of the worst times at the beginning of Linux (and my first Linux was a RedHat 4.5 - not RHEL, RedHat). Several years of polishing and debugging are still missing, which is the kind of painstaking work no hacker ever wants to do, which the main surviving GNU/Linux distros (Debian, SuSE, RedHat, Arch) have eventually done, and from which all their variants (Ubuntu, Mint, Manjaro, etc.) benefit.\nAt this point, I believe that Adélie can be criticized for:\n offering LiveCDs that aren\u0026rsquo;t functional enough to test the system before installing (I mean, no network access?)  and that do not contain the necessary packages to install a system without online access to Adélie\u0026rsquo;s repos; yes, it would balloon the size of the LiveCD, but that\u0026rsquo;s what a LiveCD is supposed to be   The Standard installation option always installs KDE and not the DE of that LiveCD; again, the LiveCD is supposed to be a faithful preview of what\u0026rsquo;s going to be installed on disk, although it should also be able to run the full custom installer The Custom installation offering alternative DEs doesn\u0026rsquo;t. Not having DHCP active by default, which would fix 90% of user situations (number pulled out of thin air). Not including manpages Not including a copy of the online documentation in the LiveCD The installer can\u0026rsquo;t work from the GUI And all this might not be so serious, if Adélie was a regular GNU/Linux distro, but it isn\u0026rsquo;t.  All this marks Adélie as a distribution only for very advanced users, and, if possible, very experienced with Alpine Linux, which uses the same package manager (APK) and where much of Adélie\u0026rsquo;s userland seems to originate from.\nI submitted some of this information as Issues on Adélie\u0026rsquo;s development site, and if you find more problems I suggest you submit them too; developers are already perfectly adapted to the system but need to know these issues that only happen to the common user who checks the system for the first time.\nThe Adélie project is small and so communication is easy and uncomplicated, so much so that I was able to contact the team, which explained to me that this RC2 version was produced at a very complicated moment in the life of the project for personal reasons of the main programmer (that I understand perfectly, but it is worrying that the distro is so dependent on one person) and that an RC3 version is guaranteed and RC4 is also very likely.\nIn my opinion, they haven\u0026rsquo;t even reached Beta, but nobody cares nowadays, the reality is that version 1.0 will be the Public Beta with a version 1.5 planned for stabilization; which places Adélie Linux in very good company, because OSX had exactly the same pattern of development, even with two decades of prior existence as NextStep/OpenStep - only on OSX 10.2 Jaguar did it become stable enough to be a daily driver without bleeding to death from usability papercuts.\n","description":"Where I pull my hair trying to install Adélie","id":11,"section":"unixlike","tags":null,"title":"Adelie Linux - LiveCD Installation","uri":"https://tiagojsilva.github.io/en/unixlike/musl/2021-09-13_adelie_livecd/"},{"content":"Client and Server Certificates Now that we have our IntermediateCA properly configured, we can start using it to issue certificates.\nNotes:\n You should use no less than half the bits used on the CA for keys The server\u0026rsquo;s CN should be its FQDN A server certificate needs to have the same FQDN repeated on the SAN information The client certificate\u0026rsquo;s CN can be anything, it\u0026rsquo;s not important. Certificates must be signed by the IntermediateCA Certificates usually last a year (365 days) and the maximum, since July 2019, is 824 days (+1) OpenSSL command for server certificate: -extensions server_cert OpenSSL command for client certificate: -extensions usr_cert Only if copy_extensions = copy or = all is on the [ca_default] section of intermediate/openssl.conf can the CSR\u0026rsquo;s SAN information be transferred to the signed certificate; otherwise, the SAN information has to be reinserted when using the command x509 to sign the CSR, so that it reaches the signed certificate. 4 servers will be used:  offline: has the RootCA server: has the CRLDistribution of the RootCA, the IntermediateCA and its certificates, and the IntermediateCA\u0026rsquo;s OCSP Responder www: will have an HTML server certified by the IntermediateCA client: will access the site on www    Example of server certificate: the PKI server\u0026rsquo;s own certificate Start by creating a key; in this case you should omit the -aes256 or the -passout option to avoid creating a password.\nIf there is a password, it will be necessary to introduce it whenever the webserver is started…\n1 2  inter=\u0026#34;/root/ca/inter-ca\u0026#34; openssl genrsa -out $inter/private/server.tjs.lan.key.pem 4096   Generating RSA private key, 4096 bit long modulus (2 primes)\r...............................................................................................................++++\r........................................................++++\re is 65537 (0x010001)\r 1  chmod 400 $inter/private/server.tjs.lan.key.pem   Create SAN information It\u0026rsquo;s especially useful when the FQDN is fake or not available (e.g, there are no DNS records and you have to certify by IP address), but it\u0026rsquo;s become mandatory because now the certificates for Web Servers must to have the FQDN in a SAN entry, and having it only in the CN is no longer enough\u0026hellip;\nTo do so, we have to create an extra .CNF file, containing only this information (which will be different for each server)\n1 2  mkdir $inter/san cat \u0026gt; $inter/san/server.tjs.lan-san.cnf   [req]\rdistinguished_name = req_distinguished_name\rreq_extensions = req_ext\rprompt = no\r[req_distinguished_name]\rC = PT\rST = Lisboa\rL = Lisboa\rO = Tiago Joao Silva\rOU = TJS\rCN = server.tjs.lan\r[req_ext]\rsubjectAltName = @alt_names\r[alt_names]\rIP.1 = 192.168.1.70\rDNS.1 = server.tjs.lan DNS.2 = dns.tjs.lan\rDNS.3 = chat.tjs.lan\rDNS.4 = mail.tjs.lan\rCreate the CSR 1 2 3 4  openssl req -config $inter/openssl.cnf \\ -key $inter/private/server.tjs.lan.key.pem \\ -config $inter/san/server.tjs.lan-san.cnf \\ -new -sha512 -out $inter/csr/server.tjs.lan.csr.pem   Confirm that the CSR has the SAN info:\n1 2  openssl req -noout -text -in $inter/csr/server.tjs.lan.csr.pem | \\ grep -A 1 \u0026#34;Subject Alternative Name\u0026#34;   X509v3 Subject Alternative Name:\rIP Address:192.168.1.70, DNS:server.tjs.lan, DNS:dns.tjs.lan, DNS:chat.tjs.lan, DNS:mail.tjs.lan\r Sign the CSR Since July 2019 the maximum duration of a server certificate is 824 days (+today) and the most recent browsers reject certificates with more duration\u0026hellip;\r In case there\u0026rsquo;s no copy\\_extensions = copy or = all in inter-ca/openssl.cnf, you will need to reinsert SAN the information with the options -extensions req_ext and -extfile aaa-san.cnf\n1 2 3 4 5 6 7  openssl ca -config $inter/openssl.cnf \\ -extensions server_cert -days 823 -notext -md sha512 \\ -extensions req_ext \\ -extfile $inter/san/server.tjs.lan-san.cnf \\ -passin file:$inter/private/inter-ca.key.pass \\ -in $inter/csr/server.tjs.lan.csr.pem \\ -out $inter/certs/server.tjs.lan.cert.pem   Otherwise, if copy\\_extensions = copy or = all is in inter-ca/openssl.cnf, it\u0026rsquo;s a lot easier:\n1 2 3 4 5  openssl ca -config $inter/openssl.cnf \\ -extensions server_cert -days 823 -notext -md sha512 \\ -passin file:$inter/private/inter-ca.key.pass \\ -in $inter/csr/server.tjs.lan.csr.pem \\ -out $inter/certs/server.tjs.lan.cert.pem   Using configuration from /root/ca/inter-ca/openssl.cnf\rCheck that the request matches the signature\rSignature ok\rCertificate Details:\rSerial Number: 4100 (0x1004)\rValidity\rNot Before: Aug 22 23:54:31 2021 GMT\rNot After : Nov 23 23:54:31 2023 GMT\rSubject:\rcountryName = PT\rstateOrProvinceName = Lisboa\rlocalityName = Lisboa\rorganizationName = Tiago Joao Silva\rorganizationalUnitName = TJS\rcommonName = server.tjs.lan\rX509v3 extensions:\rX509v3 Basic Constraints:\rCA:FALSE\rNetscape Cert Type:\rSSL Server\rNetscape Comment:\rOpenSSL Generated Server Certificate\rX509v3 Subject Key Identifier:\r94:00:E3:58:4F:BA:20:85:F7:9C:DC:47:3C:68:A1:46:8B:78:10:AF\rX509v3 Authority Key Identifier:\rkeyid:E3:75:25:D7:74:08:0B:23:F0:AF:E4:EC:D0:D4:52:CB:5A:3A:10:2E\rDirName:/C=PT/ST=Lisboa/L=Lisboa/O=TiagoJoaoSilva/OU=TJS/CN=ca-tjs-1/emailAddress=bofh@tjs.lan\rserial:10:03\rX509v3 Key Usage: critical\rDigital Signature, Key Encipherment\rX509v3 Extended Key Usage:\rTLS Web Server Authentication\rAuthority Information Access:\rOCSP - URI:http://ocsp.tjs.lan:7888\rCertificate is to be certified until Nov 23 23:54:31 2023 GMT (823 days)\rSign the certificate? [y/n]:Y\r1 out of 1 certificate requests certified, commit? [y/n]Y\rWrite out database with 1 new entries\rData Base Updated\r 1  chmod 444 $inter/certs/server.tjs.lan.cert.pem   Verify the ChainOfTrust with the CA-CHAIN certificate 1 2  openssl verify -CAfile $inter/certs/inter-ca_chain.cert.pem \\ $inter/certs/server.tjs.lan.cert.pem   /root/ca/inter-ca/certs/server.tjs.lan.cert.pem: OK\r Create a Chain/Bundle certificate for the webserver Splice the Server certificate and the CA-CHAIN certificate:\n1 2  cat $inter/certs/{server.tjs.lan.cert.pem,inter-ca_chain.cert.pem} \u0026gt; \\ $inter/certs/server.tjs.lan.cert_chain.pem   Testing the CA Set up a webserver We need to create a new certificate for the webserver. Its IP will be 192.168.1.77 and its hostname www\n1 2 3 4  inter=\u0026#34;/root/ca/inter-ca\u0026#34; openssl genrsa -out $inter/private/www.tjs.lan.key.pem 4096 chmod 400 $inter/private/www.tjs.lan.key.pem cat \u0026gt; $inter/san/www.tjs.lan-san.cnf   [req]\rdistinguished_name = req_distinguished_name\rreq_extensions = req_ext\rprompt = no\r[req_distinguished_name]\rC = PT\rST = Lisboa\rL = Lisboa\rO = Tiago Joao Silva\rOU = TJS\rCN = www.tjs.lan\r[req_ext]\rsubjectAltName = @alt_names\r[alt_names]\rIP.1 = 192.168.1.77\rDNS.1 = www.tjs.lan 1 2 3 4 5 6 7 8 9 10 11 12 13  openssl req -config $inter/openssl.cnf \\ -key $inter/private/www.tjs.lan.key.pem \\ -config $inter/san/www.tjs.lan-san.cnf \\ -new -sha512 -out $inter/csr/www.tjs.lan.csr.pem openssl ca -config $inter/openssl.cnf \\ -extensions server_cert -days 823 -notext -md sha512 \\ -passin file:$inter/private/inter-ca.key.pass \\ -in $inter/csr/www.tjs.lan.csr.pem \\ -out $inter/certs/www.tjs.lan.cert.pem chmod 444 $inter/certs/www.tjs.lan.cert.pem cat $inter/certs/{www.tjs.lan.cert.pem,inter-ca_chain.cert.pem} \u0026gt; \\ $inter/certs/www.tjs.lan.cert_chain.pem chmod 444 $inter/certs/www.tjs.lan.cert_chain.pem   To test, install a new Debian 11 system without GUI.\nEdit the configuration of the desired interface (enp0s3 is the primary interface on VirtualBox; on VMware it\u0026rsquo;s ens33)\n1  vim /etc/network/interfaces   iface enp0s3 inet static\raddress 192.168.1.77/24\rgateway 192.168.1.1\r1  hostnamectl set-hostname www.tjs.lan   Edit /etc/hosts; in the second line, change to:\n127.0.1.1\twww.tjs.lan\twww\rVerify:\n1  for opt in {s,d,f}; do hostname -$opt ; done   www\rtjs.lan\rwww.tjs.lan\r\nInstall the NGINX server\n1  apt install nginx -y   Check if the default page is being served:\n1  wget localhost:80 -O-   \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;title\u0026gt;Welcome to nginx!\u0026lt;/title\u0026gt;\r\u0026lt;style\u0026gt;\rbody {\rwidth: 35em;\rmargin: 0 auto;\rfont-family: Tahoma, Verdana, Arial, sans-serif;\r}\r\u0026lt;/style\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;h1\u0026gt;Welcome to nginx!\u0026lt;/h1\u0026gt;\r\u0026lt;p\u0026gt;If you see this page, the nginx web server is successfully installed and\rworking. Further configuration is required.\u0026lt;/p\u0026gt;\r\u0026lt;p\u0026gt;For online documentation and support please refer to\r\u0026lt;a href=\u0026quot;http://nginx.org/\u0026quot;\u0026gt;nginx.org\u0026lt;/a\u0026gt;.\u0026lt;br\u0026gt;/\u0026gt;\rCommercial support is available at\r\u0026lt;a href=\u0026quot;http://nginx.com/\u0026quot;\u0026gt;nginx.com\u0026lt;/a\u0026gt;.\u0026lt;/p\u0026gt;\r\u0026lt;p\u0026gt;\u0026lt;em\u0026gt;Thank you for using nginx.\u0026lt;/em\u0026gt;\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rBring the webserver\u0026rsquo;s Chain/Bundle certificate to the webserver e put it on a place that is not affected by system updates, like a local-certs folder in /etc/ssl/\n1 2 3  mkdir /etc/ssl/local-certs cp www.tjs.lan.cert_chain.pem /etc/ssl/local-certs/ chmod 444 /etc/ssl/local-certs/www.tjs.lan.cert_chain.pem   Also bring the private key associated with the webserver\u0026rsquo;s certificate and put it in /etc/ssl/private/\n1 2  cp www.tjs.lan.key.pem /etc/ssl/private/ chmod 400 /etc/ssl/private/www.tjs.lan.key.pem   Change the NGINX configuration to automatically redirect port 80 (HTTP) requests to port 443 (https), and point to the the webserver\u0026rsquo;s certificate and key\n1 2  cp /etc/nginx/sites-available/default{,.orig} vim /etc/nginx/sites-available/default   From line 21:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  server { # redirect all HTTP to HTTPS  listen 80; listen [::]:80; server_name\twww.tjs.lan; return 301 https://www.tjs.lan$request_uri; } server { listen 443 ssl; listen [::]:443 ssl; server_name www.tjs.lan; ssl_certificate /etc/ssl/local-certs/www.tjs.lan.cert_chain.pem; ssl_certificate_key /etc/ssl/private/www.tjs.lan.key.pem;   Note that we haven\u0026rsquo;t closed the braces, because the default configuration continues for a few more lines and the braces close below this point.\n1 2  systemctl restart nginx wget localhost:80 -O-   --2021-08-24 21:45:45-- http://localhost/\rResolving localhost (localhost)... ::1, 127.0.0.1\rConnecting to localhost (localhost)|::1|:80... connected.\rHTTP request sent, awaiting response... 301 Moved Permanently\rLocation: https://www.tjs.lan/ [following]\r--2021-08-24 21:45:45-- https://www.tjs.lan/\rResolving www.tjs.lan (www.tjs.lan)... 127.0.1.1\rConnecting to www.tjs.lan (www.tjs.lan)|127.0.1.1|:443... connected.\rERROR: The certificate of ‘www.tjs.lan’ is not trusted.\rERROR: The certificate of ‘www.tjs.lan’ doesn't have a known issuer.\r\nThe redirection is happening, but the local wget to www.tjs.lan doesn\u0026rsquo;t trust the server certificate because it\u0026rsquo;s doesn\u0026rsquo;t know the RootCA\u0026rsquo;s certificate.\r\nOpen ports 80 and 443 on the firewall\n1 2  ufw allow 80 ufw allow 443   Test the WebServer Set up a GUI client (for example, a Debian 11 with MATE).\nName resolution As we don\u0026rsquo;t have a DNS server with the tjs.lan zone nor records for all these systems, add the following to the /etc/hosts on the three systems (server, www and client)\n# printf \u0026quot;\\\r#tjs.lan\\n\\\r192.168.1.70\tserver.tjs.lan server\\n\\\r192.168.1.70\tocsp.tjs.lan\tocsp\\n\\\r192.168.1.77\twww.tjs.lan www \\n\u0026quot; \\\r\u0026gt;\u0026gt; /etc/hosts\rInstall the root certificate on the end-user Import the RootCA\u0026rsquo;s certificate to the current user\u0026rsquo;s home.\nOpen Firefox, Preferences, Privacy and Security, View Certificates…\nOr (about:preferences#privacy)\n\r\rImport…\n\r\rPick the RootCA\u0026rsquo;s certificate, Open\n\r\r✓ Trust this CA to identify websites\n✓ Trust this CA to identify email users (optional)\nOK\n\r\rClicking on View, the certificate\u0026rsquo;s details are shown\n\r\rThe Root Authority has been imported, OK\n\r\rTest the site Open http://www.tjs.lan (it may be necessary to tell Firefox that we really want to go to that address), and we have an SSL connection protected with our certificate:\n\r\rConfigure OCSP Stapling Source: https://www.digitalocean.com/community/tutorials/how-to-configure-ocsp-stapling-on-apache-and-nginx\nBring the RootCA\u0026rsquo;s certificate to the webserver:\n1  cp ca.cert.pem /etc/ssl/local-certs/   Add the following lines to NGINX\u0026rsquo;s active site (we were using /etc/nginx/sites-available/default), below ssl_certificate_key:\n1 2 3  ssl_stapling on; ssl_stapling_verify on; ssl_trusted_certificate /etc/ssl/local-certs/ca.cert.pem;   Testing From the client, test the OCSP stapling process with the following command, not forgetting to indicate the CA certificate (which we left in the user\u0026rsquo;s homefolder when we imported it into Firefox); if you deleted it, you need to bring it back to the client so that it can be used now:\n1  echo QUIT | sudo openssl s_client -connect www.tjs.lan:443 -CAfile ~/ca.cert.pem -status   \r\rExpand\r\rCONNECTED(00000003)\rdepth=2 C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\rverify return:1\rdepth=1 C = PT, ST = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = inter-ca-tjs-2, emailAddress = bofh@tjs.lan\rverify return:1\rdepth=0 C = PT, ST = Lisboa, L = Lisboa, O = Tiago Joao Silva, OU = TJS, CN = www.tjs.lan\rverify return:1\rOCSP response: ======================================\rOCSP Response Data:\rOCSP Response Status: successful (0x0)\rResponse Type: Basic OCSP Response\rVersion: 1 (0x0)\rResponder Id: C = PT, ST = Lisboa, L = Lisboa, O = Tiago Joao Silva, OU = TJS, CN = ocsp.tjs.lan\rProduced At: Aug 24 22:18:56 2021 GMT\rResponses:\rCertificate ID:\rHash Algorithm: sha1\rIssuer Name Hash: AE59C598DC56A005EA5239AE471093B7924F5018\rIssuer Key Hash: E37525D774080B23F0AFE4ECD0D452CB5A3A102E\rSerial Number: 1007\rCert Status: good\rThis Update: Aug 24 22:18:56 2021 GMT\r[…]\rCertificate:\rData:\rVersion: 3 (0x2)\rSerial Number: 4099 (0x1003)\rSignature Algorithm: sha512WithRSAEncryption\rIssuer: C=PT, ST=Lisboa, O=TiagoJoaoSilva, OU=TJS, CN=inter-ca-tjs-2/emailAddress=bofh@tjs.lan\rValidity\rNot Before: Aug 22 22:53:56 2021 GMT\rNot After : Nov 23 22:53:56 2023 GMT\rSubject: C=PT, ST=Lisboa, L=Lisboa, O=Tiago Joao Silva, OU=TJS, CN=ocsp.tjs.lan\rSubject Public Key Info:\rPublic Key Algorithm: rsaEncryption\rRSA Public-Key: (4096 bit)\r[…]\r---\rCertificate chain\r0 s:C = PT, ST = Lisboa, L = Lisboa, O = Tiago Joao Silva, OU = TJS, CN = www.tjs.lan\ri:C = PT, ST = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = inter-ca-tjs-2, emailAddress = bofh@tjs.lan\r1 s:C = PT, ST = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = inter-ca-tjs-2, emailAddress = bofh@tjs.lan\ri:C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\r2 s:C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\ri:C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\r---\rServer certificate\r-----BEGIN CERTIFICATE-----\r[…]\rsubject=C = PT, ST = Lisboa, L = Lisboa, O = Tiago Joao Silva, OU = TJS, CN = www.tjs.lan\rissuer=C = PT, ST = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = inter-ca-tjs-2, emailAddress = bofh@tjs.lan\r---\rNo client certificate CA names sent\rPeer signing digest: SHA256\rPeer signature type: RSA-PSS\rServer Temp Key: X25519, 253 bits\r---\rSSL handshake has read 11091 bytes and written 392 bytes\rVerification: OK\r---\rNew, TLSv1.3, Cipher is TLS_AES_256_GCM_SHA384\rServer public key is 4096 bit\rSecure Renegotiation IS NOT supported\rCompression: NONE\rExpansion: NONE\rNo ALPN negotiated\rEarly data was not sent\rVerify return code: 0 (ok)\r---\r---\rPost-Handshake New Session Ticket arrived:\rSSL-Session:\rProtocol : TLSv1.3\rCipher : TLS_AES_256_GCM_SHA384\rSession-ID: 18DD0A571D36D69EC35D46FBC8F28711DDEED91000F1F595897B061640DD86E9\rSession-ID-ctx: Resumption PSK: 2B54CFDFF0170EDC5F77AE462A18AAA4DC7CC3CED7B21E2F6B97454A0AB65725AE63DDA084379C793DADF63983606283\rPSK identity: None\rPSK identity hint: None\rSRP username: None\rTLS session ticket lifetime hint: 300 (seconds)\rTLS session ticket:\r0000 - 28 c6 3d 71 b3 5c 60 1f-a8 7d 5f f7 26 3c cd f5 (.=q.\\`..}_.\u0026\r Revocation with OSCP Responder Stapling usually has a validity of 7 days, where the server caches the response and no longer contacts the OCSP to obtain signed confirmation of the validity of its certificate, and immediatly sends the previous response to the client.\nThis means that if we revoke the certificate now, only after 7 days will the customer refuse the WebServer\u0026rsquo;s certificate.\nUnless, of course, the WebServer is restarted and loses any memory of the OCSP response \u0026hellip;\nLet\u0026rsquo;s revoke the WebServer\u0026rsquo;s certificate:\n1 2 3 4 5 6  stamp=$(date +%F_%T) mv /root/ca/inter-ca/certs/www.tjs.lan.cert.pem{,-revoked_$stamp} openssl ca -config /root/ca/inter-ca/openssl.cnf \\ -passin file:/root/ca/inter-ca/private/inter-ca.key.pass \\ -revoke /root/ca/inter-ca/certs/www.tjs.lan.cert.pem-revoked_$stamp \\ -crl_reason superseded   Using configuration from /root/ca/inter-ca/openssl.cnf\rRevoking Certificate 1007.\rData Base Updated\r Restart the ocsp service, so that it updates itself with the new CRL\n1  systemctl restart ocsp-responder_inter-ca.service   Restart the nginx service on www, to drop the OCSP Stapling cache\n1  systemctl restart nginx   1  echo QUIT | sudo openssl s_client -connect www.tjs.lan:443 -CAfile ~/ca.cert.pem -status   CONNECTED(00000003)\rdepth=2 C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\rverify return:1\rdepth=1 C = PT, ST = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = inter-ca-tjs-2, emailAddress = bofh@tjs.lan\rverify return:1\rdepth=0 C = PT, ST = Lisboa, L = Lisboa, O = Tiago Joao Silva, OU = TJS, CN = www.tjs.lan\rverify return:1\rOCSP response: no response sent\r Check that clients read the certificate as revoked When we try to load www.tjs.lan on Firefox, we\u0026rsquo;re told that the certificate was revoked:\n\r\rIssue a new certificate to replace the revoked one If you are following the tutorial in order, it\u0026rsquo;s best to issue a new certificate for www.tjs.lan before proceeding. Don\u0026rsquo;t forget that since the key was not really compromised nor has the www server information changed, your CSR remains valid, and so it\u0026rsquo;s only necessary to repeat the steps from the CSR signature onwards. If the private key had been compromised, it would be necessary to issue a new certificate for www from scratch.\r\nPut it in the appropriate place on www.tjs.lan, restart NGINX, and test again if the client can access the server\u0026rsquo;s webpage:\n\r\rRevoke the IntermediateCA To revoke the IntermediateCA (let\u0026rsquo;s assume that someone left the private key of the IntermediateCA in a public GitHub repository), we have to go back to the RootCA, which is offline, and follow the steps described in the corresponding section:\n1 2 3 4 5 6  stamp=$(date +%F_%T) mv /root/ca/inter-ca/certs/inter-ca.cert.pem{,-revoked_$stamp} openssl ca -config /root/ca/openssl.cnf \\ -passin file:/root/ca/private/ca.key.pass \\ -revoke /root/ca/inter-ca/certs/inter-ca.cert.pem-revoked_$stamp \\ -crl_reason keyCompromise   Using configuration from /root/ca/openssl.cnf\rRevoking Certificate 1003.\rData Base Updated\r Update the CRL and convert it to DER, following the previously shown steps:\n1 2 3 4 5 6  openssl ca -config /root/ca/openssl.cnf -gencrl \\ -passin file:/root/ca/private/ca.key.pass \\ -keyfile /root/ca/private/ca.key.pem -cert /root/ca/certs/ca.cert.pem \\ -out /root/ca/crl/ca.crl.pem openssl crl -inform PEM -in /root/ca/crl/ca.crl.pem \\ -outform DER -out /root/ca/crl/root-ca.crl   You can see the updated CRL has a new entry:\n1  openssl crl -inform DER -text -noout -in /root/ca/crl/root-ca.crl   Certificate Revocation List (CRL):\rVersion 2 (0x1)\rSignature Algorithm: sha512WithRSAEncryption\rIssuer: C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\rLast Update: Aug 25 20:50:52 2021 GMT\rNext Update: Sep 14 20:50:52 2022 GMT\rCRL extensions:\rX509v3 Authority Key Identifier:\rkeyid:01:F2:CC:54:E0:F2:58:AC:E2:14:8E:2B:DB:6D:B6:FF:5C:25:41:A0\rX509v3 CRL Number:\r4098\rRevoked Certificates:\rSerial Number: 1001\rRevocation Date: Aug 13 22:11:25 2021 GMT\rCRL entry extensions:\rX509v3 CRL Reason Code:\rUnspecified\rSerial Number: 1002\rRevocation Date: Aug 13 23:41:51 2021 GMT\rCRL entry extensions:\rX509v3 CRL Reason Code:\rSuperseded\rSerial Number: 1003\rRevocation Date: Aug 25 20:45:54 2021 GMT\rCRL entry extensions:\rX509v3 CRL Reason Code:\rKey Compromise\r Bring the updated CRL from offline to online Using a safe medium that doesn\u0026rsquo;t break the airgapping of the RootCA\u0026rsquo;s system, take the CRL file to the server hosting the RootCA\u0026rsquo;s CRLDistribution:\n1 2  cp root-ca.crl /var/www/crl systemctl restart lighttpd.service   To empty the OCSP Stapling\u0026rsquo;s cache, restart the webserver if we want the revocation to be immediately recognized:\n1  systemctl restart nginx.service   Test the IntermediateCA\u0026rsquo;s revocation On modern browsers (fails) The site is still considered trusted, because apparently browsers do not bother to check the entire chain of certificates (not even by OCSP), relying only on the internal lists of RootCAs and CRLs distributed with browser updates.\nThe only exception seemed to be good old Internet Explorer, may it rest in pieces, which we\u0026rsquo;ll try right away.\nhttps://news.netcraft.com/archives/2013/05/13/how-certificate-revocation-doesnt-work-in-practice.html\nAnd I can\u0026rsquo;t find an openssl verify command that can indicate that the certificate chain www.tjs.lan.cert_chain.pem is broken by the revocation of the IntermediateCA\n(https://stackoverflow.com/questions/25482199/verify-a-certificate-chain-using-openssl-verify)\nPKI usage in browsers takes many shortcuts, or so it seems\u0026hellip;\nOn Internet Explorer To test with Internet Explorer, we need a Windows client, so I provisioned a Windows 7 VM.\nImport the RootCA\u0026rsquo;s Certificate: Bring the RootCA\u0026rsquo;s certificate to the Windows client and save it as ca.cert.cer)\n.CER is the extension Windows expects for PEM (Base64) files\r\nWin+R, certmgr.msc\nSelect Trusted Root Certification Authorities/Certificates\nAll Tasks \u0026gt; Import\u0026hellip;\n\r\rPick the certificate (Browse\u0026hellip;)\n\r\rConfirm that we want to install in Trusted Root\n\r\rYes\n\r\rAnd it\u0026rsquo;s installed.\n\r\rhosts file Now we need to put the same information in the hosts file because we still don\u0026rsquo;t have DNS:\nOpen Notepad as Administrator (right-click on Notepad, Run as administrator)\n\r\rOpen the %SystemRoot%\\System32\\drivers\\etc\\hosts file\nPaste:\n#tjs.lan\r192.168.1.70\tserver.tjs.lan server\r192.168.1.70\tocsp.tjs.lan\tocsp\r192.168.1.77\twww.tjs.lan www\r\r\r\rSave the file and close Notepad.\nOpening our site on IE Now we can test if IE checks whether the InterCA that signed the certificate of our site was revoked:\nAnd the answer is yes, Internet Explorer queries and respects an internal PKI, instead of just trusting the public PKI information used on the Internet at large.\n\r\r","description":"OpenSSL-based PKI: part 3 (Clients and Servers)","id":12,"section":"sec","tags":null,"title":"PKI OpenSSL (pt 3)","uri":"https://tiagojsilva.github.io/en/sec/pki/opensslpki_3/"},{"content":"Nutritional facts Don\u0026rsquo;t expect this site to have the usual content; I\u0026rsquo;ll hardly write the n-th article about installing Postfix or Arch Linux, configure a NextCloud instance or a VPN: not interesting, already done, adds no value. I\u0026rsquo;ll only do these kinds of thing if I stumble on HOWTOs so bad that\u0026rsquo;ll make me wonder if I\u0026rsquo;d do it a lot better.\nRight now I\u0026rsquo;m interested in exploring the MUSL world, Some very specific Linux distros, and the S6 init; I shouldn\u0026rsquo;t be shocked by the current state of the documentation and development of these systems, compared to the 50,000 articles on how to install Ubuntu (ballpark figures), but I am.\nI\u0026rsquo;ll look into Guix/NixOS, even if I think that\u0026rsquo;ll bring me closer to containers, which leave me ill-at-ease.\nI\u0026rsquo;ll keep doing what I can do with a desktop system without cloud resources, and a Network/Systems community course without a smidge of cloud curriculum, which is those obsolete things like virtualization and on-premises; I really want to learn how to create resilient systems (both storage and compute), but High-Availability is usually the cudgel used to convince companies that otherwise would be happy with the Community versions to pay up\u0026hellip;\nWhy? I\u0026rsquo;m attracted to third systems, who look at existing solutions, recognize flaws that those inside do not see, and propose an alternative; usually they fail, because who\u0026rsquo;s invested in the early systems only much later, if ever, realizes the same thing, and several years later makes a pale imitation of the potential of the third system, while the network effect in IT leads to there being ever one dominant system and an alternative, with no space for third systems.\nI prefer organization to chaos, the safe step to the jump into the void; I\u0026rsquo;m not an entrepreneur and I\u0026rsquo;ll never get rich.\nOn the contrary, I have had to lick my wounds several times\u0026hellip;\nLimitations As mentioned before, I\u0026rsquo;m currently doing another job outside IT, so my time is limited. Also limited are my resources, so I can\u0026rsquo;t go on a spree of courses and certifications, and I\u0026rsquo;ll resort as much as possible to free options, which means I\u0026rsquo;ll most likely not have content about the big names. But I hope that what I learn with the small fish lights the path for the big ones\u0026hellip;\n","description":"What to do? What to do?","id":13,"section":"blog","tags":null,"title":"Manifesto","uri":"https://tiagojsilva.github.io/en/blog/2021-10-08_wat-do/"},{"content":"Like many other Free and Open Source Software projects, Vyos decided that it was going to continue to be free as in freedom but would stop being for free. To convince enterprise users to pay up and contribute to the project with monies, they decided that binaries compiled and distributed for installation as an ISO image would only be available to the public in unstable versions, meaning, nightly builds. The last pre-compiled stable version available is 1.1-8, and the most recent version may be in several states of stability, depending on where it is along the release process at that precise moment.\nThis has become more and more usual, most notably (and polemically) when CentOS went from being downstream from RHEL (stable) to upstream, having become the testing version of RHEL\u0026rsquo;s next point-upgrade.\nWant freebies? At least pay in bug reporting\u0026hellip;\r\nHowever, in the next few days there will be a golden opportunity to get a very stable version of Vyos because 1.3 (equuleus) is in Release Preview (at the moment only the first, 1.3-epa1).\nThere may be more Previews down the line, but the differences are expected to be minimal.\nFortunately, the original VYOS license demands free access to the source-code, and the project provides instructions, which seem fairly easy, to compile the stable LTS version directly from the source-code repository.\nWatch this space\u0026hellip;\r\nFor (at least) the last 18 months the keyboard layout configuration has been broken.\nNothing works: locale set-keymap, dpkg-reconfigure console-data, dpkg-reconfigure keyboard-configuration. Doesn\u0026rsquo;t show errors, but isn\u0026rsquo;t respected, and the layout is always ANSI en-US.\nThe \u0026ldquo;fix\u0026rdquo;, if you could call it that, is to set up an interface\u0026rsquo;s IP address, turn the SSH service on and open an SSH session from a client with the correct keyboard layout installed.\nFOSS: always dying from paper cuts.\r\n","description":"Step right up, step right up!","id":14,"section":"blog","tags":null,"title":"Getch'or VyOS heaaar!!!","uri":"https://tiagojsilva.github.io/en/blog/2021-10-07_getchorvyoshear/"},{"content":"The workflow I use to make these articles is a jury-rigged hairball of a hack (did you expect anything else?)\nI start by writing in Microsoft Word, because I\u0026rsquo;m used to it and I have some content in Word format that I want to bring to the site.\nThen I convert the DOCX to MarkDown with Pandoc\npandoc -f docx -t gfm --wrap=none --extract-media images\\\u0026lt;section\u0026gt;\\\u0026lt;article\u0026gt; -o article.md .\\article.docx\rThe advantages of using Pandoc are many:\n Converts Bold, Italic and Bold-italic in the Markdown equivalents Converts links in the MarkDown equivalents without escaping reserved MarkDown characters. Keeps the document outline levels (Heading 1, Heading 2) as MarkDown heading levels, which builds the article\u0026rsquo;s Table Of Contents Extracts the images to a folder and inlines the link for the correct path; it also includes the alt text field\u0026rsquo;s content I set in Word, but I tend not to use it.  The .MD is opened in Notepad++ to:\n Remove the blank lines that are inserted between each line Search and Replace (shortcodes, paths with / and not \\, and others)  I create the article in Hugo:\nhugo new content\\pt\\\u0026lt;section\u0026gt;\\\u0026lt;article\u0026gt;.md\rThen I edit the FrontMatter and copy the text from Notepad++ to the new .MD\nThe images are copied to \u0026lt;site\u0026gt;/static/images/\u0026lt;section\u0026gt;/\u0026lt;article\u0026gt;/\nThe local Hugo is started:\nhugo server --buildFuture\rI make the necessary adjustments in VScode, where I have a workspace for the site.\nThe English translation is assisted by a VSCode extension, funkyremi.VScode Google Translate, where I put in the preferences that I want to always translate from Portuguese to English. I copy the file \u0026lt;article\u0026gt;.MD to the same place under \u0026lt;site\u0026gt;/content/en/, open it side-by-side with the Portuguese version (preferably on a second monitor, because it\u0026rsquo;s easy to confuse the two mid-translation), select the text I want to translate while avoiding technical terms, Alt-Shift-T and that\u0026rsquo;s it; it\u0026rsquo;s not perfect and lots of touching up is necessary, but it saves a lot of work.\n","description":"Producing content ain't easy, so any help is welcome...","id":15,"section":"blog","tags":null,"title":"Article Workflow","uri":"https://tiagojsilva.github.io/en/blog/2021-09-22_workflow/"},{"content":"At first I did not intend to enable comments, but since humans are social animals, I went to see if I could set up a system without having to hack too much.\nAt first I considered Disq.us, which comes with Hugo, but it has many issues.\nZdoc has Utteranc.es pre-configured, and it has the advantages of being limited to GitHub users (all good people) and to be statically stored on a repo.\nSetup I made a public repo just for the comments and installed the Utteranc.es app on it.\nAll I had to do then was go to config/params.toml, enable the commenting section and set the credentials:\n1 2 3 4 5  enableComment = true [utterances] # https://utteranc.es/ owner = \u0026#34;\u0026lt;GitHub Username\u0026gt;\u0026#34; # Your GitHub ID repo = \u0026#34;\u0026lt;utteranc.es repo name\u0026gt;\u0026#34; # The repo to store comments   And Zdoc automatically adds a comments field at the end of any articles.\nBlog But on blogposts, it doesn\u0026rsquo;t. To enable that, I had to manually edit the partial, by adding {{ partial \u0026quot;comments/comments.html\u0026quot; . }} in the correct place:\n1 2 3 4 5 6 7 8 9  \u0026lt;article id=\u0026#34;list-main\u0026#34; class=\u0026#34;{{ if $wideViewAsDefault }}lm{{ else }}m{{ end }}\u0026#34; data-dir=\u0026#34;{{ $.Param \u0026#34;languagedir\u0026#34; | default \u0026#34;ltr\u0026#34; }}\u0026#34;\u0026gt; {{ if $.Param \u0026#34;enableBlogBreadcrumb\u0026#34; }} {{ partial \u0026#34;main/component/breadcrumb.html\u0026#34; . }} {{ end }} {{ partial \u0026#34;main/sections/list-main.html\u0026#34; . }} {{ partial \u0026#34;main/component/pagination-single.html\u0026#34; . }} {{ partial \u0026#34;comments/comments.html\u0026#34; . }} \u0026lt;/article\u0026gt;   And that\u0026rsquo;s it!.\nUnfortunately, since it\u0026rsquo;s based on GitHub Issues and not on GitHub Discussions there\u0026rsquo;s no pre-moderation. So behave.\n","description":"Vox populi","id":16,"section":"blog","tags":null,"title":"Article comments","uri":"https://tiagojsilva.github.io/en/blog/2021-09-15_site-comments/"},{"content":"Zdoc has an \u0026ldquo;Updates\u0026rdquo; section, but the articles inside it were created by hand. Since I\u0026rsquo;m lazy (laziest person in the world right here) and I don\u0026rsquo;t like to do things by hand when they can be automated, I tried to get some way of producing a Site Index without handcrafting each page.\nIn WordPress and other dynamic platforms it\u0026rsquo;s dead easy, but on a static site like Hugo, all the proposed solutions involved plugins, NPM, Node.js, things I did not want to mess with (for now).\nFortunately, there\u0026rsquo;s a way of faking this functionality using an internal Hugo system, Taxonomies. Thankfully, I do not use Taxonomies for anything else, but I don\u0026rsquo;t know at the moment if doing this will prevent other uses for them.\nI added this to config.toml\n1 2 3 4 5 6 7  [taxonomies] year = \u0026#34;year\u0026#34; month = \u0026#34;month\u0026#34; [permalinks] year = \u0026#34;updates/:slug/\u0026#34; month = \u0026#34;updates/:slug/\u0026#34;   This automatically adds pages site/updates/year e pages site/updates/year/month, filled with the :slug of all pages that have these values in the variables year:  and month: that we can now start placing on the frontmatter of each page, like this:\n1 2 3 4 5 6 7  ---title:\u0026#34;The Updates section\u0026#34;description:\u0026#34;Hacking until the tree falls off...\u0026#34;[...]year:[\u0026#34;2021\u0026#34;]month:[\u0026#34;2021/09\u0026#34;]---  To generate these fields automatically when you create an article or post with hugo new, I added the following to the frontmatter of the archetypes archetypes/blog/post.md and  archetypes/default.md:\nyear: [\u0026quot;{{ now.Format \u0026quot;2006\u0026quot; }}\u0026quot;]\rmonth: [\u0026quot;{{ now.Format \u0026quot;2006/01\u0026quot; }}\u0026quot;]\rAnd to prevent these pages from being formatted like they were part of the Blog section (which is the default configuration for Taxonomies), I changed the following in layouts/_default/taxonomy.html\n1 2 3 4 5 6 7  \u0026lt;div class=\u0026#34;top\u0026#34;\u0026gt; \u0026lt;header class=\u0026#34;header__wrapper bgcolor__header\u0026#34;\u0026gt; {{ with .Site.GetPage \u0026#34;section\u0026#34; \u0026#34;blog\u0026#34; }} {{ if eq .Params.blogHeaderType \u0026#34;img\u0026#34; }} \u0026lt;!-- {{ partial \u0026#34;header/blog-header.html\u0026#34; . }} --\u0026gt; {{ partial \u0026#34;header/custom-header.html\u0026#34; . }} {{ else }}   Zdoc\u0026rsquo;s layouts/partials/header/custom-header.html is empty; if you want something else, you can edit it or make a new one. Just remember that as it is, it will be applied to all Taxonomies.\nThen all I had to do was make static links in the content/\u0026lt;lang\u0026gt;/updates/_index.md page to the auto-generated pages:\n1 2 3  Updates [2021](/en/updates/2021) - [August](/en/updates/2021/08)   Yes, I still have to create these links by hand, but the pages behind the links are created without forcing me to put each post there one by one.\nThat\u0026rsquo;s progress!\nSources:\nhttps://discourse.gohugo.io/t/how-to-generate-chronological-blog-archives-in-hugo/13491/5\nhttps://discourse.gohugo.io/t/strugling-with-chronological-blog-archive/31963/2\nhttps://gohugo.io/templates/lists/\n","description":"Hacking until the tree falls off...","id":17,"section":"blog","tags":null,"title":"The Updates section","uri":"https://tiagojsilva.github.io/en/blog/2021-09-04_updates-page/"},{"content":"One thing that I don\u0026rsquo;t like about Zdoc is all the space taken by the sidebars, leaving little space on the center for the articles and leaving the images quite small (especially when they are widescreen screenshots).\nI don\u0026rsquo;t understand enough HTML to try to widen the central column (apart from the built-in arrow on top that widens the content column but hides the TOC), but I can try to make the images be shown larger when you click on them.\nBTW, why is there a wideViewAsDefault = true in config/params.toml but there\u0026rsquo;s no separate setting for the Blog? The Blog doesn\u0026rsquo;t have a sidebar, so that\u0026rsquo;s where the Wide View expands to, leaving the TOC alone. Wide View on the Blog would be for free\u0026hellip;\nSo I found this link and set up the Lightbox library.\nI downloaded the latest release and placed:\n lightbox.css em static/css/ lightbox.jsem static/js/\nAdded at the end of this file:  1 2 3  // ========= lightbox \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;/css/lightbox.css\u0026#34;\u0026gt; // ==================   Added before the \u0026lt;/body\u0026gt; tag on this file:\n1 2 3 4 5 6 7 8  \u0026lt;!-- lightbox--\u0026gt; \u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-3.4.1.min.js\u0026#34; integrity=\u0026#34;sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;/js/lightbox.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;/css/lightbox.css\u0026#34;\u0026gt; \u0026lt;!-- /lightbox --\u0026gt;   And created a lightbox shortcode, which accepts the same options as the figure shortcode it invokes:\n\r\rExpandir\r\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53  {{ if .Get \u0026#34;caption\u0026#34; }} {{ $.Scratch.Set \u0026#34;caption\u0026#34; (.Get \u0026#34;caption\u0026#34;) }} {{ else if .Get \u0026#34;alt\u0026#34; }} {{ $.Scratch.Set \u0026#34;caption\u0026#34; (.Get \u0026#34;alt\u0026#34;) }} {{ end }} \u0026lt;!-- resolve absolute image path --\u0026gt; {{ $permalink := $.Page.Permalink }} {{ $image := .Get \u0026#34;src\u0026#34; }} {{ $image_link_absolute := (findRE \u0026#34;^/\u0026#34; $image) }} \u0026lt;figure {{ with .Get \u0026#34;class\u0026#34; }}class=\u0026#34;{{.}}\u0026#34;{{ end }} {{ with .Get \u0026#34;width\u0026#34; }}style=\u0026#34;width: {{ . }};\u0026#34;{{ end }} {{ with .Get \u0026#34;height\u0026#34; }}style=\u0026#34;height: {{ . }};\u0026#34;{{ end }} \u0026gt; \u0026lt;a {{ if .Get \u0026#34;lightbox\u0026#34; }} data-lightbox=\u0026#34;{{ .Get \u0026#34;lightbox\u0026#34; | markdownify | plainify }}\u0026#34; {{ else }} data-lightbox=\u0026#34;image-{{ $image }}\u0026#34; {{ end }} {{ if $image_link_absolute }} href=\u0026#34;{{ $image | absURL }}\u0026#34; {{ else }} href=\u0026#34;{{ (printf \u0026#34;%s%s\u0026#34; $permalink $image) }}\u0026#34; {{ end }} {{ with .Get \u0026#34;target\u0026#34; }} target=\u0026#34;{{ . }}\u0026#34;{{ end }} {{ with .Get \u0026#34;rel\u0026#34; }} rel=\u0026#34;{{ . }}\u0026#34;{{ end }}\u0026gt; \u0026lt;img {{ if $image_link_absolute }} src=\u0026#34;{{ $image | absURL }}\u0026#34; {{ else }} src=\u0026#34;{{ (printf \u0026#34;%s%s\u0026#34; $permalink $image) }}\u0026#34; {{ end }} {{ if .Get \u0026#34;alt\u0026#34; }}alt=\u0026#34;{{ .Get \u0026#34;alt\u0026#34; | markdownify | plainify }}\u0026#34; {{ else if .Get \u0026#34;caption\u0026#34; }}alt=\u0026#34;{{ .Get \u0026#34;caption\u0026#34; | markdownify | plainify }}\u0026#34; {{ end }} {{ with .Get \u0026#34;align\u0026#34; }}align=\u0026#34;{{ . }}\u0026#34;{{ end }} /\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;!-- caption and attr--\u0026gt; {{ if ($.Scratch.Get \u0026#34;caption\u0026#34;) }} \u0026lt;figcaption\u0026gt; \u0026lt;span class=\u0026#34;img--caption\u0026#34;\u0026gt; Figure {{ $.Page.Scratch.Get \u0026#34;fig\u0026#34; }}. {{ $.Scratch.Get \u0026#34;caption\u0026#34; | markdownify | plainify }} {{ if .Get \u0026#34;attr\u0026#34; }} [{{- with .Get \u0026#34;attrlink\u0026#34;}}\u0026lt;a href=\u0026#34;{{ . }}\u0026#34;\u0026gt;{{ end }}{{ .Get \u0026#34;attr\u0026#34; | markdownify }}{{ if .Get \u0026#34;attrlink\u0026#34;}}\u0026lt;/a\u0026gt;{{ end -}}] {{ end }} \u0026lt;/span\u0026gt; \u0026lt;/figcaption\u0026gt; {{ end }} \u0026lt;/figure\u0026gt; {{ .Page.Scratch.Add \u0026#34;fig\u0026#34; 1 }} {{ $.Scratch.Delete \u0026#34;caption\u0026#34;}}   \r\r\nAnd that\u0026rsquo;s it, I got the lightbox effect going on!\nClick on the image below to see it working:\n\r\r","description":"Seeing if it sticks...","id":18,"section":"blog","tags":null,"title":"Achievement unlocked: Lightbox","uri":"https://tiagojsilva.github.io/en/blog/2021-09-02_lightbox/"},{"content":"I\u0026rsquo;ve been messing about some things behind the curtains:\nTheme changes I wanted to use a Hugo theme for documentation (structured documents), if possible with an associated blog for less structured content.\nMy wishlist was (in no particular order):\n Light / dark theme Multilanguage (i18n) Several independent sections Ability to include in the code boxes not only line numbers but also prompts outside of the text, so that they were ignored when copying the contents of the box Have command output boxes with distinct formatting  I only found this theme, Zdoc, that had most of it (Docz seems to be shaping up as an alternative), but it still lacks a lot:\n Doesn\u0026rsquo;t support command output boxes Only includes the prompts $ and \u0026gt; (and I also needed #, PS andPS#) Could not insert external configuration files inline with the page text Doesn\u0026rsquo;t have a button to copy the contents of a code box  By the way, no single Hugo theme has all these features\nCommand output I solved this with a shortcode and inline CSS formatting\n1 2  \u0026lt;pre style=\u0026#34;font-style: italic; font-size: 0.79rem\u0026#34;\u0026gt; {{.Inner}}\u0026lt;/pre\u0026gt;   Output...\r Prompts for root, PowerShell and PowerShell admin Not something to be overly proud of, the original code was drop-dead easy to copy-paste and fiddle with some values:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  var hashCodeElem = document.querySelectorAll(\u0026#39;div.language-\\\\#\u0026#39;); hashCodeElem ? hashCodeElem.forEach(function(elem) { var lnts = elem.parentNode.parentNode ? elem.parentNode.parentNode.querySelectorAll(\u0026#39;.lnt\u0026#39;) : null; lnts ? lnts.forEach(function(lnt) { lnt.innerHTML = \u0026#39;#\u0026lt;br/\u0026gt;\u0026#39;; }) : null; }) : null; var psCodeElem = document.querySelectorAll(\u0026#39;div.language-\\\\ps\u0026#39;); psCodeElem ? psCodeElem.forEach(function(elem) { var lnts = elem.parentNode.parentNode ? elem.parentNode.parentNode.querySelectorAll(\u0026#39;.lnt\u0026#39;) : null; lnts ? lnts.forEach(function(lnt) { lnt.innerHTML = \u0026#39;PS\u0026gt;\u0026lt;br/\u0026gt;\u0026#39;; }) : null; }) : null; var psadmCodeElem = document.querySelectorAll(\u0026#39;div.language-\\\\psa\u0026#39;); psadmCodeElem ? psadmCodeElem.forEach(function(elem) { var lnts = elem.parentNode.parentNode ? elem.parentNode.parentNode.querySelectorAll(\u0026#39;.lnt\u0026#39;) : null; lnts ? lnts.forEach(function(lnt) { lnt.innerHTML = \u0026#39;PS#\u0026lt;br/\u0026gt;\u0026#39;; }) : null; }) : null;   1  rm -rf /   1  Stop-Computer   1  Stop-Computer -Computer DC01   Insert external text files I could not get what I wanted but I\u0026rsquo;ve made do with:\n A shortcode to read an external file and put it inside a Code Fence:  1 2 3 4  \u0026lt;!--https://stackoverflow.com/a/45421343--\u0026gt; {{ $file := .Get \u0026#34;file\u0026#34; | readFile }} {{ $lang := .Get \u0026#34;language\u0026#34; }} {{ (print \u0026#34;```\u0026#34; $lang \u0026#34;\\n\u0026#34; $file \u0026#34;\\n```\u0026#34;) | markdownify }}    Placed inside an expand shortcode (included with Zdocs) to create a dropdown Which is preceded by a link to download the file.\nAll these shenanigans were needed because of the next problem.  Copying code blocks I could not get around this. Because of the processing that the theme does to code fences to insert the prompts, all the code I found to do this fails because it tries to copy the text from the wrong place or puts the Copy button on the wrong place.\nAnd since CINEL, bless their hearts, did not teach me CSS or DOM structure (the first year in which they stopped teaching this in my specific course), I\u0026rsquo;m a bit lost because I still haven\u0026rsquo;t grokked it.\nTitle font change The original title font of the theme was Montserrat, which was graphically very interesting, but I found that in the Black-900 weight that was being used it unbalanced the page and made reading difficult (so, too much interesting\u0026hellip;).\nI changed it to the font MPlus.\nContent Developing content to put here has been harder than I thought (also, I have a day job now). Most of what I had ready was developed as part of my Net/Sysadmin training, and I can\u0026rsquo;t very well publish it and solve everything for the new students that come through!\nI\u0026rsquo;m trying to filter the most advanced stuff that was icing on my projects and that won\u0026rsquo;t sell the farm.\nMeanwhile, I\u0026rsquo;m preparing a series of articles on Public Key Infrastructure\nKeep in touch.\nSchedule I\u0026rsquo;m going to stagger the content; each article will appear first on the Portuguese side of the site, and the following week a translated version will appear on the English side (along with a debugged Portuguese version).\nI\u0026rsquo;m aiming to publish new articles every other week\n","description":"Theme changes, content additions, etc.","id":19,"section":"blog","tags":null,"title":"August 2021 Update","uri":"https://tiagojsilva.github.io/en/blog/2021-08-28_site-update/"},{"content":"Linux Dotfiles I\u0026rsquo;ve been gathering settings that make my life easier by solving little nagging problems and papercuts.\nPublishing those files here allows me to download them wherever I create a new user account.\nThe URL for downloading will be https://tiagojsilva.github.io/unix/dotfiles/file\nThere\u0026rsquo;s a TAR archive of all the files, which you can install right in your home folder (~) with:\n1  wget -O- https://tiagojsilva.github.io/unix/dotfiles/dotfiles.tar | tar -xvf- -C ~   .bashrc \r\rExpand\r\r# ~/.bashrc: executed by bash(1) for non-login shells. # see /usr/share/doc/bash/examples/startup-files (in the package bash-doc) # for examples # If not running interactively, don't do anything case $- in *i*) ;; *) return;; esac # don't put duplicate lines or lines starting with space in the history. # See bash(1) for more options HISTCONTROL=ignoreboth # append to the history file, don't overwrite it shopt -s histappend # for setting history length see HISTSIZE and HISTFILESIZE in bash(1) HISTSIZE=1000 HISTFILESIZE=2000 # check the window size after each command and, if necessary, # update the values of LINES and COLUMNS. shopt -s checkwinsize # If set, the pattern \u0026quot;**\u0026quot; used in a pathname expansion context will # match all files and zero or more directories and subdirectories. shopt -s globstar # make less more friendly for non-text input files, see lesspipe(1) [ -x /usr/bin/lesspipe ] \u0026amp;\u0026amp; eval \u0026quot;$(SHELL=/bin/sh lesspipe)\u0026quot; # set variable identifying the chroot you work in (used in the prompt below) if [ -z \u0026quot;${debian_chroot:-}\u0026quot; ] \u0026amp;\u0026amp; [ -r /etc/debian_chroot ]; then debian_chroot=$(cat /etc/debian_chroot) fi # set a fancy prompt (non-color, unless we know we \u0026quot;want\u0026quot; color) case \u0026quot;$TERM\u0026quot; in xterm-color|*-256color) color_prompt=yes;; esac # uncomment for a colored prompt, if the terminal has the capability; turned # off by default to not distract the user: the focus in a terminal window # should be on the output of commands, not on the prompt #force_color_prompt=yes if [ -n \u0026quot;$force_color_prompt\u0026quot; ]; then if [ -x /usr/bin/tput ] \u0026amp;\u0026amp; tput setaf 1 \u0026gt;\u0026amp;/dev/null; then # We have color support; assume it's compliant with Ecma-48 # (ISO/IEC-6429). (Lack of such support is extremely rare, and such # a case would tend to support setf rather than setaf.) color_prompt=yes else color_prompt= fi fi if [ \u0026quot;$color_prompt\u0026quot; = yes ]; then PS1='${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ ' else PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ ' fi unset color_prompt force_color_prompt # If this is an xterm set the title to user@host:dir case \u0026quot;$TERM\u0026quot; in xterm*|rxvt*) PS1=\u0026quot;\\[\\e]0;${debian_chroot:+($debian_chroot)}\\u@\\h: \\w\\a\\]$PS1\u0026quot; ;; *) ;; esac # enable color support of ls and also add handy aliases if [ -x /usr/bin/dircolors ]; then #force my dircolors # test -r ~/.dircolors \u0026amp;\u0026amp; eval \u0026quot;$(dircolors -b ~/.dircolors)\u0026quot; || eval \u0026quot;$(dircolors -b)\u0026quot; source .dircolors alias ls='ls --color=auto' alias dir='dir --color=auto' #alias vdir='vdir --color=auto' alias grep='grep --color=auto' alias fgrep='fgrep --color=auto' alias egrep='egrep --color=auto' fi # colored GCC warnings and errors export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01' # some more ls aliases alias ll='ls -hlF' alias la='ls -hA' alias lla='ls -ahlF' alias l='ls -hCF' # Add an \u0026quot;alert\u0026quot; alias for long running commands. Use like so: # sleep 10; alert alias alert='notify-send --urgency=low -i \u0026quot;$([ $? = 0 ] \u0026amp;\u0026amp; echo terminal || echo error)\u0026quot; \u0026quot;$(history|tail -n1|sed -e '\\''s/^\\s*[0-9]\\+\\s*//;s/[;\u0026amp;|]\\s*alert$//'\\'')\u0026quot;' # Alias definitions. # You may want to put all your additions into a separate file like # ~/.bash_aliases, instead of adding them here directly. # See /usr/share/doc/bash-doc/examples in the bash-doc package. if [ -f ~/.bash_aliases ]; then . ~/.bash_aliases fi # enable programmable completion features (you don't need to enable # this, if it's already enabled in /etc/bash.bashrc and /etc/profile # sources /etc/bash.bashrc). if ! shopt -oq posix; then if [ -f /usr/share/bash-completion/bash_completion ]; then . /usr/share/bash-completion/bash_completion elif [ -f /etc/bash_completion ]; then . /etc/bash_completion fi fi \r\r .dircolors The same as Debian defaults, but replaces the Dark Blue for directories with Yellow.\n\r\rExpand\r\r1 2 3  export LS_COLORS=\u0026#39;rs=0:di=01;93:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:\u0026#39;; \n \r\r\n.bash_aliases \r\rExpand\r\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  alias ll=\u0026#39;ls -hlF\u0026#39; alias la=\u0026#39;ls -hA\u0026#39; alias lla=\u0026#39;ls -ahlF\u0026#39; alias cp=\u0026#39;cp -i\u0026#39; alias mv=\u0026#39;mv -i\u0026#39; alias rm=\u0026#39;rm -i --preserve-root\u0026#39; alias df=\u0026#39;df -H\u0026#39; alias du=\u0026#39;du -hs\u0026#39; alias wget=\u0026#39;wget -c\u0026#39; alias ports=\u0026#39;netstat -tulanp\u0026#39; alias cls=\u0026#39;clear\u0026#39; alias chown=\u0026#39;chown --preserve-root\u0026#39; alias chmod=\u0026#39;chmod --preserve-root\u0026#39; alias chgrp=\u0026#39;chgrp --preserve-root\u0026#39; alias srvno=\u0026#39;systemctl stop\u0026#39; alias sysno=\u0026#39;systemctl stop\u0026#39; alias srvgo=\u0026#39;systemctl start\u0026#39; alias sysgo=\u0026#39;systemctl start\u0026#39; alias srvsta=\u0026#39;systemctl start\u0026#39; alias syssta=\u0026#39;systemctl start\u0026#39; alias srvrst=\u0026#39;systemctl restart\u0026#39; alias sysrst=\u0026#39;systemctl restart\u0026#39; alias srvena=\u0026#39;systemctl enable\u0026#39; alias sysena=\u0026#39;systemctl enable\u0026#39; alias srvdis=\u0026#39;systemctl disable\u0026#39; alias sysdis=\u0026#39;systemctl disable\u0026#39; alias srvstat=\u0026#39;systemctl status\u0026#39; alias sysstat=\u0026#39;systemctl status\u0026#39; alias sudo=\u0026#39;sudo \u0026#39; \n \r\r .bash_functions \r\rExpand\r\r1 2 3 4  function mcd () { mkdir -vp -- \u0026#34;$1\u0026#34; \u0026amp;\u0026amp; cd -P -- \u0026#34;$1\u0026#34; }   \r\r .vimrc \r\rExpand\r\ru0026#34; MIT Missing Semester 2020 Lecture 3 Youtube\u0026#34; https://missing.csail.mit.edu/2020/editors/\u0026#34; Comments in Vimscript start with a `\u0026#34;`.\u0026#34; tjs: load defaultssource $VIMRUNTIME/defaults.vim\u0026#34; If you open this file in Vim, it\u0026#39;ll be syntax highlighted for you.\u0026#34; Vim is based on Vi. Setting `nocompatible` switches from the default\u0026#34; Vi-compatibility mode and enables useful Vim functionality. This\u0026#34; configuration option turns out not to be necessary for the file named\u0026#34; \u0026#39;~/.vimrc\u0026#39;, because Vim automatically enters nocompatible mode if that file\u0026#34; is present. But we\u0026#39;re including it here just in case this config file is\u0026#34; loaded some other way (e.g. saved as `foo`, and then Vim started with\u0026#34; `vim -u foo`).set nocompatible\u0026#34; Cores/temas\u0026#34;set termguicolorsset background=darkcolo industryif has(\u0026#34;gui running\u0026#34;) set guioptions-=T set guioptions+=e set t_Co=256 set guitablabel=%M\\ %t let g:gruvbox_termcolors=256 let g:gruvbox_contrast_dark=\u0026#39;medium\u0026#39; colorscheme gruvboxendif\u0026#34; Turn on syntax highlighting.syntax on\u0026#34; Disable the default Vim startup message.set shortmess+=I\u0026#34; Show line numbers.set number\u0026#34; This enables relative line numbering mode. With both number and\u0026#34; relativenumber enabled, the current line shows the true line number, while\u0026#34; all other lines (above and below) are numbered relative to the current line.\u0026#34; This is useful because you can tell, at a glance, what count is needed to\u0026#34; jump up or down to a particular line, by {count}k to go up or {count}j to go\u0026#34; down.\u0026#34;set relativenumber\u0026#34; Always show the status line at the bottom, even if you only have one window open.set laststatus=2\u0026#34; The backspace key has slightly unintuitive behavior by default. For example,\u0026#34; by default, you can\u0026#39;t backspace before the insertion point set with \u0026#39;i\u0026#39;.\u0026#34; This configuration makes backspace behave more reasonably, in that you can\u0026#34; backspace over anything.set backspace=indent,eol,start\u0026#34; By default, Vim doesn\u0026#39;t let you hide a buffer (i.e. have a buffer that isn\u0026#39;t\u0026#34; shown in any window) that has unsaved changes. This is to prevent you from \u0026#34;\u0026#34; forgetting about unsaved changes and then quitting e.g. via `:qa!`. We find\u0026#34; hidden buffers helpful enough to disable this protection. See `:help hidden`\u0026#34; for more information on this.set hidden\u0026#34; This setting makes search case-insensitive when all characters in the string\u0026#34; being searched are lowercase. However, the search becomes case-sensitive if\u0026#34; it contains any capital letters. This makes searching more convenient.set ignorecaseset smartcase\u0026#34; Enable searching as you type, rather than waiting till you press enter.set incsearch\u0026#34; Unbind some useless/annoying default key bindings.nmap Q \u0026lt;Nop\u0026gt; \u0026#34; \u0026#39;Q\u0026#39; in normal mode enters Ex mode. You almost never want this.\u0026#34; Disable audible bell because it\u0026#39;s annoying.set noerrorbells visualbell t_vb=\u0026#34; Enable mouse support. You should avoid relying on this too much, but it can\u0026#34; sometimes be convenient.set mouse+=a\u0026#34; Try to prevent bad habits like using the arrow keys for movement. This is\u0026#34; not the only possible bad habit. For example, holding down the h/j/k/l keys\u0026#34; for movement, rather than using more efficient movement commands, is also a\u0026#34; bad habit. The former is enforceable through a .vimrc, while we don\u0026#39;t know\u0026#34; how to prevent the latter.\u0026#34; Do this in normal mode...\u0026#34;nnoremap \u0026lt;Left\u0026gt; :echoe \u0026#34;Use h\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;nnoremap \u0026lt;Right\u0026gt; :echoe \u0026#34;Use l\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;nnoremap \u0026lt;Up\u0026gt; :echoe \u0026#34;Use k\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;nnoremap \u0026lt;Down\u0026gt; :echoe \u0026#34;Use j\u0026#34;\u0026lt;CR\u0026gt;\u0026#34; ...and in insert mode\u0026#34;inoremap \u0026lt;Left\u0026gt; \u0026lt;ESC\u0026gt;:echoe \u0026#34;Use h\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;inoremap \u0026lt;Right\u0026gt; \u0026lt;ESC\u0026gt;:echoe \u0026#34;Use l\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;inoremap \u0026lt;Up\u0026gt; \u0026lt;ESC\u0026gt;:echoe \u0026#34;Use k\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;inoremap \u0026lt;Down\u0026gt; \u0026lt;ESC\u0026gt;:echoe \u0026#34;Use j\u0026#34;\u0026lt;CR\u0026gt;\u0026#34; escrever 4 espaços quando se usa TABset expandtabset tabstop=4set shiftwidth=4set softtabstop=4\u0026#34; open new split panes to right and bottom, which feels more naturalset splitbelowset splitrightset showmatch \u0026#34; show matching braces when text indicator is over themfiletype plugin indent on \u0026#34; enable file type detectionset autoindent\u0026#34; leader passa a ser ,let mapleader = \u0026#34;,\u0026#34;\u0026#34; Permanent undoset undodir=~/.vimdidset undofile\u0026#34; Ctrl+c and Ctrl+j as Esc\u0026#34; Ctrl-j is a little awkward unfortunately:\u0026#34; https://github.com/neovim/neovim/issues/5916\u0026#34; So we also map Ctrl+kinoremap \u0026lt;C-j\u0026gt; \u0026lt;Esc\u0026gt;nnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;inoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;vnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;snoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;xnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;cnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;onoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;lnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;tnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;nnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;inoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;vnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;snoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;xnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;cnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;onoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;lnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;tnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;\u0026#34; Neat X clipboard integration\u0026#34; \\p will paste clipboard into buffer\u0026#34; \\c will copy entire buffer into clipboardnoremap \u0026lt;leader\u0026gt;p :read !xsel --clipboard --output\u0026lt;cr\u0026gt;noremap \u0026lt;leader\u0026gt;c :w !xsel -ib\u0026lt;cr\u0026gt;\u0026lt;cr\u0026gt;\u0026#34; turn off search highlightvnoremap \u0026lt;C-h\u0026gt; :nohlsearch\u0026lt;cr\u0026gt;nnoremap \u0026lt;C-h\u0026gt; :nohlsearch\u0026lt;cr\u0026gt;\u0026#34; statusline\u0026#34;cores\u0026#34;terminal BG azulhi statusline ctermfg=4 \u0026#34;terminal letras cyanhi statusline ctermbg=6 set statusline= \u0026#34; clear the statusline for when vimrc is reloadedset statusline+=%-3.3n\\ \u0026#34; buffer numberset statusline+=%f\\ \u0026#34; file nameset statusline+=%h%m%r%w \u0026#34; flagsset statusline+=[%{strlen(\u0026amp;ft)?\u0026amp;ft:\u0026#39;none\u0026#39;}, \u0026#34; filetypeset statusline+=%{strlen(\u0026amp;fenc)?\u0026amp;fenc:\u0026amp;enc}, \u0026#34; encodingset statusline+=%{\u0026amp;fileformat}] \u0026#34; file formatset statusline+=%= \u0026#34; right alignset statusline+=%{synIDattr(synID(line(\u0026#39;.\u0026#39;),col(\u0026#39;.\u0026#39;),1),\u0026#39;name\u0026#39;)}\\ \u0026#34; highlightset statusline+=%b,0x%-8B\\ \u0026#34; current charset statusline+=%-14.(%l,%c%V%)\\ %\u0026lt;%P \u0026#34; offset\u0026#34; Folding\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;set foldenable \u0026#34; enable foldingset foldlevelstart=10 \u0026#34; open most folds by defaultset foldnestmax=10 \u0026#34; 10 nested fold max\u0026#34; space open/closes folds\u0026#34; nnoremap \u0026lt;space\u0026gt; zaset foldmethod=indent \u0026#34; fold based on indent level\u0026#34; This is especially useful for me since I spend my days in Python.\u0026#34; Other acceptable values are marker, manual, expr, syntax, diff.\u0026#34; Run :help foldmethod to find out what each of those do.\u0026#34; Custom Functions\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34; toggle between number and relativenumber (\\t)function! ToggleNumber() if(\u0026amp;relativenumber == 1) set norelativenumber set number else set relativenumber endifendfuncnnoremap \u0026lt;leader\u0026gt;t :call ToggleNumber()\u0026lt;CR\u0026gt;\u0026#34; Vim Markdown\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;let g:markdown_fenced_languages = [ \\ \u0026#39;bash=sh\u0026#39;, \\ \u0026#39;c\u0026#39;, \\ \u0026#39;coffee\u0026#39;, \\ \u0026#39;erb=eruby\u0026#39;, \\ \u0026#39;javascript\u0026#39;, \\ \u0026#39;json\u0026#39;, \\ \u0026#39;perl\u0026#39;, \\ \u0026#39;python\u0026#39;, \\ \u0026#39;ruby\u0026#39;, \\ \u0026#39;yaml\u0026#39;, \\ \u0026#39;go\u0026#39;,\\]let g:vim_markdown_conceal = 2  \r\r .nanorc \r\rExpand\r\r## .nanorc tjs 2020-06 ## https://www.if-not-true-then-false.com/2009/tuning-nano-text-editor-with-nanorc/ # scroll by line set smooth # indent set autoindent # easy backup (ficheiro~) set backup # one line more for content set morespace # hide shortcut help # set nohelp # tab 4 spaces set tabsize 4 # convert tabs to spaces on insertion set tabstospaces ########## #sintax ## Nanorc files include \u0026quot;/usr/share/nano/nanorc.nanorc\u0026quot; ## C/C++ include \u0026quot;/usr/share/nano/c.nanorc\u0026quot; ## HTML include \u0026quot;/usr/share/nano/html.nanorc\u0026quot; ## TeX include \u0026quot;/usr/share/nano/tex.nanorc\u0026quot; ## Quoted emails (under e.g. mutt) include \u0026quot;/usr/share/nano/mutt.nanorc\u0026quot; ## Patch files include \u0026quot;/usr/share/nano/patch.nanorc\u0026quot; ## Manpages include \u0026quot;/usr/share/nano/man.nanorc\u0026quot; ## Groff include \u0026quot;/usr/share/nano/groff.nanorc\u0026quot; ## Perl include \u0026quot;/usr/share/nano/perl.nanorc\u0026quot; ## Python include \u0026quot;/usr/share/nano/python.nanorc\u0026quot; ## Ruby include \u0026quot;/usr/share/nano/ruby.nanorc\u0026quot; ## Java include \u0026quot;/usr/share/nano/java.nanorc\u0026quot; ## Assembler include \u0026quot;/usr/share/nano/asm.nanorc\u0026quot; ## Bourne shell scripts include \u0026quot;/usr/share/nano/sh.nanorc\u0026quot; ## POV-Ray include \u0026quot;/usr/share/nano/pov.nanorc\u0026quot; \r\r .tmux.conf The shortcut key becomes Ctrl-A (a lot more sensible, especially if you swap CapsLock to Ctrl), but because it collides with shell navigation you have to hold Ctrl and key A two times.\r\n\r\rExpand\r\r#### #Keybindings #### # remap prefix from 'C-b' to 'C-a' # interfere com o \u0026quot;inicio de linha\u0026quot; na shell, passa a ser C-a+C-a unbind C-b set-option -g prefix C-a bind-key C-a send-prefix # split panes using | and - bind | split-window -h bind - split-window -v unbind '\u0026quot;' unbind % # reload config file (change file location to your the tmux.conf you want to use) bind r source-file ~/.tmux.conf # switch panes using Alt-arrow without prefix bind -n M-Left select-pane -L bind -n M-Right select-pane -R bind -n M-Up select-pane -U bind -n M-Down select-pane -D # Enable mouse mode (tmux 2.1 and above) set -g mouse on ###################### ### DESIGN CHANGES ### ###################### # loud or quiet? set -g visual-activity off set -g visual-bell off set -g visual-silence off setw -g monitor-activity off set -g bell-action none # modes setw -g clock-mode-colour colour5 setw -g mode-style 'fg=colour1 bg=colour18 bold' # panes set -g pane-border-style 'fg=colour19 bg=colour0' set -g pane-active-border-style 'bg=colour0 fg=colour9' # statusbar set -g status-position bottom set -g status-justify left #set -g status-style 'bg=colour18 fg=colour137 dim' set -g status-style 'bg=blue fg=colour240' set -g status-left '' set -g status-right '#[fg=colour253,bg=colour19] %d/%m #[fg=colour253,bg=colour8] %H:%M:%S ' set -g status-right-length 50 set -g status-left-length 20 #setw -g window-status-current-style 'fg=colour1 bg=colour19 bold' setw -g window-status-current-style 'fg=brightblue bg=cyan' #setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F ' setw -g window-status-current-format ' #I#[fg=white]:#[fg=colour255]#W#[fg=black]#F ' setw -g window-status-style 'fg=colour9 bg=colour18' #setw -g window-status-style 'fg=brightred bg=brightgreen' #setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F ' setw -g window-status-format ' #I#[fg=red]:#[fg=green]#W#[fg=blue]#F ' setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold' #setw -g window-status-bell-style 'fg=red bg=white bold' # messages #set -g message-style 'fg=colour232 bg=colour16 bold' set -g message-style 'fg=white bg=red bold'  \r\n","description":"Unix/Linux dotfiles","id":20,"section":"unixlike","tags":null,"title":"Dotfiles","uri":"https://tiagojsilva.github.io/en/unixlike/dotfiles/"},{"content":"Sit down and take a load off.\nI have been fortunate to make professions of my passions; as a young\u0026rsquo;un, I had to choose one of them (Sound for Picture), but the swings and roundabouts of life led me to embrace another one, which is IT. By the end of it I ended up back where I had started, but I don\u0026rsquo;t consider it wasted time; I had wonderful teachers and colleagues, and learned a lot of stuff that I had always wanted to know.\nSo, because the monster has been awakened and I don\u0026rsquo;t want to forget everything, I decided to make this site to compile and share what I\u0026rsquo;ve been learning.\nAnd if happens to help someone else, I\u0026rsquo;m happy for it.\nWhen I finished the CET-GRSI course (Network and Systems Administration Technician) at CINEL, in 2020, I stumbled upon this video that inspired me about where to go next:\n\rWhich is really basic stuff: keep moving forward, document thoroughly, keep your ear to the ground.\nOne piece of advice has already been followed: creating a personal static website.\nIt\u0026rsquo;s right here. Welcome.\n","description":"We've got to start somewhere!","id":21,"section":"blog","tags":null,"title":"Hello World","uri":"https://tiagojsilva.github.io/en/blog/2021-08-09_hello-world/"}]