[{"content":"OpenSSL-based PKI (part 1) Sources:\nhttps://openssl-ca.readthedocs.io/en/latest/index.html\nhttps://www.golinuxcloud.com/tutorial-pki-certificates-authority-ocsp/\nhttps://social.technet.microsoft.com/wiki/contents/articles/2900.offline-root-certification-authority-ca.aspx\nhttps://pki-tutorial.readthedocs.io/en/latest/index.html\nAn airgapped Root CA The system that contains the RootCA is supposed to be airgapped, to be under controlled access, and to be used only for the emission of new CAs and revocation of compromised CAs. In this example, we can put everything on the same server, but one should try to separate the RootCA from the other CAs as much as possible.\nThe first step is to create a Root Certification Authority (RootCA), which will only create other CAs.\nSwitch to the root user:\n1 2 3 4 5 6 7  mkdir /root/ca \u0026amp;\u0026amp; cd $_ mkdir /root/ca/{certs,crl,newcerts,private} chmod 700 /root/ca/private touch /root/ca/index.txt echo 1000 \u0026gt; /root/ca/serial echo 1000 \u0026gt; /root/ca/crlnumber cat \u0026gt; /root/ca/openssl.cnf   /root/ca/openssl.cnf\n\r\rExpand\r\r# OpenSSL root CA configuration file.\r# Copy to '/root/ca/openssl.cnf.\r[ ca ]\r# 'man ca'\rdefault_ca = CA_default\r[ CA_default ]\r# Directory and file locations.\rdir = /root/ca\rcerts = $dir/certs\rcrl_dir = $dir/crl\rnew_certs_dir = $dir/newcerts\rdatabase = $dir/index.txt\rserial = $dir/serial\rRANDFILE = $dir/private/.rand\r# The root key and root certificate.\rprivate_key = $dir/private/ca.key.pem\rcertificate = $dir/certs/ca.cert.pem\r# For certificate revocation lists.\rcrlnumber = $dir/crlnumber\rcrl = $dir/crl/ca.crl.pem\rcrl_extensions = crl_ext\rdefault_crl_days = 385\r# SHA-1 is deprecated, so use SHA-2 instead.\rdefault_md = sha512\rname_opt = ca_default\rcert_opt = ca_default\rdefault_days = 375\rpreserve = no\rpolicy = policy_strict\r[ policy_strict ]\r# The root CA should only sign intermediate certificates that match.\r# See the POLICY FORMAT section of 'man ca'.\rcountryName = match\rstateOrProvinceName = match\rorganizationName = match\rorganizationalUnitName = optional\rcommonName = supplied\remailAddress = optional\r[ policy_loose ]\r# Allow the intermediate CA to sign a more diverse range of certificates.\r# See the POLICY FORMAT section of the 'ca' man page.\rcountryName = optional\rstateOrProvinceName = optional\rlocalityName = optional\rorganizationName = optional\rorganizationalUnitName = optional\rcommonName = supplied\remailAddress = optional\r[ req ]\r# Options for the 'req' tool ('man req').\rdefault_bits = 4096\rdistinguished_name = req_distinguished_name\rstring_mask = utf8only\r# SHA-1 is deprecated, so use SHA-2 instead.\rdefault_md = sha512\r# Extension to add when the -x509 option is used.\rx509_extensions = v3_ca\r[ req_distinguished_name ]\r# See \u0026lt;https://en.wikipedia.org/wiki/Certificate_signing_request\u0026gt;.\rcountryName = Country Name (2 letter code)\rstateOrProvinceName = State or Province Name\rlocalityName = Locality Name\r0.organizationName = Organization Name\rorganizationalUnitName = Organizational Unit Name\rcommonName = Common Name\remailAddress = Email Address\r# Optionally, specify some defaults.\rcountryName_default = PT\rstateOrProvinceName_default = Lisboa\rlocalityName_default = Lisboa\r0.organizationName_default = TiagoJoaoSilva\rorganizationalUnitName_default = TJS\remailAddress_default = bofh@tjs.lan\r[ v3_ca ]\r# Extensions for a typical CA ('man x509v3_config').\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid:always,issuer\rbasicConstraints = critical, CA:true\rkeyUsage = critical, digitalSignature, cRLSign, keyCertSign\r[ v3_intermediate_ca ]\r# Extensions for a typical intermediate CA ('man x509v3_config').\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid:always,issuer\rbasicConstraints = critical, CA:true, pathlen:0\rkeyUsage = critical, digitalSignature, cRLSign, keyCertSign\r[ usr_cert ]\r# Extensions for client certificates ('man x509v3_config').\rbasicConstraints = CA:FALSE\rnsCertType = client, email\rnsComment = \u0026quot;OpenSSL Generated Client Certificate\u0026quot;\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer\rkeyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment\rextendedKeyUsage = clientAuth, emailProtection\r[ server_cert ]\r# Extensions for server certificates ('man x509v3_config').\rbasicConstraints = CA:FALSE\rnsCertType = server\rnsComment = \u0026quot;OpenSSL Generated Server Certificate\u0026quot;\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer:always\rkeyUsage = critical, digitalSignature, keyEncipherment\rextendedKeyUsage = serverAuth\r[ crl_ext ]\r# Extension for CRLs ('man x509v3_config').\rauthorityKeyIdentifier=keyid:always\r[ ocsp ]\r# Extension for OCSP signing certificates ('man ocsp').\rbasicConstraints = CA:FALSE\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer\rkeyUsage = critical, digitalSignature\rextendedKeyUsage = critical, OCSPSigning\r\r\r\nWe create a random complex password:\n1 2 3  openssl rand -base64 12 \u0026gt; /root/ca/private/ca.key.pass chmod 400 /root/ca/private/ca.key.pass cat /root/ca/private/ca.key.pass   ayUiXnIjZFRh\r\nWe create the key and provide the complex password:\n1 2  openssl genrsa -aes256 -passout file:/root/ca/private/ca.key.pass \\ -out /root/ca/private/ca.key.pem 8192   Generating RSA private key, 8192 bit long modulus (2 primes)\r......................................................+++\r..+++\re is 65537 (0x010001)\r\nThen we create (and self-sign) the RootCA certificate:\n1 2 3 4 5 6  chmod 400 /root/ca/private/ca.key.pem openssl req -config /root/ca/openssl.cnf \\ -passin file:/root/ca/private/ca.key.pass \\ -key /root/ca/private/ca.key.pem \\ -new -x509 -days 7300 -sha512 -extensions v3_ca \\ -out /root/ca/certs/ca.cert.pem   You are about to be asked to enter information that will be incorporated\rinto your certificate request.\rWhat you are about to enter is what is called a Distinguished Name or a DN.\rThere are quite a few fields but you can leave some blank\rFor some fields there will be a default value,\rIf you enter '.', the field will be left blank.\r-----\rCountry Name (2 letter code) [PT]:\rState or Province Name [Lisboa]:\rLocality Name [Lisboa]:\rOrganization Name [TiagoJoaoSilva]:\rOrganizational Unit Name [TJS]:\rCommon Name []:ca-tjs-1\rEmail Address [bofh@tjs.lan]:\r 1  chmod 444 /root/ca/certs/ca.cert.pem   We can check the certificate\u0026rsquo;s contents:\n1  openssl x509 -noout -text -in /root/ca/certs/ca.cert.pem   Certificate:\rData:\rVersion: 3 (0x2)\rSerial Number:\r25:92:4d:14:da:6f:9f:8b:4b:49:55:fc:68:be:9e:c7:57:24:cd:70\rSignature Algorithm: sha512WithRSAEncryption\rIssuer: C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\rValidity\rNot Before: Aug 12 19:38:30 2021 GMT\rNot After : Aug 7 19:38:30 2041 GMT\rSubject: C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\rSubject Public Key Info:\rPublic Key Algorithm: rsaEncryption\rRSA Public-Key: (8192 bit)\rModulus: [...]\rExponent: 65537 (0x10001)\rX509v3 extensions:\rX509v3 Subject Key Identifier:\r01:F2:CC:54:E0:F2:58:AC:E2:14:8E:2B:DB:6D:B6:FF:5C:25:41:A0\rX509v3 Authority Key Identifier:\rkeyid:01:F2:CC:54:E0:F2:58:AC:E2:14:8E:2B:DB:6D:B6:FF:5C:25:41:A0\rX509v3 Basic Constraints: critical\rCA:TRUE\rX509v3 Key Usage: critical\rDigital Signature, Certificate Sign, CRL Sign\rSignature Algorithm: sha512WithRSAEncryption\r[...]\r Certificate Revocation Before we go any further, I think we have to talk right now about the revocation of certificates, unlike all other Internet tutorials which leave it until the end, if at all; if we do not configure Certificate Revocation now, it will be too late to be included in any certificate created by our RootCA.\nHow to revoke a certificate 1 2 3 4 5 6  stamp=$(date +%F_%T) mv /root/ca/inter-ca/certs/example-ca.cert.pem{,-revoked_$stamp} openssl ca -config /root/ca/openssl.cnf \\ -passin file:/root/ca/private/ca.key.pass \\ -revoke /root/ca/inter-ca/certs/example-ca.cert.pem-revoked_$stamp \\ -crl_reason unspecified   -crl_reason can also have the values keyCompromise, CACompromise, affiliationChanged, superseded, cessationOfOperation, certificateHold, or (for Delta-CRLs only) removeFromCRL\n-crl_hold automatically places the reason as certificateHold but that\u0026rsquo;s outside the scope of this document\n-crl_compromise AAAAMMDDHHMMSSZ sets the reason as keyCompromise on the suppied date.\n-crl_CA_compromise AAAAMMDDHHMMSSZ does the same, but the reason is CACompromise\nWe need to set up a mechanism for the RootCA to disseminate the information of the revoked certificates, and this needs to be done before creating any subsequent certificate, by adding information to the RootCA\u0026rsquo;s openssl.cnf before de creating any certificate (up to and including other CAs).\nCRL distribution The classic method is the direct distribution of the CRL lists, which can be done by various means, such as an HTTP server, an LDAP or AD directory, etc.; there may still be an additional complication because to avoid the constant transmission of large files you can use Delta-CRLs containing only the changes to the CRL, but while these can be implemented in Windows or other PKI packages, they are not available on OpenSSL.\nThese lists are usually updated (because they expire and all CA certificates are no longer accepted) at a maximum of every 30 days, but the RootCA\u0026rsquo;s CRL list should not expire (or expire only annually when it is time to update the system that hosts the RootCA).\n[CA_default]\rdefault_crl_days = 385\rAt that time, the CRL is refreshed and (in the case of an airgapped RootCA system) extracted on paper, QR Code, CD-R or other safe medium, then taken to the system from where it will be distributed.\nThe distribution format of these lists is DER (binary coding), but the file must have a .CRL extension (RFC 2585).\nThe other method, more recommended these days, is using an OCSP Responder to answer queries about the validity of a certificate interactively, which is a quick operation that does not require much bandwidth, certifies the revocation by signing it with a key from the originator CA, and that answer can be cached on the clients (through OCSP Stapling).\nAs the RootCA\u0026rsquo;s CRL will contain very few certificates (the RootCA will only issue other CAs, called IntermediateCAs, SubordinateCAs ou\nSigningCAs, which won\u0026rsquo;t be many), let\u0026rsquo;s set up a CRLDistribution package for the RootCA.\nWe begin by putting the information from where the CRL will be served on the [ v3_intermediate_ca ] section of /root/ca/openssl.cnf, to be\nIncluded in any certificates issued by the RootCA. We will use an HTTP server on port 7788:\n[ v3_intermediate_ca ]\rcrlDistributionPoints = URI:http://server.tjs.lan:7788/root-ca.crl\rWe create the CRL (https://blog.didierstevens.com/2013/05/08/howto-make-your-own-cert-and-revocation-list-with-openssl/)\n1 2 3 4  openssl ca -config /root/ca/openssl.cnf -gencrl \\ -passin file:/root/ca/private/ca.key.pass \\ -keyfile /root/ca/private/ca.key.pem -cert /root/ca/certs/ca.cert.pem \\ -out /root/ca/crl/ca.crl.pem   We verify the contents of the CRL:\n1  openssl crl -in /root/ca/crl/ca.crl.pem -noout -text   Certificate Revocation List (CRL):\rVersion 2 (0x1)\rSignature Algorithm: sha512WithRSAEncryption\rIssuer: C = PT, ST = Lisboa, L = Lisboa, O = TiagoJoaoSilva, OU = TJS, CN = ca-tjs-1, emailAddress = bofh@tjs.lan\rLast Update: Aug 13 23:46:07 2021 GMT\rNext Update: Sep 2 23:46:07 2022 GMT\rCRL extensions:\rX509v3 Authority Key Identifier:\rkeyid:01:F2:CC:54:E0:F2:58:AC:E2:14:8E:2B:DB:6D:B6:FF:5C:25:41:A0\rX509v3 CRL Number:\r4097\rRevoked Certificates:\rSerial Number: 1001\rRevocation Date: Aug 13 22:11:25 2021 GMT\rCRL entry extensions:\rX509v3 CRL Reason Code:\rUnspecified\rSerial Number: 1002\rRevocation Date: Aug 13 23:41:51 2021 GMT\rCRL entry extensions:\rX509v3 CRL Reason Code:\rSuperseded\rSignature Algorithm: sha512WithRSAEncryption [...]\r\nAnd we need to convert the PEM (Base64) into DER format:\n1 2  # openssl crl -inform PEM -in /root/ca/crl/ca.crl.pem \\ -outform DER -out /root/ca/crl/root-ca.crl   Network-connected system Since the RootCA should be airgapped and offline, it is not on the RootCA\u0026rsquo;s system that we should configure the CRL\u0026rsquo;s distribution because that system must be accessible on the network.\nWe set up a new Debian 11 system, and recreate the folder that contains the RootCA\u0026rsquo;s CRL:\n1  mkdir -p /root/ca/crl   We bring the root-ca.crl file to it using a safe mechanism (burn a CD-R, printing and scanning with OCR, etc.) e place it in /root/ca/crl\nInstall and configure the CRLDistribution webserver Let\u0026rsquo;s use a very basic webserver, lighttpd\n1  apt install lighttpd -y   According to Debian\u0026rsquo;s wiki about Lighttpd, the default installation configures the service, grabs the 80/TCP port, runs with the wser www-data, set the webroot to be /var/www/html, and the default file to be index.php or  index.html, although it comes pre-configured to not run .php files.\nLet\u0026rsquo;s set up a different port (7788), another webroot to not interfere with the defaults from other webservers, and we will disable the automatic redirection to index.html\nIn addition, and this can be important, the MIME type settings have been pre-configured with a Perl script, which we may have to edit and re-do because the CRL files have to be served by HTTP with a specific MIME type, application/pkix-crl\n(https://pki-tutorial.readthedocs.io/en/latest/mime.html)\n1  cp /etc/lighttpd/lighttpd.conf{,.orig}   Change the lines:\n 1 server.modules = (\r2 # \u0026quot;mod_indexfile\u0026quot;,\r3 # \u0026quot;mod_access\u0026quot;,\r4 # \u0026quot;mod_alias\u0026quot;,\r5 # \u0026quot;mod_redirect\u0026quot;,\r6 )\r8 server.document-root = \u0026quot;/var/www/crl\u0026quot;\r10 server.errorlog = \u0026quot;/var/log/lighttpd/crl-error.log\u0026quot;\r14 server.port = 7788\r41 #index-file.names = ( \u0026quot;index.php\u0026quot;, \u0026quot;index.html\u0026quot; )\rCreate a new webroot:\n1  mkdir /var/www/crl   Move the original index.html installed by the lighttpd package to that place and deactivate it:\n1 2  mv /var/www/html/index.lighttpd.html /var/www/crl/index.lighttpd.html.disabled   Place the DER-format CRL inside webroot:\n1 2 3  cp /root/ca/crl/root-ca.crl /var/www/crl/root-ca.crl chown www-data:www-data /var/www/crl/root-ca.crl chmod 400 /var/www/crl/root-ca.crl   To configure the MIME types, the lighttpd.conf package called a script that creates a MIME configuration from the types defined in /etc/mime.types; did the latter already have a definition for the CRL\u0026rsquo;s MIME type?\n1  grep pkix-crl /etc/mime.types   application/pkix-crl crl\r\nTherefore, line 47 of lighttpd.conf will create a list of MIME types that includes our CRL type each time the lighttpd service is started.\n47 include_shell \u0026quot;/usr/share/lighttpd/create-mime.conf.pl\u0026quot;\rWe check lighttpd.conf\u0026rsquo;s syntax for errors:\n1  lighttpd -tt -f /etc/lighttpd/lighttpd.conf   2021-08-14 02:26:38: configfile.c.1142) WARNING: unknown config-key:\rurl.access-deny (ignored)\r\nThis error isn\u0026rsquo;t important, so:\n1 2  systemctl restart lighttpd systemctl status lighttpd   ● lighttpd.service - Lighttpd Daemon\rLoaded: loaded (/lib/systemd/system/lighttpd.service; enabled; vendor preset: enabled)\rActive: active (running)\r 1  systemctl enable lighttpd   Synchronizing state of lighttpd.service with SysV service script with /lib/systemd/systemd-sysv-install.\rExecuting: /lib/systemd/systemd-sysv-install enable lighttpd\r\nWe open port 7788 in the firewall:\n1  ufw allow 7788   And test access to the file:\n1  wget localhost:7788/root-ca.crl   Resolving localhost (localhost)... ::1, 127.0.0.1\rConnecting to localhost (localhost)|::1|:7788... connected.\rHTTP request sent, awaiting response... 200 OK\rLength: 1359 (1.3K) [application/pkix-crl]\rSaving to: ‘root-ca.crl’\rroot-ca.crl 100%[=================================================] 1.33K --.-KB/s in 0s\r2021-08-14 02:33:18 (168 MB/s) - ‘root-ca.crl’ saved [1359/1359] \nConnection was established and the file is served with the correct MIME type.\nBut unfortunately, you should only use CRLs when we are sure that our clients support this format (and in this regard, none is better than Microsoft). For example, it is impossible to revoke webserver certificates by CRLDistribution because only Internet Explorer has the code to download and analyze a CRL (Firefox and Chrome don\u0026rsquo;t even care) https://news.netcraft.com/archives/2013/05/13/how-certificate-revocation-doesnt-work-in-practice.html . That\u0026rsquo;s why it\u0026rsquo;s safer to set up the alternative mechanism, which is an OCSP Responder, also called AIA due to the directive that configures it ( AuthorityInfoAccess).\nSetting up the OCSP Responder on the RootCA\u0026rsquo;s CNF We start by placing on the RootCA\u0026rsquo;s openssl.cnf the following, on the [ intermediate_ca ] section:\nauthorityInfoAccess = OCSP;URI:http://ocsp.tjs.lan:7899\rWe can use any TCP port for the OCSP Responder, and it\u0026rsquo;s usually listening on a seldom-used HTTP port (like 8008). I chose port 7899 because after analyzing IANA\u0026rsquo;s port list, TCP ports 7888-7899 are not assigned, and may be used for this purpose. If we weren\u0026rsquo;t using CRLD, Lighttpd could also be switched off and port 7788 reused.\nThe protocol is HTTP and not HTTPS because how would any OCSP\u0026rsquo;s SSL Certificate be checked? (https://social.technet.microsoft.com/Forums/office/en-US/c65e1784-39be-4732-a135-bfba7446ad05/should-the-ocsp-responder-service-be-running-http-80-or-https-443-) The configuration of an OCSP Responder will be documented in the next part, which will about configuring an IntermediateCA. But we left the information in the RootCA\u0026rsquo;s .CNF in case we want to implement an OCSP Responder later.\nNote: if this information is not configured now, it can only be introduced on the PKI (and passed to any downstream certificates issued by the RootCA) by revoking and re-issuing all certificates already issued; therefore the structure of a PKI should be very well-planned before being implemented.\nNow we can start the IntermediateCA\u0026rsquo;s configuration.\n","description":"PKI in OpenSSL: part 1 (RootCA)","id":0,"section":"sec","tags":null,"title":"PKI OpenSSL (pt 1)","uri":"https://tiagojsilva.github.io/en/sec/pki/opensslpki_1/"},{"content":"Some time ago, I needed to simulate a heterogeneous network, with a Cisco router connected to another Huawei router.\nIt wasn\u0026rsquo;t easy because IOS is not publicly available and the Huawei simulator, eNSP, is discontinued and only works on VirtualBox 5.\nTo make this simulation, a CPU that supports VM nesting (Second-Level Address Translation - SLAT) is required.\nSimulation VM Create a Windows 7-based VM, with 4GB of RAM, 2 vCPUS and 4 network interfaces.It may be possible to lower RAM for 2GB, but this has not been tested; 1GB has been tested and is insufficient.\n\r\rIn order for the ARP protocol of the simulated routers to not complain that there are duplicate IPs in different MACs, it\u0026rsquo;s necessary to do MAC Spoofing on purpose, placing in the MAC configuration of each VirtualBox interface the MAC of the simulated router interface that it will represent. First the MAC is left in the standard setting, and then after we raise the simulated routers we take note of the MAC of each router\u0026rsquo;s interface, switch off the VM, and introduces this MAC in the corresponding VirtualBox interface configuration before bringing back the VM.\nCisco\u0026rsquo;s simulated router can change its MACs to duplicate the default VirtualBox MACs, so this step is optional for the Cisco\u0026rsquo;s interfaces; the same is supposed to be possible in the Huawei router, but although it is described in the manual, the simulation of the AR2220 can not change its MACs, so this step is required for the simulated Huawei router to work.\nThe final settings are:\nVirtual Interface 1  Internal Network: WAN Promiscuous: Allow All  Virtual Interface 2  Internal Network: LAN Promiscuous: Allow All  Virtual Interface 3  Internal Network: WAN Always with the same MAC as the corresponding external interface of the Huawei router Promiscuous: Allow All  Virtual Interface 4  Internal Network: LAN Always with the same MAC as the corresponding external interface of the Huawei router Promiscuous: Allow All\n\r\r  Guest\u0026rsquo;s network configuration Control Panel, Network Connections\nVirtual Interface 1\u0026rsquo;s \u0026ldquo;real\u0026rdquo; interface (confirm, for example, by disconnecting the virtual network cable)\nName: C-Outside or Cisco-EXT\nIP: 10.5.222.4\nNetmask: 255.255.0.0\nGateway: \u0026ndash;\nVirtual Interface 2\u0026rsquo;s \u0026ldquo;real\u0026rdquo; interface Name: C-Inside or Cisco-INT\nIP: 10.10.0.58\nNetmask: 255.255.255.248\nGateway: \u0026ndash;\nVirtual Interface 3\u0026rsquo;s \u0026ldquo;real\u0026rdquo; interface Name: H-Outside or Huawei-EXT\nIP: 10.5.222.6\nNetmask: 255.255.0.0\nGateway: \u0026ndash;\nVirtual Interface 4\u0026rsquo;s \u0026ldquo;real\u0026rdquo; interface Name: H-Inside or Huawei-INT\nIP: 10.10.0.59\nNetmask: 255.255.255.248\nGateway: \u0026ndash;\nSoftware to install  VirtualBox 5.2.x and its Extension Pack Winpcap 4.1.3 Wireshark-win64 3.2.5 eNSP V100R002C00B510 Setup GNS3 2.2.x or higher (don\u0026rsquo;t install GNS3 VM)  Finish the simulation VM\u0026rsquo;s configuration Save all projects, close all programs, turn off the VM (Shutdown)\nOn the VM\u0026rsquo;s Network properties, change each virtual interface\u0026rsquo;s MAC address to the same MAC of the router port that will connect to it \r\rBoot the VM up again, open the projects and configure the routers.\nGNS3 setup for Cisco 7200 Router Simulation Create a template for the Cisco 7200 Click on the first option of the bar on the left, Browse Routers\n+ New template\n\r\rInstall appliance from server\nNext\nPick Routers \u0026gt; Cisco 7200 / Dynamips\nInstall\n\r\rInstall on this computer\nNext\nAllow custom files\nOn the warning *Do you want to proceed? Yes\nChoose the .image file (which is Missing) and click on the Import button below it.\n\r\rChoose the c7200-adventerprisek9-mz.152-4.S3.bin file that has the checksum 79ffe4050b2cac60d51af8b953bb02b7. I do not know how I found this file, surely it fell from the back of a truck and I certainly have no permission to use it (nor do you). The official Cisco IOS images for academic use are included in the (paid) membership for VIRL - Cisco Modeling Labs\nOpen\nThis is not the correct file\nYes\n\r\rIt turns to Ready to Install\nAlternatively, click on Create a new version and create version 152-4.S3\nSelect the original version or newly created version, and\nNext\n\r\rDo you want to install?\nYes\nCreate a new topology for the Cisco router Create a new project.\nDrag a Cisco 7200 router from the template we created.\nRight-click, Configure\n\r\rWe need to add extra network interfaces to the router by inserting interface boards:\nTab Slots\nSlot 1: PA-GE\nSlot 2: PA-GE\nOK\n\r\rClick on the left bar\u0026rsquo;s pane (Browse End Devices).\nDrag two Clouds to the topology and give them appropriate names\n\r\rClick on the cable on the left bar (Add links) - the cursor switches to a +\nClick the router, select a port\n\r\rClick on one of the Clouds, and choose the Windows' network interface that will be used for this port\n\r\rDo the same with the other Cloud.\nRight-click on the router, Start to boot it up.\nRight-click on the router, Console to open the serial console\n\r\rClick on Enter (RETURN), and the simulated router boots already on privileged mode (#)\nMake a note of the MACs of the router interfaces you want to connect to the outside of the topology, because we need to put these MACs in the respective VirtualBox 6 virtual interfaces:\n1  show interface gig1/0   GigabitEthernet1/0 is administratively down, line protocol is down\rHardware is 82543, address is ca01.0438.001c (bia **ca01.0438.001c**)\r Simulated Huawei router eNSP setup for simulated Huawei AR2220 router Unlike the Cisco simulation, the use of eNSP images is free (especially because it is a Linux that simulates the actual software and not a copy of the real software in itself as it is the case of IOS images).\nCreate a new topology for the Huawei router Click the New Topo button\n\r\rDrag an AR2220 router\n\r\rDrag two Clouds and name them\n\r\rRight-click on a cloud, Settings\n\r\rOn the Outside cloud, right-click, Settings\nPort Building\nBinding info: UDP\nPort type: Ethernet\nAdd\n\r\rBinding info: select interface 3\nPort type: Ethernet\nAdd\n\r\rPort Map Setting\nPort type: Ethernet\nLocal Port: 1\nRemote Port: 2\nTwo-way Channel\nAdd\n\r\rClose the window\n\r\rOn the Inside cloud, right-click, Settings\nPort Building\nBinding info: UDP\nPort type: Ethernet\nAdd\nBinding info: select interface 4\nPort type: Ethernet\nAdd\nPort Map Setting\nPort type: Ethernet\nLocal Port: 1\nRemote Port: 2\nTwo-way Channel\nAdd\nClose the window.\nClick on the connections (lightning icon), select Auto or Copper\nConnect the router to each of the clouds (as in Packet Tracer - click, choose Port, click on the destination, choose port)\n\r\r\r\rEsc to leave the connection mode (pointer goes back to normal)\nRight-click on the router, Start (boots the router up)\nRight-click on the router, CLI (opens the serial console)\n\r\rMake a note of the MACs of the router interfaces that were connected to the clouds.\n\u0026lt;Huawei\u0026gt; display int g0/0/0\r[…]\rIP Sending Frames' Format is PKTFMT_ETHNT_2, Hardware address is\r**00e0-fc29-614c**\r[…]\r\n\r\rHuawei initial setup Open the AR2220\u0026rsquo;s CLI\nMay 16 2021 07:43:40-08:00 Huawei %%01IFPDT/4/IF_STATE(l)[0]:Interface GigabitEthernet0/0/0 has turned into UP state.\rMay 16 2021 07:43:40-08:00 Huawei %%01IFPDT/4/IF_STATE(l)[1]:Interface GigabitEthernet0/0/1 has turned into UP state.\r\nDisplay the base config:\n\u0026lt;Huawei\u0026gt; display current\r[V200R003C00]\r#\rsnmp-agent local-engineid 800007DB03000000000000\rsnmp-agent #\rclock timezone China-Standard-Time minus 08:00:00\r#\rportal local-server load portalpage.zip\r#\rdrop illegal-mac alarm\r#\rset cpu-usage threshold 80 restore 75\r#\raaa authentication-scheme default\rauthorization-scheme default\raccounting-scheme default\rdomain default domain default_admin local-user admin password cipher %$%$K8m.Nt84DZ}e#Set the clock to not be on the Beijing timezone:\n\u0026lt;Huawei\u0026gt; clock timezone GMT add 0\r\u0026lt;Huawei\u0026gt; clock daylight-saving-time GMT repeating 01:00 last Sun Mar 01:00 last sun Oct 01:00\r\u0026lt;Huawei\u0026gt; display clock\r2021-05-16 01:21:21 DST\rSunday\rTime Zone(GMT) : UTC+00:00\rDaylight saving time :\rName : GMT\rRepeat mode : repeat\rStart year : 2000\rEnd year : 2099\rStart time : last Sunday March 01:00:00\rEnd time : last Sunday October 01:00:00\rSaving time : 01:00:00\r \u0026lt;Huawei\u0026gt; system-view\rEnter system view, return user view with Ctrl+Z.\r [Huawei] display version\rHuawei Versatile Routing Platform Software\rVRP (R) software, Version 5.130 (AR2200 V200R003C00)\rCopyright (C) 2011-2012 HUAWEI TECH CO., LTD\rHuawei AR2220 Router uptime is 0 week, 0 day, 1 hour, 55 minutes\rBKP 0 version information: 1. PCB Version : AR01BAK2A VER.NC\r2. If Supporting PoE : No\r3. Board Type : AR2220\r4. MPU Slot Quantity : 1\r5. LPU Slot Quantity : 6\rMPU 0(Master) : uptime is 0 week, 0 day, 1 hour, 55 minutes\rMPU version information : 1. PCB Version : AR01SRU2A VER.A\r2. MAB Version : 0\r3. Board Type : AR2220\r4. BootROM Version : 0\r [Huawei] sysname RSFE\r[RSFE]\rSimulated routers' redundancy test Three pings were started on a client in the LAN (internal) network\nIf you\u0026rsquo;re using a Linux system, use the -O option (uppercase \u0026ldquo;o\u0026rdquo;) to show all the ping timeout messages like on Windows\n One ping to 1.1.1.1 One ping to Cisco\u0026rsquo;s internal IP, (10.10.0.60, in this case) One ping to Huawei\u0026rsquo;s internal address, (10.10.0.61, in this case)\nIn the normal situation, with Cisco as the designated router, we have access to the WAN\n\r\r  Shutting down Cisco\u0026rsquo;s internal interface, the ping to 10.10.0.60 stops, but we can still access the WAN.\nI do not know the source of the ICMP duplicate responses, but:\n with the Huawei as backup the pings to 10.10.0.61 return duplicates with Huawei as Master the pings to 10.10.0.61 return normally, but the pings to 1.1.1.1 return duplicates.\n\r\r  Good luck! I hope this hairy hack can help anyone who needs to set up a mixed system even if you are prevented from having access to physical hardware, or serves as an enabler for other, more advanced, topologies.\n","description":"Omelets with no eggs...","id":1,"section":"networking","tags":null,"title":"Cisco and Huawei simulated routers","uri":"https://tiagojsilva.github.io/en/networking/simul/gns3-ensp/"},{"content":"OpenSSL PKI (part 2) - IntermediateCA Creating an IntermediateCA Once again, the intermediateCA(s) must be hosted in a separate system (server) from that which hosts the RootCA, and the RootCA\u0026rsquo;s system (root) should be airgapped and offline. In the online system I don\u0026rsquo;t think it\u0026rsquo;s a bad idea to keep the secondary CAs under /root/ca, which allows the placing the RootCA\u0026rsquo;s certificate on the same path (/root/ca/certs/ca.cert.pem). However, this is the only information from the RootCA that needs to be brought to the online world where the secondary CAs reside; it is even debatable if it is worth bringing the RootCA\u0026rsquo;s CRL in PEM format and putting it in /root/ca/crl/ca.crl.pem.\n1 2 3 4 5  mkdir -p /root/ca/certs cp ca.cert.pem /root/ca/certs/ mkdir /root/ca/crl cp ca.crl.pem /root/ca/crl/ mkdir /root/ca/csr   Create the complete folder tree that is needed to support the IntermediateCA\u0026rsquo;s operations:\n1 2 3 4 5 6  inter=\u0026#34;/root/ca/inter-ca\u0026#34; mkdir $inter/{certs,crl,csr,newcerts,private} chmod 700 $inter/private touch $inter/index.txt echo 1000 \u0026gt; $inter/serial echo 1000 \u0026gt; $inter/crlnumber   Create the configuration file for the InterCA:\n1  cat \u0026gt; $inter/openssl.cnf   /root/ca/inter-ca/openssl.cnf\n\r\rExpandir\r\r# OpenSSL intermediate CA configuration file.\r# Copy to '/root/ca/inter-ca/openssl.cnf'.\r[ ca ]\r# 'man ca'\rdefault_ca = CA_default\r[ CA_default ]\r# Directory and file locations.\rdir = /root/ca/inter-ca\rcerts = $dir/certs\rcrl_dir = $dir/crl\rnew_certs_dir = $dir/newcerts\rdatabase = $dir/index.txt\rserial = $dir/serial\rRANDFILE = $dir/private/.rand\r# The root key and root certificate.\rprivate_key = $dir/private/inter-ca.key.pem\rcertificate = $dir/certs/inter-ca.cert.pem\r# For certificate revocation lists.\rcrlnumber = $dir/crlnumber\rcrl = $dir/crl/inter-ca.crl.pem\rcrl_extensions = crl_ext\rdefault_crl_days = 30\r# SHA-1 is deprecated, so use SHA-2 instead.\rdefault_md = sha512\rname_opt = ca_default\rcert_opt = ca_default\rdefault_days = 375\rpreserve = no\rpolicy = policy_loose\r# copy SAN, OCSP and other stuff to downstream certificates\rcopy_extensions = copy\r[ policy_strict ]\r# The root CA should only sign intermediate certificates that match.\r# See the POLICY FORMAT section of 'man ca'.\rcountryName = match\rstateOrProvinceName = match\rorganizationName = match\rorganizationalUnitName = optional\rcommonName = supplied\remailAddress = optional\r[ policy_loose ]\r# Allow the intermediate CA to sign a more diverse range of certificates.\r# See the POLICY FORMAT section of the 'ca' man page.\rcountryName = optional\rstateOrProvinceName = optional\rlocalityName = optional\rorganizationName = optional\rorganizationalUnitName = optional\rcommonName = supplied\remailAddress = optional\r[ req ]\r# Options for the 'req' tool ('man req').\rdefault_bits = 4096\rdistinguished_name = req_distinguished_name\rstring_mask = utf8only\r# SHA-1 is deprecated, so use SHA-2 instead.\rdefault_md = sha512\r# Extension to add when the -x509 option is used.\rx509_extensions = v3_ca\r[ req_distinguished_name ]\r# See \u0026lt;https://en.wikipedia.org/wiki/Certificate_signing_request\u0026gt;.\rcountryName = Country Name (2 letter code)\rstateOrProvinceName = State or Province Name\rlocalityName = Locality Name\r0.organizationName = Organization Name\rorganizationalUnitName = Organizational Unit Name\rcommonName = Common Name\remailAddress = Email Address\r# Optionally, specify some defaults.\rcountryName_default = PT\rstateOrProvinceName_default = Lisboa\rlocalityName_default = Lisboa\r0.organizationName_default = TiagoJoaoSilva\rorganizationalUnitName_default = TJS\remailAddress_default = bofh@tjs.lan\r[ v3_ca ]\r# Extensions for a typical CA ('man x509v3_config').\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid:always,issuer\rbasicConstraints = critical, CA:true\rkeyUsage = critical, digitalSignature, cRLSign, keyCertSign\r[ v3_intermediate_ca ]\r# Extensions for a typical intermediate CA ('man x509v3_config').\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid:always,issuer\rbasicConstraints = critical, CA:true, pathlen:0\rkeyUsage = critical, digitalSignature, cRLSign, keyCertSign\r[ usr_cert ]\r# Extensions for client certificates ('man x509v3_config').\rbasicConstraints = CA:FALSE\rnsCertType = client, email\rnsComment = \u0026quot;OpenSSL Generated Client Certificate\u0026quot;\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer\rkeyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment\rextendedKeyUsage = clientAuth, emailProtection\r[ server_cert ]\r# Extensions for server certificates ('man x509v3_config').\rbasicConstraints = CA:FALSE\rnsCertType = server\rnsComment = \u0026quot;OpenSSL Generated Server Certificate\u0026quot;\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer:always\rkeyUsage = critical, digitalSignature, keyEncipherment\rextendedKeyUsage = serverAuth\r[ crl_ext ]\r# Extension for CRLs ('man x509v3_config').\rauthorityKeyIdentifier=keyid:always\r[ ocsp ]\r# Extension for OCSP signing certificates ('man ocsp').\rbasicConstraints = CA:FALSE\rsubjectKeyIdentifier = hash\rauthorityKeyIdentifier = keyid,issuer\rkeyUsage = critical, digitalSignature\rextendedKeyUsage = critical, OCSPSigning\r\r\r\nIn an ideal world, there would be several subCAs, named by the use to which they would be intended (usually with different extension sets for each use):\n tls-ca: Certificates for servers and clients vpn-ca: Certificates for VPNs mime-ca: Certificates for email code-ca: Certificates for code signing net-ca: Certificates for network assets\nThe configuration of these extensions is outside the scope of this document. But each of them would have their own folder tree and their copy of the openssl.cnf, to which I would give a more specific name in each case.\nActually, it seems that almost no one bothers to do all this; there\u0026rsquo;s usually a separate CA for external VPNs, if the company develops software there\u0026rsquo;s a CA for code-signing, and then a single CA for all internal systems.\nTo avoid having to create separate configuration files for each certificate that re-specify all the functionalities that are common to the InterCA, we add the following to /root/ca/inter-ca/openssl.cnf:  [ CA_default ]\r(…)\r# copy extensions missing from the CSR to the final certificate\rcopy_extensions = copy\rNote that since this IntermediateCA is more dynamic than the RootCA, its CRL\u0026rsquo;s validity should not be greater than 30 days; I\u0026rsquo;d advise you to set up a periodic task that refreshes the CRL every 29 days.\ndefault_crl_days = 30\rGenerate a complex password for the InterCA:\n1 2  openssl rand -base64 12 \u0026gt; $inter/private/inter-ca.key.pass chmod 400 $inter/private/inter-ca.key.pass   We create the InterCA\u0026rsquo;s key providing the complex password:\n1 2  openssl genrsa -aes256 -passout file:$inter/private/inter-ca.key.pass \\ -out $inter/private/inter-ca.key.pem 8192   Generating RSA private key, 8192 bit long modulus (2 primes)\r......................................................................................................................................................................................................+++\r.....................................................................................................................................................................................................+++\re is 65537 (0x010001)\r 1  chmod 400 $inter-ca/private/inter-ca.key.pem   Create the Certificate Signing Request that will be signed by the RootCA (notice that it is placed on the csr folder of the RootCA):\n1 2 3 4  openssl req -config $inter/openssl.cnf -new -sha512 \\ -passin file:$inter/private/inter-ca.key.pass \\ -key $inter/private/inter-ca.key.pem \\ -out /root/ca/csr/inter-ca.csr.pem   You are about to be asked to enter information that will be incorporated\rinto your certificate request.\rWhat you are about to enter is what is called a Distinguished Name or a DN.\rThere are quite a few fields but you can leave some blank\rFor some fields there will be a default value,\rIf you enter '.', the field will be left blank.\r-----\rCountry Name (2 letter code) [PT]:\rState or Province Name [Lisboa]:\rLocality Name [Lisboa]:\rOrganization Name [TiagoJoaoSilva]:\rOrganizational Unit Name [TJS]:\rCommon Name []:**inter-ca-tjs-2**\rEmail Address [bofh@tjs.lan]\r Sign the CSR with the RootCA Go back to the offline system of the RootCA and add some folder for the IntermediateCA.\nAs it will only support the creation of the InterCA(s) and not its operation, it is much simpler:\n1 2 3  inter=\u0026#34;/root/ca/inter-ca\u0026#34; mkdir $inter/certs chmod 740 $inter/certs   Bring in from the online system the IntermediateCA\u0026rsquo;s CSR, which we place on the same path where it was (the RootCA\u0026rsquo;s csr folder):\n1  cp inter-ca.csr.pem /root/ca/csr   To make sure that the CDL and/or AIA information of the RootCA is passed to the IntermediateCA, we add this directive to the [ CA_default ] section on /root/ca/openssl.cnf\n# copy extensions missing from the CSR to the final certificate\rcopy_extensions = copy\rSign the CSR; notice that we specify the extension from /root/ca/openssl.cnf to be used is [ v3_intermediate_ca ]!\n1 2 3 4 5  openssl ca -config /root/ca/openssl.cnf -extensions v3_intermediate_ca \\ -days 3650 -notext -md sha512 \\ -passin file:/root/ca/private/ca.key.pass \\ -in /root/ca/csr/inter-ca.csr.pem \\ -out $inter/certs/inter-ca.cert.pem   Using configuration from /root/ca/openssl.cnf\rCheck that the request matches the signature\rSignature ok\rCertificate Details:\rSerial Number: 4099 (0x1003)\rValidity\rNot Before: Aug 13 23:44:07 2021 GMT\rNot After : Aug 11 23:44:07 2031 GMT\rSubject:\rcountryName = PT\rstateOrProvinceName = Lisboa\rorganizationName = TiagoJoaoSilva\rorganizationalUnitName = TJS\rcommonName = inter-ca-tjs-2\remailAddress = bofh@tjs.lan\rX509v3 extensions:\rX509v3 Subject Key Identifier:\rE3:75:25:D7:74:08:0B:23:F0:AF:E4:EC:D0:D4:52:CB:5A:3A:10:2E\rX509v3 Authority Key Identifier:\rkeyid:01:F2:CC:54:E0:F2:58:AC:E2:14:8E:2B:DB:6D:B6:FF:5C:25:41:A0\rX509v3 Basic Constraints: critical\rCA:TRUE, pathlen:0\rX509v3 Key Usage: critical\rDigital Signature, Certificate Sign, CRL Sign\rX509v3 CRL Distribution Points:\rFull Name:\rURI:http://server.tjs.lan:7788/root-ca.crl\rCertificate is to be certified until Aug 11 23:44:07 2031 GMT (3650 days)\rSign the certificate? [y/n]:Y\r1 out of 1 certificate requests certified, commit? [y/n]Y\rWrite out database with 1 new entries\rData Base Updated\r\nWe check the signing:\n1  openssl verify -CAfile /root/ca/certs/ca.cert.pem $inter/certs/inter-ca.cert.pem   /root/ca/inter-ca/certs/inter-ca.cert.pem: OK\r\nCreate a certificate for the Chain of Authority with a Chain certificate (also called Bundle), by concatenating the certificates in ascending order - the latter will be the RootCA or the nearest to it.\n1 2 3  cat $inter/certs/inter-ca.cert.pem /root/ca/certs/ca.cert.pem \u0026gt; \\ $inter/certs/inter-ca_chain.cert.pem chmod 444 $inter/certs/inter-ca_chain.cert.pem   Activate the IntermediateCA on the online system Since we left on the online system all the things the IntermediateCA needs to do its job, we only have to bring the certificates signed by the RootCA to their proper place (using safe methods); I didn\u0026rsquo;t find any guidance whether the IntermediateCA\u0026rsquo;s certificates should be placed in /root/ca/certs (as it would be logical to do), so I\u0026rsquo;ll place them in /root/ca/inter-ca/certs\n1  cp inter-ca.cert.pem inter-ca_chain.cert.pem $inter/certs   Revoking IntermediateCA certificates As the number of certificates to issue (or revoke) by the IntermediateCA will be much larger than the RootCA\u0026rsquo;s, it\u0026rsquo;s better to use the OCSP Responder method (also called AIA because of the directive AuthorityInfoAccess that sets it up), to check for certificate revocation.\nSetting up the OCSP Responder\u0026rsquo;s address on the InterCA\u0026rsquo;s CNF We start by putting the following in the [server_cert] and [usr_cert] sections of /root/ca/inter-ca/openssl.cnf\nauthorityInfoAccess = OCSP;URI:http://ocsp.tjs.lan:7888\rCreate the certificate Generate a key:\n1  openssl genrsa -out /root/ca/inter-ca/private/ocsp.tjs.lan.key.pem 4096   Generating RSA private key, 4096 bit long modulus (2 primes)\r...............................++++\r................................................++++\re is 65537 (0x010001)\r\nInsert the OCSP-specific SAN (Subject Alternative Name) informations on another .CNF:\n1  cat \u0026gt; /root/ca/inter-ca/san/ocsp.tjs.lan-san.cnf   [req]\rdistinguished_name = req_distinguished_name\rreq_extensions = req_ext\rprompt = no\r[req_distinguished_name]\rC = PT\rST = Lisboa\rL = Lisboa\rO = Tiago Joao Silva\rOU = TJS\rCN = ocsp.tjs.lan\r[req_ext]\rsubjectAltName = @alt_names\r[alt_names]\rIP.1 = 192.168.1.70\rDNS.1 = ocsp.tjs.lan Build the CSR with that SAN info:\n1 2 3  openssl req -config /root/ca/inter-ca/san/ocsp.tjs.lan-san.cnf -new -sha512 \\ -key /root/ca/inter-ca/private/ocsp.tjs.lan.key.pem \\ -out /root/ca/inter-ca/csr/ocsp.tjs.lan.csr.pem   Confirm the CSR has the SAN info:\n1 2  openssl req -noout -text -in /root/ca/inter-ca/csr/ocsp.tjs.lan.csr.pem | \\ grep -A 1 \u0026#34;Subject Alternative Name\u0026#34;   X509v3 Subject Alternative Name: IP Address:192.168.1.70, DNS:ocsp.tjs.lan\r\nSign the CSR with -extensions ocsp:\n1 2 3 4 5  openssl ca -config /root/ca/inter-ca/openssl.cnf \\ -extensions ocsp -days 823 -notext -md sha512 \\ -passin file:/root/ca/inter-ca/private/inter-ca.key.pass \\ -in /root/ca/inter-ca/csr/ocsp.tjs.lan.csr.pem \\ -out /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem   Using configuration from /root/ca/inter-ca/openssl.cnf\rCheck that the request matches the signature\rSignature ok\rCertificate Details:\rSerial Number: 4099 (0x1003)\rValidity\rNot Before: Aug 22 22:53:56 2021 GMT\rNot After : Nov 23 22:53:56 2023 GMT\rSubject:\rcountryName = PT\rstateOrProvinceName = Lisboa\rlocalityName = Lisboa\rorganizationName = Tiago Joao Silva\rorganizationalUnitName = TJS\rcommonName = ocsp.tjs.lan\rX509v3 extensions:\rX509v3 Basic Constraints:\rCA:FALSE\rX509v3 Subject Key Identifier:\rBD:A6:EE:6D:0F:73:0E:47:DC:26:9A:A8:B0:40:18:55:DB:35:6B:5A\rX509v3 Authority Key Identifier:\rkeyid:E3:75:25:D7:74:08:0B:23:F0:AF:E4:EC:D0:D4:52:CB:5A:3A:10:2E\rX509v3 Key Usage: critical\rDigital Signature\rX509v3 Extended Key Usage: critical\rOCSP Signing\rCertificate is to be certified until Nov 23 22:53:56 2023 GMT (823 days)\rSign the certificate? [y/n]:Y\r1 out of 1 certificate requests certified, commit? [y/n]Y\rWrite out database with 1 new entries\rData Base Updated\r\nConfirm the certificate has the OCSP extension info:\n1 2  openssl x509 -noout -text -in /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem | \\ grep -A1 X509v3   X509v3 extensions:\rX509v3 Basic Constraints:\rCA:FALSE\rX509v3 Subject Key Identifier:\rBD:A6:EE:6D:0F:73:0E:47:DC:26:9A:A8:B0:40:18:55:DB:35:6B:5A\rX509v3 Authority Key Identifier:\rkeyid:E3:75:25:D7:74:08:0B:23:F0:AF:E4:EC:D0:D4:52:CB:5A:3A:10:2E\r--\rX509v3 Key Usage: critical\rDigital Signature\rX509v3 Extended Key Usage: critical\rOCSP Signing\r 1  chmod 400 $inter/certs/ocsp.tjs.lan.cert.pem   Use OpenSSL to create a testing OCSP Responder (do not use in production) For testing, we\u0026rsquo;ll activate OpenSSL\u0026rsquo;s in-built OCSP Responder temporarily:\n we\u0026rsquo;ll use port 7888, one of the previously known free ports (see Part 1) with the-nrequest 1 option, it wil close itself after a single query and we\u0026rsquo;ll gather a log.  1 2 3 4 5 6  openssl ocsp -index /root/ca/inter-ca/index.txt -port 7888 -text \\ -CA /root/ca/inter-ca/certs/inter-ca_chain.cert.pem \\ -rkey /root/ca/inter-ca/private/ocsp.tjs.lan.key.pem \\ -rsigner /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem \\ -out /root/ca/inter-ca/ocsp-log.txt \\ -nrequest 1 \u0026amp;   ocsp: waiting for OCSP client connections...\r\nOpen a port on the firewall\n1  ufw allow 7888   Query the Responder about a certificate (the Responder\u0026rsquo;s own, or another):\n1 2 3 4  openssl ocsp -CAfile /root/ca/inter-ca/certs/ca-chain.cert.pem \\ -url http://127.0.0.1:7888 -resp_text \\ -issuer /root/ca/inter-ca/certs/inter-ca.cert.pem \\ -cert /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem   […]\rResponse verify OK\r/root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem: good\rThis Update: Aug 22 23:06:21 2021 GMT\r[1]+ Done openssl ocsp -index /root/ca/inter-ca/index.txt -port 7888 -text -CA /root/ca/inter-ca/certs/inter-ca_chain.cert.pem -rkey /root/ca/inter-ca/private/ocsp.tjs.lan.key.pem -rsigner /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem -out /root/ca/inter-ca/ocsp-log.txt -crl_check_all -nrequest 1\r\nExamine the log to check what\u0026rsquo;s happened:\n1  head -30 /root/ca/inter-ca/ocsp-log.txt   OCSP Request Data:\rVersion: 1 (0x0)\rRequestor List:\rCertificate ID:\rHash Algorithm: sha1\rIssuer Name Hash: AE59C598DC56A005EA5239AE471093B7924F5018\rIssuer Key Hash: E37525D774080B23F0AFE4ECD0D452CB5A3A102E\rSerial Number: 1003\rRequest Extensions:\rOCSP Nonce:\r04104CA2F5C63FA8F6A8D89256935DB37177\rOCSP Response Data:\rOCSP Response Status: successful (0x0)\rResponse Type: Basic OCSP Response\rVersion: 1 (0x0)\rResponder Id: C = PT, ST = Lisboa, L = Lisboa, O = Tiago Joao Silva, OU = TJS, CN = ocsp.tjs.lan\rProduced At: Aug 22 23:06:21 2021 GMT\rResponses:\rCertificate ID:\rHash Algorithm: sha1\rIssuer Name Hash: AE59C598DC56A005EA5239AE471093B7924F5018\rIssuer Key Hash: E37525D774080B23F0AFE4ECD0D452CB5A3A102E\rSerial Number: 1003\rCert Status: good\rThis Update: Aug 22 23:06:21 2021 GMT\rResponse Extensions:\rOCSP Nonce:\r04104CA2F5C63FA8F6A8D89256935DB37177\rSignature Algorithm: sha256WithRSAEncryption\r Set the OCSP Responder up as a permanent service If your distribution uses systemd, create a Service Unit (other inits have their own ways)\n1  cat \u0026gt; /etc/systemd/system/ocsp-responder_inter-ca.service   [Unit]\rDescription = OCSP responder using OpenSSL (for CA inter-ca)\rAfter = network.target\r[Service]\rExecStart = /usr/bin/openssl ocsp \\\r-index /root/ca/inter-ca/index.txt \\\r-port 7888 \\\r-rkey /root/ca/inter-ca/private/ocsp.tjs.lan.key.pem \\\r-rsigner /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem \\\r-CA /root/ca/inter-ca/certs/inter-ca_chain.cert.pem \\\r-text -crl_check_all\\\r-out /root/ca/inter-ca/ocsp-log.txt\r[Install]\rWantedBy = multi-user.target\r1  systemctl daemon-reload   Test the service:\n1 2  systemctl start ocsp-responder_inter-ca systemctl status ocsp-responder_inter-ca   ● ocsp-responder_inter-ca.service - OCSP responder using OpenSSL (for CA inter-ca)\rLoaded: loaded (/etc/systemd/system/ocsp-responder_inter-ca.service; disabled; vendor preset: enabled)\rActive: active (running) since Mon 2021-08-23 00:21:27 WEST; 22s ago\r[…]\rAug 23 00:21:27 debian systemd[1]: Started OCSP responder using OpenSSL (for CA inter-ca).\rAug 23 00:21:27 debian openssl[2585]: ocsp: waiting for OCSP client connections...\r Query the service:\n1 2 3 4  openssl ocsp -CAfile /root/ca/inter-ca/certs/ca-chain.cert.pem \\ -url http://127.0.0.1:7888 -resp_text \\ -issuer /root/ca/inter-ca/certs/inter-ca.cert.pem \\ -cert /root/ca/inter-ca/certs/ocsp.tjs.lan.cert.pem   Confirm that the answer is identical to the previously done test. Then leave the service as permanent:\n1  systemctl enable ocsp-responder_inter-ca   Other CAs If this is not the only IntermediateCA, others could be set up following exactly the same steps, and just changing the listening port (they\u0026rsquo;re free up to 7899/TCP, so 10 more potential ports).\nHowever, it is not recommended to use OpenSSL as an OCSP Responder, because the implementation is barebone.\n","description":"OpenSSL-based PKI: part 2 (IntermediateCA)","id":2,"section":"sec","tags":null,"title":"PKI OpenSSL (pt 2)","uri":"https://tiagojsilva.github.io/en/sec/pki/opensslpki_2/"},{"content":"The workflow I use to make these articles is a jury-rigged hairball of a hack (did you expect anything else?)\nI start by writing in Microsoft Word, because I\u0026rsquo;m used to it and I have some content in Word format that I want to bring to the site.\nThen I convert the DOCX to MarkDown with Pandoc\npandoc -f docx -t gfm --wrap=none --extract-media images\\\u0026lt;section\u0026gt;\\\u0026lt;article\u0026gt; -o article.md .\\article.docx\rThe advantages of using Pandoc are many:\n Converts Bold, Italic and Bold-italic in the Markdown equivalents Converts links in the MarkDown equivalents without escaping reserved MarkDown characters. Keeps the document outline levels (Heading 1, Heading 2) as MarkDown heading levels, which builds the article\u0026rsquo;s Table Of Contents Extracts the images to a folder and inlines the link for the correct path; it also includes the alt text field\u0026rsquo;s content I set in Word, but I tend not to use it.  The .MD is opened in Notepad++ to:\n Remove the blank lines that are inserted between each line Search and Replace (shortcodes, paths with / and not \\, and others)  I create the article in Hugo:\nhugo new content\\pt\\\u0026lt;section\u0026gt;\\\u0026lt;article\u0026gt;.md\rThen I edit the FrontMatter and copy the text from Notepad++ to the new .MD\nThe images are copied to \u0026lt;site\u0026gt;/static/images/\u0026lt;section\u0026gt;/\u0026lt;article\u0026gt;/\nThe local Hugo is started:\nhugo server --buildFuture\rI make the necessary adjustments in VScode, where I have a workspace for the site.\nThe English translation is assisted by a VSCode extension, funkyremi.VScode Google Translate, where I put in the preferences that I want to always translate from Portuguese to English. I copy the file \u0026lt;article\u0026gt;.MD to the same place under \u0026lt;site\u0026gt;/content/en/, open it side-by-side with the Portuguese version (preferably on a second monitor, because it\u0026rsquo;s easy to confuse the two mid-translation), select the text I want to translate while avoiding technical terms, Alt-Shift-T and that\u0026rsquo;s it; it\u0026rsquo;s not perfect and lots of touching up is necessary, but it saves a lot of work.\n","description":"Producing content ain't easy, so any help is welcome...","id":3,"section":"blog","tags":null,"title":"Article Workflow","uri":"https://tiagojsilva.github.io/en/blog/2021-09-22_workflow/"},{"content":"At first I did not intend to enable comments, but since humans are social animals, I went to see if I could set up a system without having to hack too much.\nAt first I considered Disq.us, which comes with Hugo, but it has many issues.\nZdoc has Utteranc.es pre-configured, and it has the advantages of being limited to GitHub users (all good people) and to be statically stored on a repo.\nSetup I made a public repo just for the comments and installed the Utteranc.es app on it.\nAll I had to do then was go to config/params.toml, enable the commenting section and set the credentials:\n1 2 3 4 5  enableComment = true [utterances] # https://utteranc.es/ owner = \u0026#34;\u0026lt;GitHub Username\u0026gt;\u0026#34; # Your GitHub ID repo = \u0026#34;\u0026lt;utteranc.es repo name\u0026gt;\u0026#34; # The repo to store comments   And Zdoc automatically adds a comments field at the end of any articles.\nBlog But on blogposts, it doesn\u0026rsquo;t. To enable that, I had to manually edit the partial, by adding {{ partial \u0026quot;comments/comments.html\u0026quot; . }} in the correct place:\n1 2 3 4 5 6 7 8 9  \u0026lt;article id=\u0026#34;list-main\u0026#34; class=\u0026#34;{{ if $wideViewAsDefault }}lm{{ else }}m{{ end }}\u0026#34; data-dir=\u0026#34;{{ $.Param \u0026#34;languagedir\u0026#34; | default \u0026#34;ltr\u0026#34; }}\u0026#34;\u0026gt; {{ if $.Param \u0026#34;enableBlogBreadcrumb\u0026#34; }} {{ partial \u0026#34;main/component/breadcrumb.html\u0026#34; . }} {{ end }} {{ partial \u0026#34;main/sections/list-main.html\u0026#34; . }} {{ partial \u0026#34;main/component/pagination-single.html\u0026#34; . }} {{ partial \u0026#34;comments/comments.html\u0026#34; . }} \u0026lt;/article\u0026gt;   And that\u0026rsquo;s it!.\nUnfortunately, since it\u0026rsquo;s based on GitHub Issues and not on GitHub Discussions there\u0026rsquo;s no pre-moderation. So behave.\n","description":"Vox populi","id":4,"section":"blog","tags":null,"title":"Article comments","uri":"https://tiagojsilva.github.io/en/blog/2021-09-15_site-comments/"},{"content":"Zdoc has an \u0026ldquo;Updates\u0026rdquo; section, but the articles inside it were created by hand. Since I\u0026rsquo;m lazy (laziest person in the world right here) and I don\u0026rsquo;t like to do things by hand when they can be automated, I tried to get some way of producing a Site Index without handcrafting each page.\nIn WordPress and other dynamic platforms it\u0026rsquo;s dead easy, but on a static site like Hugo, all the proposed solutions involved plugins, NPM, Node.js, things I did not want to mess with (for now).\nFortunately, there\u0026rsquo;s a way of faking this functionality using an internal Hugo system, Taxonomies. Thankfully, I do not use Taxonomies for anything else, but I don\u0026rsquo;t know at the moment if doing this will prevent other uses for them.\nI added this to config.toml\n1 2 3 4 5 6 7  [taxonomies] year = \u0026#34;year\u0026#34; month = \u0026#34;month\u0026#34; [permalinks] year = \u0026#34;updates/:slug/\u0026#34; month = \u0026#34;updates/:slug/\u0026#34;   This automatically adds pages site/updates/year e pages site/updates/year/month, filled with the :slug of all pages that have these values in the variables year:  and month: that we can now start placing on the frontmatter of each page, like this:\n1 2 3 4 5 6 7  ---title:\u0026#34;The Updates section\u0026#34;description:\u0026#34;Hacking until the tree falls off...\u0026#34;[...]year:[\u0026#34;2021\u0026#34;]month:[\u0026#34;2021/09\u0026#34;]---  To generate these fields automatically when you create an article or post with hugo new, I added the following to the frontmatter of the archetypes archetypes/blog/post.md and  archetypes/default.md:\nyear: [\u0026quot;{{ now.Format \u0026quot;2006\u0026quot; }}\u0026quot;]\rmonth: [\u0026quot;{{ now.Format \u0026quot;2006/01\u0026quot; }}\u0026quot;]\rAnd to prevent these pages from being formatted like they were part of the Blog section (which is the default configuration for Taxonomies), I changed the following in layouts/_default/taxonomy.html\n1 2 3 4 5 6 7  \u0026lt;div class=\u0026#34;top\u0026#34;\u0026gt; \u0026lt;header class=\u0026#34;header__wrapper bgcolor__header\u0026#34;\u0026gt; {{ with .Site.GetPage \u0026#34;section\u0026#34; \u0026#34;blog\u0026#34; }} {{ if eq .Params.blogHeaderType \u0026#34;img\u0026#34; }} \u0026lt;!-- {{ partial \u0026#34;header/blog-header.html\u0026#34; . }} --\u0026gt; {{ partial \u0026#34;header/custom-header.html\u0026#34; . }} {{ else }}   Zdoc\u0026rsquo;s layouts/partials/header/custom-header.html is empty; if you want something else, you can edit it or make a new one. Just remember that as it is, it will be applied to all Taxonomies.\nThen all I had to do was make static links in the content/\u0026lt;lang\u0026gt;/updates/_index.md page to the auto-generated pages:\n1 2 3  Updates [2021](/en/updates/2021) - [August](/en/updates/2021/08)   Yes, I still have to create these links by hand, but the pages behind the links are created without forcing me to put each post there one by one.\nThat\u0026rsquo;s progress!\nSources:\nhttps://discourse.gohugo.io/t/how-to-generate-chronological-blog-archives-in-hugo/13491/5\nhttps://discourse.gohugo.io/t/strugling-with-chronological-blog-archive/31963/2\nhttps://gohugo.io/templates/lists/\n","description":"Hacking until the tree falls off...","id":5,"section":"blog","tags":null,"title":"The Updates section","uri":"https://tiagojsilva.github.io/en/blog/2021-09-04_updates-page/"},{"content":"One thing that I don\u0026rsquo;t like about Zdoc is all the space taken by the sidebars, leaving little space on the center for the articles and leaving the images quite small (especially when they are widescreen screenshots).\nI don\u0026rsquo;t understand enough HTML to try to widen the central column (apart from the built-in arrow on top that widens the content column but hides the TOC), but I can try to make the images be shown larger when you click on them.\nBTW, why is there a wideViewAsDefault = true in config/params.toml but there\u0026rsquo;s no separate setting for the Blog? The Blog doesn\u0026rsquo;t have a sidebar, so that\u0026rsquo;s where the Wide View expands to, leaving the TOC alone. Wide View on the Blog would be for free\u0026hellip;\nSo I found this link and set up the Lightbox library.\nI downloaded the latest release and placed:\n lightbox.css em static/css/ lightbox.jsem static/js/\nAdded at the end of this file:  1 2 3  // ========= lightbox \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;/css/lightbox.css\u0026#34;\u0026gt; // ==================   Added before the \u0026lt;/body\u0026gt; tag on this file:\n1 2 3 4 5 6 7 8  \u0026lt;!-- lightbox--\u0026gt; \u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-3.4.1.min.js\u0026#34; integrity=\u0026#34;sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;/js/lightbox.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;/css/lightbox.css\u0026#34;\u0026gt; \u0026lt;!-- /lightbox --\u0026gt;   And created a lightbox shortcode, which accepts the same options as the figure shortcode it invokes:\n\r\rExpandir\r\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53  {{ if .Get \u0026#34;caption\u0026#34; }} {{ $.Scratch.Set \u0026#34;caption\u0026#34; (.Get \u0026#34;caption\u0026#34;) }} {{ else if .Get \u0026#34;alt\u0026#34; }} {{ $.Scratch.Set \u0026#34;caption\u0026#34; (.Get \u0026#34;alt\u0026#34;) }} {{ end }} \u0026lt;!-- resolve absolute image path --\u0026gt; {{ $permalink := $.Page.Permalink }} {{ $image := .Get \u0026#34;src\u0026#34; }} {{ $image_link_absolute := (findRE \u0026#34;^/\u0026#34; $image) }} \u0026lt;figure {{ with .Get \u0026#34;class\u0026#34; }}class=\u0026#34;{{.}}\u0026#34;{{ end }} {{ with .Get \u0026#34;width\u0026#34; }}style=\u0026#34;width: {{ . }};\u0026#34;{{ end }} {{ with .Get \u0026#34;height\u0026#34; }}style=\u0026#34;height: {{ . }};\u0026#34;{{ end }} \u0026gt; \u0026lt;a {{ if .Get \u0026#34;lightbox\u0026#34; }} data-lightbox=\u0026#34;{{ .Get \u0026#34;lightbox\u0026#34; | markdownify | plainify }}\u0026#34; {{ else }} data-lightbox=\u0026#34;image-{{ $image }}\u0026#34; {{ end }} {{ if $image_link_absolute }} href=\u0026#34;{{ $image | absURL }}\u0026#34; {{ else }} href=\u0026#34;{{ (printf \u0026#34;%s%s\u0026#34; $permalink $image) }}\u0026#34; {{ end }} {{ with .Get \u0026#34;target\u0026#34; }} target=\u0026#34;{{ . }}\u0026#34;{{ end }} {{ with .Get \u0026#34;rel\u0026#34; }} rel=\u0026#34;{{ . }}\u0026#34;{{ end }}\u0026gt; \u0026lt;img {{ if $image_link_absolute }} src=\u0026#34;{{ $image | absURL }}\u0026#34; {{ else }} src=\u0026#34;{{ (printf \u0026#34;%s%s\u0026#34; $permalink $image) }}\u0026#34; {{ end }} {{ if .Get \u0026#34;alt\u0026#34; }}alt=\u0026#34;{{ .Get \u0026#34;alt\u0026#34; | markdownify | plainify }}\u0026#34; {{ else if .Get \u0026#34;caption\u0026#34; }}alt=\u0026#34;{{ .Get \u0026#34;caption\u0026#34; | markdownify | plainify }}\u0026#34; {{ end }} {{ with .Get \u0026#34;align\u0026#34; }}align=\u0026#34;{{ . }}\u0026#34;{{ end }} /\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;!-- caption and attr--\u0026gt; {{ if ($.Scratch.Get \u0026#34;caption\u0026#34;) }} \u0026lt;figcaption\u0026gt; \u0026lt;span class=\u0026#34;img--caption\u0026#34;\u0026gt; Figure {{ $.Page.Scratch.Get \u0026#34;fig\u0026#34; }}. {{ $.Scratch.Get \u0026#34;caption\u0026#34; | markdownify | plainify }} {{ if .Get \u0026#34;attr\u0026#34; }} [{{- with .Get \u0026#34;attrlink\u0026#34;}}\u0026lt;a href=\u0026#34;{{ . }}\u0026#34;\u0026gt;{{ end }}{{ .Get \u0026#34;attr\u0026#34; | markdownify }}{{ if .Get \u0026#34;attrlink\u0026#34;}}\u0026lt;/a\u0026gt;{{ end -}}] {{ end }} \u0026lt;/span\u0026gt; \u0026lt;/figcaption\u0026gt; {{ end }} \u0026lt;/figure\u0026gt; {{ .Page.Scratch.Add \u0026#34;fig\u0026#34; 1 }} {{ $.Scratch.Delete \u0026#34;caption\u0026#34;}}   \r\r\nAnd that\u0026rsquo;s it, I got the lightbox effect going on!\nClick on the image below to see it working:\n\r\r","description":"Seeing if it sticks...","id":6,"section":"blog","tags":null,"title":"Achievement unlocked: Lightbox","uri":"https://tiagojsilva.github.io/en/blog/2021-09-02_lightbox/"},{"content":"I\u0026rsquo;ve been messing about some things behind the curtains:\nTheme changes I wanted to use a Hugo theme for documentation (structured documents), if possible with an associated blog for less structured content.\nMy wishlist was (in no particular order):\n Light / dark theme Multilanguage (i18n) Several independent sections Ability to include in the code boxes not only line numbers but also prompts outside of the text, so that they were ignored when copying the contents of the box Have command output boxes with distinct formatting  I only found this theme, Zdoc, that had most of it (Docz seems to be shaping up as an alternative), but it still lacks a lot:\n Doesn\u0026rsquo;t support command output boxes Only includes the prompts $ and \u0026gt; (and I also needed #, PS andPS#) Could not insert external configuration files inline with the page text Doesn\u0026rsquo;t have a button to copy the contents of a code box  By the way, no single Hugo theme has all these features\nCommand output I solved this with a shortcode and inline CSS formatting\n1 2  \u0026lt;pre style=\u0026#34;font-style: italic; font-size: 0.79rem\u0026#34;\u0026gt; {{.Inner}}\u0026lt;/pre\u0026gt;   Output...\r Prompts for root, PowerShell and PowerShell admin Not something to be overly proud of, the original code was drop-dead easy to copy-paste and fiddle with some values:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  var hashCodeElem = document.querySelectorAll(\u0026#39;div.language-\\\\#\u0026#39;); hashCodeElem ? hashCodeElem.forEach(function(elem) { var lnts = elem.parentNode.parentNode ? elem.parentNode.parentNode.querySelectorAll(\u0026#39;.lnt\u0026#39;) : null; lnts ? lnts.forEach(function(lnt) { lnt.innerHTML = \u0026#39;#\u0026lt;br/\u0026gt;\u0026#39;; }) : null; }) : null; var psCodeElem = document.querySelectorAll(\u0026#39;div.language-\\\\ps\u0026#39;); psCodeElem ? psCodeElem.forEach(function(elem) { var lnts = elem.parentNode.parentNode ? elem.parentNode.parentNode.querySelectorAll(\u0026#39;.lnt\u0026#39;) : null; lnts ? lnts.forEach(function(lnt) { lnt.innerHTML = \u0026#39;PS\u0026gt;\u0026lt;br/\u0026gt;\u0026#39;; }) : null; }) : null; var psadmCodeElem = document.querySelectorAll(\u0026#39;div.language-\\\\psa\u0026#39;); psadmCodeElem ? psadmCodeElem.forEach(function(elem) { var lnts = elem.parentNode.parentNode ? elem.parentNode.parentNode.querySelectorAll(\u0026#39;.lnt\u0026#39;) : null; lnts ? lnts.forEach(function(lnt) { lnt.innerHTML = \u0026#39;PS#\u0026lt;br/\u0026gt;\u0026#39;; }) : null; }) : null;   1  rm -rf /   1  Stop-Computer   1  Stop-Computer -Computer DC01   Insert external text files I could not get what I wanted but I\u0026rsquo;ve made do with:\n A shortcode to read an external file and put it inside a Code Fence:  1 2 3 4  \u0026lt;!--https://stackoverflow.com/a/45421343--\u0026gt; {{ $file := .Get \u0026#34;file\u0026#34; | readFile }} {{ $lang := .Get \u0026#34;language\u0026#34; }} {{ (print \u0026#34;```\u0026#34; $lang \u0026#34;\\n\u0026#34; $file \u0026#34;\\n```\u0026#34;) | markdownify }}    Placed inside an expand shortcode (included with Zdocs) to create a dropdown Which is preceded by a link to download the file.\nAll these shenanigans were needed because of the next problem.  Copying code blocks I could not get around this. Because of the processing that the theme does to code fences to insert the prompts, all the code I found to do this fails because it tries to copy the text from the wrong place or puts the Copy button on the wrong place.\nAnd since CINEL, bless their hearts, did not teach me CSS or DOM structure (the first year in which they stopped teaching this in my specific course), I\u0026rsquo;m a bit lost because I still haven\u0026rsquo;t grokked it.\nTitle font change The original title font of the theme was Montserrat, which was graphically very interesting, but I found that in the Black-900 weight that was being used it unbalanced the page and made reading difficult (so, too much interesting\u0026hellip;).\nI changed it to the font MPlus.\nContent Developing content to put here has been harder than I thought (also, I have a day job now). Most of what I had ready was developed as part of my Net/Sysadmin training, and I can\u0026rsquo;t very well publish it and solve everything for the new students that come through!\nI\u0026rsquo;m trying to filter the most advanced stuff that was icing on my projects and that won\u0026rsquo;t sell the farm.\nMeanwhile, I\u0026rsquo;m preparing a series of articles on Public Key Infrastructure\nKeep in touch.\nSchedule I\u0026rsquo;m going to stagger the content; each article will appear first on the Portuguese side of the site, and the following week a translated version will appear on the English side (along with a debugged Portuguese version).\nI\u0026rsquo;m aiming to publish new articles every other week\n","description":"Theme changes, content additions, etc.","id":7,"section":"blog","tags":null,"title":"August 2021 Update","uri":"https://tiagojsilva.github.io/en/blog/2021-08-28_site-update/"},{"content":"Linux Dotfiles I\u0026rsquo;ve been gathering settings that make my life easier by solving little nagging problems and papercuts.\nPublishing those files here allows me to download them wherever I create a new user account.\nThe URL for downloading will be https://tiagojsilva.github.io/unix/dotfiles/file\nThere\u0026rsquo;s a TAR archive of all the files, which you can install right in your home folder (~) with:\n1  wget -O- https://tiagojsilva.github.io/unix/dotfiles/dotfiles.tar | tar -xvf- -C ~   .bashrc \r\rExpand\r\r# ~/.bashrc: executed by bash(1) for non-login shells. # see /usr/share/doc/bash/examples/startup-files (in the package bash-doc) # for examples # If not running interactively, don't do anything case $- in *i*) ;; *) return;; esac # don't put duplicate lines or lines starting with space in the history. # See bash(1) for more options HISTCONTROL=ignoreboth # append to the history file, don't overwrite it shopt -s histappend # for setting history length see HISTSIZE and HISTFILESIZE in bash(1) HISTSIZE=1000 HISTFILESIZE=2000 # check the window size after each command and, if necessary, # update the values of LINES and COLUMNS. shopt -s checkwinsize # If set, the pattern \u0026quot;**\u0026quot; used in a pathname expansion context will # match all files and zero or more directories and subdirectories. shopt -s globstar # make less more friendly for non-text input files, see lesspipe(1) [ -x /usr/bin/lesspipe ] \u0026amp;\u0026amp; eval \u0026quot;$(SHELL=/bin/sh lesspipe)\u0026quot; # set variable identifying the chroot you work in (used in the prompt below) if [ -z \u0026quot;${debian_chroot:-}\u0026quot; ] \u0026amp;\u0026amp; [ -r /etc/debian_chroot ]; then debian_chroot=$(cat /etc/debian_chroot) fi # set a fancy prompt (non-color, unless we know we \u0026quot;want\u0026quot; color) case \u0026quot;$TERM\u0026quot; in xterm-color|*-256color) color_prompt=yes;; esac # uncomment for a colored prompt, if the terminal has the capability; turned # off by default to not distract the user: the focus in a terminal window # should be on the output of commands, not on the prompt #force_color_prompt=yes if [ -n \u0026quot;$force_color_prompt\u0026quot; ]; then if [ -x /usr/bin/tput ] \u0026amp;\u0026amp; tput setaf 1 \u0026gt;\u0026amp;/dev/null; then # We have color support; assume it's compliant with Ecma-48 # (ISO/IEC-6429). (Lack of such support is extremely rare, and such # a case would tend to support setf rather than setaf.) color_prompt=yes else color_prompt= fi fi if [ \u0026quot;$color_prompt\u0026quot; = yes ]; then PS1='${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ ' else PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ ' fi unset color_prompt force_color_prompt # If this is an xterm set the title to user@host:dir case \u0026quot;$TERM\u0026quot; in xterm*|rxvt*) PS1=\u0026quot;\\[\\e]0;${debian_chroot:+($debian_chroot)}\\u@\\h: \\w\\a\\]$PS1\u0026quot; ;; *) ;; esac # enable color support of ls and also add handy aliases if [ -x /usr/bin/dircolors ]; then #force my dircolors # test -r ~/.dircolors \u0026amp;\u0026amp; eval \u0026quot;$(dircolors -b ~/.dircolors)\u0026quot; || eval \u0026quot;$(dircolors -b)\u0026quot; source .dircolors alias ls='ls --color=auto' alias dir='dir --color=auto' #alias vdir='vdir --color=auto' alias grep='grep --color=auto' alias fgrep='fgrep --color=auto' alias egrep='egrep --color=auto' fi # colored GCC warnings and errors export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01' # some more ls aliases alias ll='ls -hlF' alias la='ls -hA' alias lla='ls -ahlF' alias l='ls -hCF' # Add an \u0026quot;alert\u0026quot; alias for long running commands. Use like so: # sleep 10; alert alias alert='notify-send --urgency=low -i \u0026quot;$([ $? = 0 ] \u0026amp;\u0026amp; echo terminal || echo error)\u0026quot; \u0026quot;$(history|tail -n1|sed -e '\\''s/^\\s*[0-9]\\+\\s*//;s/[;\u0026amp;|]\\s*alert$//'\\'')\u0026quot;' # Alias definitions. # You may want to put all your additions into a separate file like # ~/.bash_aliases, instead of adding them here directly. # See /usr/share/doc/bash-doc/examples in the bash-doc package. if [ -f ~/.bash_aliases ]; then . ~/.bash_aliases fi # enable programmable completion features (you don't need to enable # this, if it's already enabled in /etc/bash.bashrc and /etc/profile # sources /etc/bash.bashrc). if ! shopt -oq posix; then if [ -f /usr/share/bash-completion/bash_completion ]; then . /usr/share/bash-completion/bash_completion elif [ -f /etc/bash_completion ]; then . /etc/bash_completion fi fi \r\r .dircolors The same as Debian defaults, but replaces the Dark Blue for directories with Yellow.\n\r\rExpand\r\r1 2 3  export LS_COLORS=\u0026#39;rs=0:di=01;93:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:\u0026#39;; \n \r\r\n.bash_aliases \r\rExpand\r\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  alias ll=\u0026#39;ls -hlF\u0026#39; alias la=\u0026#39;ls -hA\u0026#39; alias lla=\u0026#39;ls -ahlF\u0026#39; alias cp=\u0026#39;cp -i\u0026#39; alias mv=\u0026#39;mv -i\u0026#39; alias rm=\u0026#39;rm -i --preserve-root\u0026#39; alias df=\u0026#39;df -H\u0026#39; alias du=\u0026#39;du -hs\u0026#39; alias wget=\u0026#39;wget -c\u0026#39; alias ports=\u0026#39;netstat -tulanp\u0026#39; alias cls=\u0026#39;clear\u0026#39; alias chown=\u0026#39;chown --preserve-root\u0026#39; alias chmod=\u0026#39;chmod --preserve-root\u0026#39; alias chgrp=\u0026#39;chgrp --preserve-root\u0026#39; alias srvno=\u0026#39;systemctl stop\u0026#39; alias sysno=\u0026#39;systemctl stop\u0026#39; alias srvgo=\u0026#39;systemctl start\u0026#39; alias sysgo=\u0026#39;systemctl start\u0026#39; alias srvsta=\u0026#39;systemctl start\u0026#39; alias syssta=\u0026#39;systemctl start\u0026#39; alias srvrst=\u0026#39;systemctl restart\u0026#39; alias sysrst=\u0026#39;systemctl restart\u0026#39; alias srvena=\u0026#39;systemctl enable\u0026#39; alias sysena=\u0026#39;systemctl enable\u0026#39; alias srvdis=\u0026#39;systemctl disable\u0026#39; alias sysdis=\u0026#39;systemctl disable\u0026#39; alias srvstat=\u0026#39;systemctl status\u0026#39; alias sysstat=\u0026#39;systemctl status\u0026#39; alias sudo=\u0026#39;sudo \u0026#39; \n \r\r .bash_functions \r\rExpand\r\r1 2 3 4  function mcd () { mkdir -vp -- \u0026#34;$1\u0026#34; \u0026amp;\u0026amp; cd -P -- \u0026#34;$1\u0026#34; }   \r\r .vimrc \r\rExpand\r\ru0026#34; MIT Missing Semester 2020 Lecture 3 Youtube\u0026#34; https://missing.csail.mit.edu/2020/editors/\u0026#34; Comments in Vimscript start with a `\u0026#34;`.\u0026#34; tjs: load defaultssource $VIMRUNTIME/defaults.vim\u0026#34; If you open this file in Vim, it\u0026#39;ll be syntax highlighted for you.\u0026#34; Vim is based on Vi. Setting `nocompatible` switches from the default\u0026#34; Vi-compatibility mode and enables useful Vim functionality. This\u0026#34; configuration option turns out not to be necessary for the file named\u0026#34; \u0026#39;~/.vimrc\u0026#39;, because Vim automatically enters nocompatible mode if that file\u0026#34; is present. But we\u0026#39;re including it here just in case this config file is\u0026#34; loaded some other way (e.g. saved as `foo`, and then Vim started with\u0026#34; `vim -u foo`).set nocompatible\u0026#34; Cores/temas\u0026#34;set termguicolorsset background=darkcolo industryif has(\u0026#34;gui running\u0026#34;) set guioptions-=T set guioptions+=e set t_Co=256 set guitablabel=%M\\ %t let g:gruvbox_termcolors=256 let g:gruvbox_contrast_dark=\u0026#39;medium\u0026#39; colorscheme gruvboxendif\u0026#34; Turn on syntax highlighting.syntax on\u0026#34; Disable the default Vim startup message.set shortmess+=I\u0026#34; Show line numbers.set number\u0026#34; This enables relative line numbering mode. With both number and\u0026#34; relativenumber enabled, the current line shows the true line number, while\u0026#34; all other lines (above and below) are numbered relative to the current line.\u0026#34; This is useful because you can tell, at a glance, what count is needed to\u0026#34; jump up or down to a particular line, by {count}k to go up or {count}j to go\u0026#34; down.\u0026#34;set relativenumber\u0026#34; Always show the status line at the bottom, even if you only have one window open.set laststatus=2\u0026#34; The backspace key has slightly unintuitive behavior by default. For example,\u0026#34; by default, you can\u0026#39;t backspace before the insertion point set with \u0026#39;i\u0026#39;.\u0026#34; This configuration makes backspace behave more reasonably, in that you can\u0026#34; backspace over anything.set backspace=indent,eol,start\u0026#34; By default, Vim doesn\u0026#39;t let you hide a buffer (i.e. have a buffer that isn\u0026#39;t\u0026#34; shown in any window) that has unsaved changes. This is to prevent you from \u0026#34;\u0026#34; forgetting about unsaved changes and then quitting e.g. via `:qa!`. We find\u0026#34; hidden buffers helpful enough to disable this protection. See `:help hidden`\u0026#34; for more information on this.set hidden\u0026#34; This setting makes search case-insensitive when all characters in the string\u0026#34; being searched are lowercase. However, the search becomes case-sensitive if\u0026#34; it contains any capital letters. This makes searching more convenient.set ignorecaseset smartcase\u0026#34; Enable searching as you type, rather than waiting till you press enter.set incsearch\u0026#34; Unbind some useless/annoying default key bindings.nmap Q \u0026lt;Nop\u0026gt; \u0026#34; \u0026#39;Q\u0026#39; in normal mode enters Ex mode. You almost never want this.\u0026#34; Disable audible bell because it\u0026#39;s annoying.set noerrorbells visualbell t_vb=\u0026#34; Enable mouse support. You should avoid relying on this too much, but it can\u0026#34; sometimes be convenient.set mouse+=a\u0026#34; Try to prevent bad habits like using the arrow keys for movement. This is\u0026#34; not the only possible bad habit. For example, holding down the h/j/k/l keys\u0026#34; for movement, rather than using more efficient movement commands, is also a\u0026#34; bad habit. The former is enforceable through a .vimrc, while we don\u0026#39;t know\u0026#34; how to prevent the latter.\u0026#34; Do this in normal mode...\u0026#34;nnoremap \u0026lt;Left\u0026gt; :echoe \u0026#34;Use h\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;nnoremap \u0026lt;Right\u0026gt; :echoe \u0026#34;Use l\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;nnoremap \u0026lt;Up\u0026gt; :echoe \u0026#34;Use k\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;nnoremap \u0026lt;Down\u0026gt; :echoe \u0026#34;Use j\u0026#34;\u0026lt;CR\u0026gt;\u0026#34; ...and in insert mode\u0026#34;inoremap \u0026lt;Left\u0026gt; \u0026lt;ESC\u0026gt;:echoe \u0026#34;Use h\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;inoremap \u0026lt;Right\u0026gt; \u0026lt;ESC\u0026gt;:echoe \u0026#34;Use l\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;inoremap \u0026lt;Up\u0026gt; \u0026lt;ESC\u0026gt;:echoe \u0026#34;Use k\u0026#34;\u0026lt;CR\u0026gt;\u0026#34;inoremap \u0026lt;Down\u0026gt; \u0026lt;ESC\u0026gt;:echoe \u0026#34;Use j\u0026#34;\u0026lt;CR\u0026gt;\u0026#34; escrever 4 espaços quando se usa TABset expandtabset tabstop=4set shiftwidth=4set softtabstop=4\u0026#34; open new split panes to right and bottom, which feels more naturalset splitbelowset splitrightset showmatch \u0026#34; show matching braces when text indicator is over themfiletype plugin indent on \u0026#34; enable file type detectionset autoindent\u0026#34; leader passa a ser ,let mapleader = \u0026#34;,\u0026#34;\u0026#34; Permanent undoset undodir=~/.vimdidset undofile\u0026#34; Ctrl+c and Ctrl+j as Esc\u0026#34; Ctrl-j is a little awkward unfortunately:\u0026#34; https://github.com/neovim/neovim/issues/5916\u0026#34; So we also map Ctrl+kinoremap \u0026lt;C-j\u0026gt; \u0026lt;Esc\u0026gt;nnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;inoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;vnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;snoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;xnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;cnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;onoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;lnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;tnoremap \u0026lt;C-k\u0026gt; \u0026lt;Esc\u0026gt;nnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;inoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;vnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;snoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;xnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;cnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;onoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;lnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;tnoremap \u0026lt;C-c\u0026gt; \u0026lt;Esc\u0026gt;\u0026#34; Neat X clipboard integration\u0026#34; \\p will paste clipboard into buffer\u0026#34; \\c will copy entire buffer into clipboardnoremap \u0026lt;leader\u0026gt;p :read !xsel --clipboard --output\u0026lt;cr\u0026gt;noremap \u0026lt;leader\u0026gt;c :w !xsel -ib\u0026lt;cr\u0026gt;\u0026lt;cr\u0026gt;\u0026#34; turn off search highlightvnoremap \u0026lt;C-h\u0026gt; :nohlsearch\u0026lt;cr\u0026gt;nnoremap \u0026lt;C-h\u0026gt; :nohlsearch\u0026lt;cr\u0026gt;\u0026#34; statusline\u0026#34;cores\u0026#34;terminal BG azulhi statusline ctermfg=4 \u0026#34;terminal letras cyanhi statusline ctermbg=6 set statusline= \u0026#34; clear the statusline for when vimrc is reloadedset statusline+=%-3.3n\\ \u0026#34; buffer numberset statusline+=%f\\ \u0026#34; file nameset statusline+=%h%m%r%w \u0026#34; flagsset statusline+=[%{strlen(\u0026amp;ft)?\u0026amp;ft:\u0026#39;none\u0026#39;}, \u0026#34; filetypeset statusline+=%{strlen(\u0026amp;fenc)?\u0026amp;fenc:\u0026amp;enc}, \u0026#34; encodingset statusline+=%{\u0026amp;fileformat}] \u0026#34; file formatset statusline+=%= \u0026#34; right alignset statusline+=%{synIDattr(synID(line(\u0026#39;.\u0026#39;),col(\u0026#39;.\u0026#39;),1),\u0026#39;name\u0026#39;)}\\ \u0026#34; highlightset statusline+=%b,0x%-8B\\ \u0026#34; current charset statusline+=%-14.(%l,%c%V%)\\ %\u0026lt;%P \u0026#34; offset\u0026#34; Folding\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;set foldenable \u0026#34; enable foldingset foldlevelstart=10 \u0026#34; open most folds by defaultset foldnestmax=10 \u0026#34; 10 nested fold max\u0026#34; space open/closes folds\u0026#34; nnoremap \u0026lt;space\u0026gt; zaset foldmethod=indent \u0026#34; fold based on indent level\u0026#34; This is especially useful for me since I spend my days in Python.\u0026#34; Other acceptable values are marker, manual, expr, syntax, diff.\u0026#34; Run :help foldmethod to find out what each of those do.\u0026#34; Custom Functions\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34; toggle between number and relativenumber (\\t)function! ToggleNumber() if(\u0026amp;relativenumber == 1) set norelativenumber set number else set relativenumber endifendfuncnnoremap \u0026lt;leader\u0026gt;t :call ToggleNumber()\u0026lt;CR\u0026gt;\u0026#34; Vim Markdown\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;\u0026#34;let g:markdown_fenced_languages = [ \\ \u0026#39;bash=sh\u0026#39;, \\ \u0026#39;c\u0026#39;, \\ \u0026#39;coffee\u0026#39;, \\ \u0026#39;erb=eruby\u0026#39;, \\ \u0026#39;javascript\u0026#39;, \\ \u0026#39;json\u0026#39;, \\ \u0026#39;perl\u0026#39;, \\ \u0026#39;python\u0026#39;, \\ \u0026#39;ruby\u0026#39;, \\ \u0026#39;yaml\u0026#39;, \\ \u0026#39;go\u0026#39;,\\]let g:vim_markdown_conceal = 2  \r\r .nanorc \r\rExpand\r\r## .nanorc tjs 2020-06 ## https://www.if-not-true-then-false.com/2009/tuning-nano-text-editor-with-nanorc/ # scroll by line set smooth # indent set autoindent # easy backup (ficheiro~) set backup # one line more for content set morespace # hide shortcut help # set nohelp # tab 4 spaces set tabsize 4 # convert tabs to spaces on insertion set tabstospaces ########## #sintax ## Nanorc files include \u0026quot;/usr/share/nano/nanorc.nanorc\u0026quot; ## C/C++ include \u0026quot;/usr/share/nano/c.nanorc\u0026quot; ## HTML include \u0026quot;/usr/share/nano/html.nanorc\u0026quot; ## TeX include \u0026quot;/usr/share/nano/tex.nanorc\u0026quot; ## Quoted emails (under e.g. mutt) include \u0026quot;/usr/share/nano/mutt.nanorc\u0026quot; ## Patch files include \u0026quot;/usr/share/nano/patch.nanorc\u0026quot; ## Manpages include \u0026quot;/usr/share/nano/man.nanorc\u0026quot; ## Groff include \u0026quot;/usr/share/nano/groff.nanorc\u0026quot; ## Perl include \u0026quot;/usr/share/nano/perl.nanorc\u0026quot; ## Python include \u0026quot;/usr/share/nano/python.nanorc\u0026quot; ## Ruby include \u0026quot;/usr/share/nano/ruby.nanorc\u0026quot; ## Java include \u0026quot;/usr/share/nano/java.nanorc\u0026quot; ## Assembler include \u0026quot;/usr/share/nano/asm.nanorc\u0026quot; ## Bourne shell scripts include \u0026quot;/usr/share/nano/sh.nanorc\u0026quot; ## POV-Ray include \u0026quot;/usr/share/nano/pov.nanorc\u0026quot; \r\r .tmux.conf The shortcut key becomes Ctrl-A (a lot more sensible, especially if you swap CapsLock to Ctrl), but because it collides with shell navigation you have to hold Ctrl and key A two times.\r\n\r\rExpand\r\r#### #Keybindings #### # remap prefix from 'C-b' to 'C-a' # interfere com o \u0026quot;inicio de linha\u0026quot; na shell, passa a ser C-a+C-a unbind C-b set-option -g prefix C-a bind-key C-a send-prefix # split panes using | and - bind | split-window -h bind - split-window -v unbind '\u0026quot;' unbind % # reload config file (change file location to your the tmux.conf you want to use) bind r source-file ~/.tmux.conf # switch panes using Alt-arrow without prefix bind -n M-Left select-pane -L bind -n M-Right select-pane -R bind -n M-Up select-pane -U bind -n M-Down select-pane -D # Enable mouse mode (tmux 2.1 and above) set -g mouse on ###################### ### DESIGN CHANGES ### ###################### # loud or quiet? set -g visual-activity off set -g visual-bell off set -g visual-silence off setw -g monitor-activity off set -g bell-action none # modes setw -g clock-mode-colour colour5 setw -g mode-style 'fg=colour1 bg=colour18 bold' # panes set -g pane-border-style 'fg=colour19 bg=colour0' set -g pane-active-border-style 'bg=colour0 fg=colour9' # statusbar set -g status-position bottom set -g status-justify left #set -g status-style 'bg=colour18 fg=colour137 dim' set -g status-style 'bg=blue fg=colour240' set -g status-left '' set -g status-right '#[fg=colour253,bg=colour19] %d/%m #[fg=colour253,bg=colour8] %H:%M:%S ' set -g status-right-length 50 set -g status-left-length 20 #setw -g window-status-current-style 'fg=colour1 bg=colour19 bold' setw -g window-status-current-style 'fg=brightblue bg=cyan' #setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F ' setw -g window-status-current-format ' #I#[fg=white]:#[fg=colour255]#W#[fg=black]#F ' setw -g window-status-style 'fg=colour9 bg=colour18' #setw -g window-status-style 'fg=brightred bg=brightgreen' #setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F ' setw -g window-status-format ' #I#[fg=red]:#[fg=green]#W#[fg=blue]#F ' setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold' #setw -g window-status-bell-style 'fg=red bg=white bold' # messages #set -g message-style 'fg=colour232 bg=colour16 bold' set -g message-style 'fg=white bg=red bold'  \r\n","description":"Unix/Linux dotfiles","id":8,"section":"unixlike","tags":null,"title":"Dotfiles","uri":"https://tiagojsilva.github.io/en/unixlike/dotfiles/"},{"content":"Sit down and take a load off.\nI have been fortunate to make professions of my passions; as a young\u0026rsquo;un, I had to choose one of them (Sound for Picture), but the swings and roundabouts of life led me to embrace another one, which is IT. By the end of it I ended up back where I had started, but I don\u0026rsquo;t consider it wasted time; I had wonderful teachers and colleagues, and learned a lot of stuff that I had always wanted to know.\nSo, because the monster has been awakened and I don\u0026rsquo;t want to forget everything, I decided to make this site to compile and share what I\u0026rsquo;ve been learning.\nAnd if happens to help someone else, I\u0026rsquo;m happy for it.\nWhen I finished the CET-GRSI course (Network and Systems Administration Technician) at CINEL, in 2020, I stumbled upon this video that inspired me about where to go next:\n\rWhich is really basic stuff: keep moving forward, document thoroughly, keep your ear to the ground.\nOne piece of advice has already been followed: creating a personal static website.\nIt\u0026rsquo;s right here. Welcome.\n","description":"We've got to start somewhere!","id":9,"section":"blog","tags":null,"title":"Hello World","uri":"https://tiagojsilva.github.io/en/blog/2021-08-09_hello-world/"}]